                                                        CSS Coding 
.cssbuttonstoggler{ /*style for DIV used to contain toggler links. */
width: 350px;
margin-top: 6px;
margin-left: 50px;
text-align: center; /*How to align pagination links: "left", "center", or "right"
background: white; /*always declare an explicit background color for fade effect to properly render in IE*/
overflow: hidden; /*See: http://www.quirksmode.org/css/clearing.html */
}


/*
 Total contenttoggler width: 350px+5px+5px=360px
	Or total width of wrapper div (counting wrapper border/padding)
*/

.cssbuttonstoggler a{ /*style for every navigational link within toggler */
background: transparent url('square-gray-left.gif') no-repeat top left;
color: #494949;
display: block;
float: left;
margin-right: 6px;
font: normal 13px Arial; /* Change 12px as desired */
line-height: 15px; /* This value + 4px + 4px (top and bottom padding of SPAN) must equal height of button background (default is 23px) */
height: 23px; /* Height of button background height */
padding-left: 9px; /* Width of left menu image */
text-decoration: none;
}

.cssbuttonstoggler a span{
background: transparent url(square-gray-right.gif) no-repeat top right;
display: block;
padding: 4px 9px 4px 0; /*Set 9px below to match value of 'padding-left' value above*/
}
.cssbuttonstoggler a.selected, .cssbuttonstoggler a:hover{ /*style for selected and hover page's toggler link. ".selected" class auto generated! */
background-position: bottom left;
}
.cssbuttonstoggler a.selected span, .cssbuttonstoggler a:hover span{ /*style for selected and hover page's toggler link. ".selected" class auto generated! */
background-position: bottom right;
color: black;
}
.cssbuttonstoggler a.toc{ /*style for individual toggler links (page 1, page 2, etc). ".toc" class auto generated! */
}
.cssbuttonstoggler a.prev, .glidecontenttoggler-2 a.next{ /*style for "prev" and "next" toggler links. ".prev" and ".next" classes auto generated! */
}
.cssbuttonstoggler a.prev:hover, .glidecontenttoggler-2 a.next:hover{
}

























File Access Code

<%@page import="java.util.Date"%>
<%@page import="java.util.ArrayList"%>
<%@page import="java.sql.ResultSet"%>
<%@page import="java.sql.PreparedStatement"%>
<%@page import="java.sql.DriverManager"%>
<%@page import="java.sql.Connection"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Cloud</title>
<meta name="keywords" content="free css, web template, cloudy" />
<meta name="description" content="Cloudy - free website template provided by templatemo.com" />
<link href="templatemo_style.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="css/featuredcontentglider.css" />
 <link href="css/style_2.css" rel="stylesheet" type="text/css" />
 <link href="style.css" rel="stylesheet" type="text/css" />
 
<script language="javascript" type="text/javascript">

</script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"></script>
<script type="text/javascript" src="css/featuredcontentglider.js">
     
</script>
</head>
<body>

<div id="templatemo_wrapper_outer">
<div id="templatemo_wrapper">

	<div id="temmplatmeo_header">
    
   		<div id="site_title">
                     
                    <center style="margin-left: 29px;margin-right: -640px ;color: red"> <h1>REAL CLOUD   </h1>   </center>  

            </a>
        </div>
    
    	<div id="templatemo_menu">
        
            <ul>
                <li><a href="index.jsp" class="current">Log Out</a></li>
            </ul>    	
        
        </div> <!-- end of templatemo_menu -->
    
    </div> <!-- end of templatemo_header -->
    
    <div id="templatemo_content_wrapper_top"></div>
    <div id="templatemo_content_wrapper">
    
        <div id="templatemo_banner"><span class="frame"></span>
        
			<script type="text/javascript"> 
            featuredcontentglider.init({
                gliderid: "canadaprovinces", //ID of main glider container
                contentclass: "glidecontent", //Shared CSS class name of each glider content
                togglerid: "p-select", //ID of toggler container
                remotecontent: "", //Get gliding contents from external file on server? "filename" or "" to disable
                selected: 0, //Default selected content index (0=1st)
                persiststate: false, //Remember last content shown within browser session (true/false)?
                speed: 500, //Glide animation duration (in milliseconds)
                direction: "rightleft", //set direction of glide: "updown", "downup", "leftright", or "rightleft"
                autorotate: true, //Auto rotate contents (true/false)?
                autorotateconfig: [3000, 2] //if auto rotate enabled, set [milliseconds_btw_rotations, cycles_before_stopping]
            }
                    );
            
            </script>
           
            <div id="canadaprovinces" class="glidecontentwrapper">
            
            <div class="glidecontent">
                <!--<img src="images/templatemo_image_01.jpg" alt="bird" />-->
                 <img src="images/header-bg.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_02.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_03.jpg" alt="image" />
            </div> 
            </div> 
            <div id="p-select" class="cssbuttonstoggler">
            <a href="#" class="toc"><span>1</span></a> <a href="#" class="toc"><span>2</span></a> <a href="#" class="toc"><span>3</span></a>
            
            </div> 
        </div> <!-- end of templatemo_banner -->
    	<div >     
        <tr>
            <td><table   style="width: 930px;" border="0" bgcolor="#999999" >
      <tr>
          <td width="149"><div align="center" class="style1" > <a href="Accessfile.jsp"><strong style="font-size: 17px; ;color: greenyellow"> File Access View</strong></a></div></td>
       
          <td width="149"><div align="center" class="style1" > <a href="Blockuser.jsp"><strong style="font-size: 17px; ;color: greenyellow"> User List</strong></a></div></td>
        <td width="166"><div align="center" class="style1"><a href="Filestransaction.jsp"><strong style="font-size: 17px;color: greenyellow ">Filestransaction</strong></a></div></td>
     <!--<td width="168"><div align="center" class="style1"><a href="Download.jsp"><strong style="font-size: 17px;color: greenyellow">File Download</strong></a></div></td>-->
       
      </tr>
    </table></td>
  </tr></div>
        <div align="right" style="margin-right: 100px;"> <li><a href="Verifiedfiles.jsp">Verified Files</a></li></div>
<div>
    <% String a=(String) session.getAttribute("uname");
    %> 
    
    <h4 align="left" style="margin-top:-20px;margin-right: 36px;"> Name : <font color="red"><%=a%></font></h4>
   
    </div><!-- header --><!-- header2 --><br></br>
    <!--<div align="right" style="margin-right: 100px;"> <li><a href="Verifiedfiles.jsp">Verified Files</a></li></div>-->
<div>
    <%
    //String userid1,path1,FileName1;    
    int i=1;
        try
        {          
                    String uid=(String)session.getAttribute("uid");
//MODIFICATION 1 )...    		
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/decentralize", "root", "root");
 //MODIFICATION 1 (END)...               
		//PreparedStatement pr=con.prepareStatement("select * from Reg");
            String sa="select * from files where auditor='not verified'";
            PreparedStatement pr=con.prepareStatement(sa);
            ResultSet rs=pr.executeQuery();
            ArrayList Fname=new ArrayList();
                  
            %>
            
            <div align="center" style="border-color: blue;"> 
               <table  class="table1" border="2" >
                <tr style="height: 30px; background-color: silver; color: red;">
                    <th>S.No</th>
                     <th>File Name</th>
                     <th>File Owner</th>
                     <th>Allow to User Access</th>
                     <th>Select to View</th>
                </tr>
          
                <%
                while(rs.next())
                {
                %>
               
                <tr style="height: 30px; background-color: wheat;">
                    <%
                    String Fname1=rs.getString(2);
                    //request.setAttribute("FName","Fname1");
                    Fname.add(Fname1);
                    Fname.indexOf(i);
                    Date now=new Date();
                    //int d=now;
                    request.setAttribute("TDate","Date");
                    //String uid=(String)session.getAttribute("");
                    %>
                    <form action="view.jsp" method="post">
                        <td><%=(i++)%></td> 
                        <td><%=Fname1%></td>
                        <td> Admin </td>
                        <td>
                            <!--<font color="white"><input type="radio" name="s1" value=<%=Fname1%>>Select for Decryption<br></font>-->
                        <font color="black"><input type="radio" name="s1" value="<%=Fname1%>"/>Select to access</font> 
                        </td><td>
                            <input style="background-color: green" type="submit" value="View To Verify"></input>
                        </td></form>                                  
                </tr>  
               
                     <%
                        }    
                     %>           
           </table>
            <br>
            </br>
          </div>
           <%            
            //
                       }
        catch(Exception e)
        {
            System.out.println("Exception"+e);
        }
            
     %>  
            
    </div>  
              </div>
    

        
<div id="templatemo_content_wrapper_bottom"></div> <!-- end of templatemo_wrapper -->

        <div id="templatemo_footer">
div id="templatemo_content_wrapper_bottom"></div> <!-- end of templatemo_wrapper -->

        <div id="templatemo_footer">
   	    Copyright © 2014 <a href="#">Developed By Namdev and Team</a> | <a href="http://www.iwebsitetemplate.com" target="_parent">Website Templates</a> by <a href="http://www.templatemo.com" target="_parent">Free CSS Templates</a></div>
</div>
</div>
<div align=center>This template  downloaded form <a href='http://all-free-download.com/free-website-templates/'>free website templates</a></div></body>
</html>











Admin Response 

<%@page import="java.sql.ResultSet"%>
<%@page import="java.sql.PreparedStatement"%>
<%@page import="java.sql.DriverManager"%>
<%@page import="java.sql.Connection"%>
<
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Cloud</title>
<meta name="keywords" content="free css, web template, cloudy" />
<meta name="description" content="Cloudy - free website template provided by templatemo.com" />
<link href="templatemo_style.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="css/featuredcontentglider.css" />
 <link href="css/style_2.css" rel="stylesheet" type="text/css" />
 <link href="style.css" rel="stylesheet" type="text/css" />
 
<script language="javascript" type="text/javascript">

</script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"></script>
<script type="text/javascript" src="css/featuredcontentglider.js">
</script>
</head>
<body>

<div id="templatemo_wrapper_outer">
<div id="templatemo_wrapper">

	<div id="temmplatmeo_header">
    
   		<div id="site_title">
                     
                    <center style="margin-left: 29px;margin-right: -640px ;color: red"> <h1>REAL CLOUD   </h1>   </center>  

            </a>
        </div>
    
    	<div id="templatemo_menu">
        
            <ul>
                <li><a href="index.jsp" class="current">Log Out</a></li> 
          		
            </ul>    	
        
        </div> <!-- end of templatemo_menu -->
    
    </div> <!-- end of templatemo_header -->
    
    <div id="templatemo_content_wrapper_top"></div>
    <div id="templatemo_content_wrapper"> 
        <div id="templatemo_banner"><span class="frame"></span>
        
			<script type="text/javascript">
    
            featuredcontentglider.init({
                gliderid: "canadaprovinces", //ID of main glider container
                contentclass: "glidecontent", //Shared CSS class name of each glider content
                togglerid: "p-select", //ID of toggler container
                remotecontent: "", //Get gliding contents from external file on server? "filename" or "" to disable
                selected: 0, //Default selected content index (0=1st)
                persiststate: false, //Remember last content shown within browser session (true/false)?
                speed: 500, //Glide animation duration (in milliseconds)
                direction: "rightleft", //set direction of glide: "updown", "downup", "leftright", or "rightleft"
                autorotate: true, //Auto rotate contents (true/false)?
                autorotateconfig: [3000, 2] //if auto rotate enabled, set [milliseconds_btw_rotations, cycles_before_stopping]
            }
                    );
            
            </script>
            
            <div id="canadaprovinces" class="glidecontentwrapper">
            
            <div class="glidecontent">
                <!--<img src="images/templatemo_image_01.jpg" alt="bird" />-->
                 <img src="images/header-bg.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_02.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_03.jpg" alt="image" />
            </div>
            
            </div> 
            <div id="p-select" class="cssbuttonstoggler">
            <a href="#" class="toc"><span>1</span></a> <a href="#" class="toc"><span>2</span></a> <a href="#" class="toc"><span>3</span></a>
            
            </div> 
        </div> <!-- end of templatemo_banner -->
    	<div >     
        <tr>
            <td><table   style="width: 930px;" border="0" bgcolor="#999999" >
      <tr>
          <td width="149"><div align="center" class="style1" > <li class ="selected"><a href="Viewprofile.jsp"><strong style="font-size: 17px; ;color: greenyellow">Profile</strong></a></li></div></td>
     
          <td width="149"><div align="center" class="style1" > <a href="Fileview.jsp"><strong style="font-size: 17px; ;color: greenyellow">View Files</strong></a></div></td>
        <td width="166"><div align="center" class="style1"><a href="Adminresponse.jsp"><strong style="font-size: 17px;color: greenyellow ">Request Status</strong></a></div></td>
        <td width="168"><div align="center" class="style1"><a href="Download.jsp"><strong style="font-size: 17px;color: greenyellow">File Download</strong></a></div></td>
        
      </tr>
    </table></td>
  </tr></div>
        <br></br>
      <% 
    	try
        {
            int i=1;
            String uid=(String)session.getAttribute("uid1");
            
//MODIFICATION 1 )...    		
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection con1 = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/decentralize", "root", "root");
 //MODIFICATION 1 (END)...       
            //PreparedStatement pr=con.prepareStatement("select * from Reg");
            String sa="select * from requestst where userid='"+uid+"'"; // and Upload='u'";
            PreparedStatement pr=con1.prepareStatement(sa);
            ResultSet rs=pr.executeQuery();
		%>
        
                <table bgcolor="lightblue" border="2" style="margin-left: 10px;">
            <tr >
                <th>S.No</th><th>File Name</th><th>User Name</th><th>Key</th><th>Request</th><th>Date of Request</th><th>Response</th><th>Date of Response</th><th>Download status</th>
            </tr>
             <%
            while(rs.next())
            {
            String FName=rs.getString(3);
            String UName=(String)session.getAttribute("uname1");
            String key1=rs.getString(4);
            String request1=rs.getString(5);
            String drequest=rs.getString(6);
            String response1=rs.getString(7);
            String dresponse=rs.getString(8);
            String ds=rs.getString(9);
                        %>
            <tr>
                <%--    <td><%=(i++)%></td><td><%=%>now</td><td><%=UName%></td><%=%>   --%>
                <td><%=(i++)%></td><td><%=FName%></td><td><%=UName%></td><td><%=key1%></td><td><%=request1%></td><td><%=drequest%></td><td><%=response1%></td><td><%=dresponse%></td><td><%=ds%></td>
            </tr>
            <%
               }
             %>
             
            </table>	
	<%	}
        catch(Exception e)
		{
			System.out.println(e);
		}
    	       
    %>
        </div>






















    						Block User
<%@page import="java.util.Date"%>
<%@page import="java.util.ArrayList"%>
<%@page import="java.sql.ResultSet"%>
<%@page import="java.sql.PreparedStatement"%>
<%@page import="java.sql.DriverManager"%>
<%@page import="java.sql.Connection"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Cloud</title>
<meta name="keywords" content="free css, web template, cloudy" />
<meta name="description" content="Cloudy - free website template provided by templatemo.com" />
<link href="templatemo_style.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="css/featuredcontentglider.css" />
 <link href="css/style_2.css" rel="stylesheet" type="text/css" />
 <link href="style.css" rel="stylesheet" type="text/css" />
 
<script language="javascript" type="text/javascript">

</script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"></script>
<script type="text/javascript" src="css/featuredcontentglider.js">
     </script>
</head>
<body>

<div id="templatemo_wrapper_outer">
<div id="templatemo_wrapper">

	<div id="temmplatmeo_header">
    
   		<div id="site_title">
                     
                    <center style="margin-left: 29px;margin-right: -640px ;color: red"> <h1>REAL CLOUD   </h1>   </center>  

            </a>
        </div>
    
    	<div id="templatemo_menu">
        
            <ul>
                <li><a href="index.jsp" class="current">Log Out</a></li> 
          		
            </ul>    	
        
        </div> <!-- end of templatemo_menu -->
    
    </div> <!-- end of templatemo_header -->
    
    <div id="templatemo_content_wrapper_top"></div>
    <div id="templatemo_content_wrapper">
    
        <div id="templatemo_banner"><span class="frame"></span>
        
			<script type="text/javascript">
    
            featuredcontentglider.init({
                gliderid: "canadaprovinces", //ID of main glider container
                contentclass: "glidecontent", //Shared CSS class name of each glider content
                togglerid: "p-select", //ID of toggler container
                remotecontent: "", //Get gliding contents from external file on server? "filename" or "" to disable
                selected: 0, //Default selected content index (0=1st)
                persiststate: false, //Remember last content shown within browser session (true/false)?
                speed: 500, //Glide animation duration (in milliseconds)
                direction: "rightleft", //set direction of glide: "updown", "downup", "leftright", or "rightleft"
                autorotate: true, //Auto rotate contents (true/false)?
                autorotateconfig: [3000, 2] //if auto rotate enabled, set [milliseconds_btw_rotations, cycles_before_stopping]
            }
                    );
            
            </script>
            
            <div id="canadaprovinces" class="glidecontentwrapper">
            
            <div class="glidecontent">
                <!--<img src="images/templatemo_image_01.jpg" alt="bird" />-->
                 <img src="images/header-bg.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_02.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_03.jpg" alt="image" />
            </div>
            
            </div>
            
            <div id="p-select" class="cssbuttonstoggler">
            <a href="#" class="toc"><span>1</span></a> <a href="#" class="toc"><span>2</span></a> <a href="#" class="toc"><span>3</span></a>
            
            </div>
        
        
        </div> <!-- end of templatemo_banner -->
    	<div >     
        <tr>
            <td><table   style="width: 930px;" border="0" bgcolor="#999999" >
      <tr>
          <td width="149"><div align="center" class="style1" > <a href="Accessfile.jsp"></a><strong style="font-size: 17px; ;color: greenyellow">File Access View</strong></a></div></td>
     
          <td width="149"><div align="center" class="style1" > <a href="Blockuser.jsp"><strong style="font-size: 17px; ;color: greenyellow"> User List</strong></a></div></td>
        <td width="166"><div align="center" class="style1"><a href="Filestransaction.jsp"><strong style="font-size: 17px;color: greenyellow ">Filestransaction</strong></a></div></td>
        <!--<td width="168"><div align="center" class="style1"><a href="Download.jsp"><strong style="font-size: 17px;color: greenyellow">File Download</strong></a></div></td>-->
       
      </tr>
    </table></td>
  </tr></div>
        <div align="right" style="margin-right: 100px;"> <li><a href="unblock.jsp">Requested Users</a></li></div>
<div align="center">
    <h2> Userlist </h2>
    <table  class="table1" border="2">
    <%
       	try
		{
	  //MODIFICATION 2 )...    		
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/decentralize", "root", "root");
 //MODIFICATION 2 (END)...          
  	//PreparedStatement pr=con.prepareStatement("select * from Reg");
                String sa="select * from register";
                PreparedStatement pr=con.prepareStatement(sa);
                ResultSet rs=pr.executeQuery();
		%>
                <tr style="height: 30px; background-color: mediumaquamarine;">
		<th>User ID</th>
		<th>User Name</th>
		<th>User City</th>
		<th>User Email</th>
                <th>Status</th>
                </tr>
                
		<% 
		while(rs.next())
		{%>
                <form action="blockusr" method="post">
                    <tr style="height: 30px; background-color: lightpink;"><td><%=rs.getString(1)%></td>
                        <td><input type="text" style="background-color: lightpink" name="snme" value="<%=rs.getString(2)%>"></input></td>
			<td ><%=rs.getString(4)%></td>
			<td><%=rs.getString(5)%></td>
                        <td><select name="access">
                                <option name="all">Access</option>>
                                <option name="den">Denied</option>>
                            </select></td>
                        <td> <input type="submit" style="background-color: yellowgreen;" value="Continue"></input></td>
                        </tr>
                       
                </form>	
			
	<%	}
	con.close();
	pr.close();
	rs.close();
		
		}
		
	
		catch(Exception e)
		{
			System.out.println(e);
		}
		
    %></table>
    <br></br>
</div></div>>
    











De Dublication Code

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Cloud</title>
<meta name="keywords" content="free css, web template, cloudy" />
<meta name="description" content="Cloudy - free website template provided by templatemo.com" />
<link href="templatemo_style.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="css/featuredcontentglider.css" />
 <link href="css/style_2.css" rel="stylesheet" type="text/css" />
 <link href="style.css" rel="stylesheet" type="text/css" />
 
<script language="javascript" type="text/javascript">

</script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"></script>
<script type="text/javascript" src="css/featuredcontentglider.js">
     
</script>
</head>
<body>

<div id="templatemo_wrapper_outer">
<div id="templatemo_wrapper">

	<div id="temmplatmeo_header">
    
   		<div id="site_title">
                     
                    <center style="margin-left: 29px;margin-right: -640px ;color: red"> <h1>REAL CLOUD   </h1>   </center>  

            </a>
        </div>
    
    	<div id="templatemo_menu">
        
            <ul>
                <li><a href="index.jsp" class="current">Log Out</a></li>
		
            </ul>    	
        
        </div> <!-- end of templatemo_menu -->
    
    </div> <!-- end of templatemo_header -->
    
    <div id="templatemo_content_wrapper_top"></div>
    <div id="templatemo_content_wrapper">
    
        <div id="templatemo_banner"><span class="frame"></span>
        
			<script type="text/javascript">
    
            featuredcontentglider.init({
                gliderid: "canadaprovinces", //ID of main glider container
                contentclass: "glidecontent", //Shared CSS class name of each glider content
                togglerid: "p-select", //ID of toggler container
                remotecontent: "", //Get gliding contents from external file on server? "filename" or "" to disable
                selected: 0, //Default selected content index (0=1st)
                persiststate: false, //Remember last content shown within browser session (true/false)?
                speed: 500, //Glide animation duration (in milliseconds)
                direction: "rightleft", //set direction of glide: "updown", "downup", "leftright", or "rightleft"
                autorotate: true, //Auto rotate contents (true/false)?
                autorotateconfig: [3000, 2] //if auto rotate enabled, set [milliseconds_btw_rotations, cycles_before_stopping]
            }
                    );
            
            </script>
            
            <div id="canadaprovinces" class="glidecontentwrapper">
            
            <div class="glidecontent">
                <!--<img src="images/templatemo_image_01.jpg" alt="bird" />-->
                 <img src="images/header-bg.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_02.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_03.jpg" alt="image" />
            </div>
            
            </div>
            
            <div id="p-select" class="cssbuttonstoggler">
            <a href="#" class="toc"><span>1</span></a> <a href="#" class="toc"><span>2</span></a> <a href="#" class="toc"><span>3</span></a>
            
            </div> 
        
        </div> <!-- end of templatemo_banner -->
    	<div >     
        <tr>
            <td><table   style="width: 930px;" border="0" bgcolor="#999999" >
      <tr>
          <td width="149"><div align="center" class="style1" > <li class ="selected"><a href="Deduplication.jsp"><strong style="font-size: 17px; ;color: greenyellow">Deduplication</strong></a></li></div></td>
        <td width="166"><div align="center" class="style1"><a href="encryption.jsp"><strong style="font-size: 17px;color: greenyellow ">Encryption</strong></a></div></td>
        <td width="168"><div align="center" class="style1"><a href="Upload.jsp"><strong style="font-size: 17px;color: greenyellow">Upload Details</strong></a></div></td>
       <td width="168"><div align="center" class="style1"><a href="Userrequest.jsp"><strong style="font-size: 17px;color: greenyellow">User Request</strong></a></div></td>
       <td width="168"><div align="center" class="style1"><a href="Downloadhistory.jsp"><strong style="font-size: 17px;color: greenyellow">Download History</strong></a></div></td>
       
      </tr>
    </table></td>
  </tr></div>
        
       <br>
             <br>  
                            <div align="center"> <img width="400" height="200" src="images1/duplication.jpg" alt="" style="border-radius:20px" /></div>
   <br>  </br>
                            <form action="gotocheck" enctype="multipart/form-data" method="post">
    <div class="login4" align="center">
        <table border="0"  bgcolor="#999999" style="">
            <tr>   <input class="login-inputex"  type="file" name="file" style="width: 200px;color:red;font-size:20px;" value="Choose File"></input>
                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <input  class="login-submitex" type="submit" value="Submit to Check File" style="width: 200px; color:green;font-size:20px;"></input></tr>
        </table>
           <% 
String b=request.getAttribute("id1")!=null?request.getAttribute("id1").toString():"";
%><p style="font:larger;font-size:x-large ; color: crimson">
<%=b%></p>
    </div>
    </form>
        </div>
    
















Code For Download

<%@page import="java.util.Date"%>
<%@page import="java.util.ArrayList"%>
<%@page import="java.sql.ResultSet"%>
<%@page import="java.sql.PreparedStatement"%>
<%@page import="java.sql.DriverManager"%>
<%@page import="java.sql.Connection"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Cloud</title>
<meta name="keywords" content="free css, web template, cloudy" />
<meta name="description" content="Cloudy - free website template provided by templatemo.com" />
<link href="templatemo_style.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="css/featuredcontentglider.css" />
 <link href="css/style_2.css" rel="stylesheet" type="text/css" />
 <link href="style.css" rel="stylesheet" type="text/css" />
 
<script language="javascript" type="text/javascript">

</script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"></script>
<script type="text/javascript" src="css/featuredcontentglider.js">
     
</script>
</head>
<body>

<div id="templatemo_wrapper_outer">
<div id="templatemo_wrapper">

	<div id="temmplatmeo_header">
    
   		<div id="site_title">
                     
                    <center style="margin-left: 29px;margin-right: -640px ;color: red"> <h1>REAL CLOUD   </h1>   </center>  

            </a>
        </div>
    
    	<div id="templatemo_menu">
        
            <ul>
                <li><a href="index.jsp" class="current">Log Out</a></li> 
          		
            </ul>    	
        
        </div> <!-- end of templatemo_menu -->
    
    </div> <!-- end of templatemo_header -->
    
    <div id="templatemo_content_wrapper_top"></div>
    <div id="templatemo_content_wrapper">
    
        <div id="templatemo_banner"><span class="frame"></span>
        
			<script type="text/javascript">
    
            featuredcontentglider.init({
                gliderid: "canadaprovinces", //ID of main glider container
                contentclass: "glidecontent", //Shared CSS class name of each glider content
                togglerid: "p-select", //ID of toggler container
                remotecontent: "", //Get gliding contents from external file on server? "filename" or "" to disable
                selected: 0, //Default selected content index (0=1st)
                persiststate: false, //Remember last content shown within browser session (true/false)?
                speed: 500, //Glide animation duration (in milliseconds)
                direction: "rightleft", //set direction of glide: "updown", "downup", "leftright", or "rightleft"
                autorotate: true, //Auto rotate contents (true/false)?
                autorotateconfig: [3000, 2] //if auto rotate enabled, set [milliseconds_btw_rotations, cycles_before_stopping]
            }
                    );
            
            </script>
            
            <div id="canadaprovinces" class="glidecontentwrapper">
            
            <div class="glidecontent">
                <!--<img src="images/templatemo_image_01.jpg" alt="bird" />-->
                 <img src="images/header-bg.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_02.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_03.jpg" alt="image" />
            </div>
            
            </div>
            
            <div id="p-select" class="cssbuttonstoggler">
            <a href="#" class="toc"><span>1</span></a> <a href="#" class="toc"><span>2</span></a> <a href="#" class="toc"><span>3</span></a>
            
            </div> 
        
        </div> <!-- end of templatemo_banner -->
    	<div >     
        <tr>
            <td><table   style="width: 930px;" border="0" bgcolor="#999999" >
      <tr>
          <td width="149"><div align="center" class="style1" > <li class ="selected"><a href="Viewprofile.jsp"><strong style="font-size: 17px; ;color: greenyellow">Profile</strong></a></li></div></td>
     
          <td width="149"><div align="center" class="style1" > <a href="Fileview.jsp"><strong style="font-size: 17px; ;color: greenyellow">View Files</strong></a></div></td>
        <td width="166"><div align="center" class="style1"><a href="Adminresponse.jsp"><strong style="font-size: 17px;color: greenyellow ">Request Status</strong></a></div></td>
        <td width="168"><div align="center" class="style1"><a href="Download.jsp"><strong style="font-size: 17px;color: greenyellow">File Download</strong></a></div></td>
        
      </tr>
    </table></td>
  </tr></div>
        <br>
        </br>
<!--        <div>    <img width="400" height="200" src="images1/download.jpg" alt="" style="border-radius:20px" ></img></div>-->
      <form action="downloadfile" method="post">
<%
    //String userid1,path1,FileName1;    
    int i=1;
        try
        {          
                       String uid=(String)session.getAttribute("uid1");
  
//MODIFICATION 1 )...    		
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection con1 = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/decentralize", "root", "root");
 //MODIFICATION 1 (END)...  
		//PreparedStatement pr=con.prepareStatement("select * from Reg");
            String sa="select * from requestst where userid='"+uid+"' and Response='Done'";
            PreparedStatement pr=con1.prepareStatement(sa);
            ResultSet rs=pr.executeQuery();
            
            ArrayList Fname=new ArrayList();
          %>
            <br>
                <br>    <br>    
                             <div>
        <% String a=(String) session.getAttribute("uname1");
    %>
        <h4 align="right" style="margin-top:-20px;margin-right: 36px;"> Name : <font color="red"><%=a%></font></h4>
   </div>
            <div align="center">
                <table border="2" bgcolor="pink" style="margin-top: 10px;">
                <tr>
                     <td>S.No</td>
                     <td>File Name</td>
                     <td>File Key</td>
                </tr>
          
                <%
                while(rs.next())
                {
                %>
                <tr>
                    <%
                    String Fname1=rs.getString(3);
                    String key1=rs.getString(4);
                    //request.setAttribute("FName","Fname1");
                    Fname.add(Fname1);
                    Fname.indexOf(i);
                    Date now=new Date();
                    //int d=now;
                    request.setAttribute("TDate","Date");
                    %>
                        <td><%=(i++)%></td> 
                        <td><%=Fname1%></td>
                        <td><%=key1%></td>
                       <!-- <td><font color="white"><input type="radio" name="s" value=</%=Fname1%>>Select for Download<br></font></td>  -->                                    
                
                </tr>    
                     <%
                        }    
                     %>           
            </table><br></br>
           <table bgcolor="lightblue" border="1">
               <tr><td>
           File Name  : <input type="text" name="File"></input>
           <br></br></td></tr>
               <tr><td>
           Public Key  : <input type="password" name="POwner"></input>
           <br></br></td></tr>
               <tr><td>
           Private Key : <input type="password" name="PUser" ></input>
           <br></br></td></tr>
               <tr align="center"><td>
           <input type="submit" value="Download"/>
                   </td></tr>
           </table>
           
            
            </div>
           <%            
            //
                       }
        catch(Exception e)
        {
            System.out.println("Exception"+e);
        }
            
     %>  
    </form>
        </div>



















    
Download Histroy Code

<%@page import="java.util.Date"%>
<%@page import="java.util.ArrayList"%>
<%@page import="java.sql.ResultSet"%>
<%@page import="java.sql.PreparedStatement"%>
<%@page import="java.sql.DriverManager"%>
<%@page import="java.sql.Connection"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Cloud</title>
<meta name="keywords" content="free css, web template, cloudy" />
<meta name="description" content="Cloudy - free website template provided by templatemo.com" />
<link href="templatemo_style.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="css/featuredcontentglider.css" />
 <link href="css/style_2.css" rel="stylesheet" type="text/css" />
 <link href="style.css" rel="stylesheet" type="text/css" />
 
<script language="javascript" type="text/javascript">

</script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"></script>
<script type="text/javascript" src="css/featuredcontentglider.js">
     </script>
</head>
<body>

<div id="templatemo_wrapper_outer">
<div id="templatemo_wrapper">

	<div id="temmplatmeo_header">
    
   		<div id="site_title">
                     
                    <center style="margin-left: 29px;margin-right: -640px ;color: red"> <h1>REAL CLOUD   </h1>   </center>  

            </a>
        </div>
    
    	<div id="templatemo_menu">
        
            <ul>
                <li><a href="index.jsp" class="current">Log Out</a></li>
	
            </ul>    	
        
        </div> <!-- end of templatemo_menu -->
    
    </div> <!-- end of templatemo_header -->
    
    <div id="templatemo_content_wrapper_top"></div>
    <div id="templatemo_content_wrapper">
    
        <div id="templatemo_banner"><span class="frame"></span>
        
			<script type="text/javascript">
    
            featuredcontentglider.init({
                gliderid: "canadaprovinces", //ID of main glider container
                contentclass: "glidecontent", //Shared CSS class name of each glider content
                togglerid: "p-select", //ID of toggler container
                remotecontent: "", //Get gliding contents from external file on server? "filename" or "" to disable
                selected: 0, //Default selected content index (0=1st)
                persiststate: false, //Remember last content shown within browser session (true/false)?
                speed: 500, //Glide animation duration (in milliseconds)
                direction: "rightleft", //set direction of glide: "updown", "downup", "leftright", or "rightleft"
                autorotate: true, //Auto rotate contents (true/false)?
                autorotateconfig: [3000, 2] //if auto rotate enabled, set [milliseconds_btw_rotations, cycles_before_stopping]
            }
                    );
            
            </script>
            
            <div id="canadaprovinces" class="glidecontentwrapper">
            
            <div class="glidecontent">
                <!--<img src="images/templatemo_image_01.jpg" alt="bird" />-->
                 <img src="images/header-bg.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_02.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_03.jpg" alt="image" />
            </div>
            
            </div>
            
            <div id="p-select" class="cssbuttonstoggler">
            <a href="#" class="toc"><span>1</span></a> <a href="#" class="toc"><span>2</span></a> <a href="#" class="toc"><span>3</span></a>
            
            </div> 
        </div> <!-- end of templatemo_banner -->
    	<div >     
        <tr>
            <td><table   style="width: 930px;" border="0" bgcolor="#999999" >
      <tr>
          <td width="149"><div align="center" class="style1" > <li class ="selected"><a href="Deduplication.jsp"><strong style="font-size: 17px; ;color: greenyellow">Deduplication</strong></a></li></div></td>
        <td width="166"><div align="center" class="style1"><a href="encryption.jsp"><strong style="font-size: 17px;color: greenyellow ">Encryption</strong></a></div></td>
        <td width="168"><div align="center" class="style1"><a href="Upload.jsp"><strong style="font-size: 17px;color: greenyellow">Upload Details</strong></a></div></td>
       <td width="168"><div align="center" class="style1"><a href="Userrequest.jsp"><strong style="font-size: 17px;color: greenyellow">User Request</strong></a></div></td>
       <td width="168"><div align="center" class="style1"><a href="Downloadhistory.jsp"><strong style="font-size: 17px;color: greenyellow">Download History</strong></a></div></td>
       
      </tr>
    </table></td>
  </tr></div>
        
    <br></br><br></br>
       <div>
    <%
    //String userid1,path1,FileName1;    
    int i=1;
        try
        {          
                       String uid=(String)session.getAttribute("uid");
//MODIFICATION 1 )...    		
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/decentralize", "root", "root");
 //MODIFICATION 1 (END)...               
		//PreparedStatement pr=con.prepareStatement("select * from Reg");
            String sa="select * from requestst where Request='Sent'";
            PreparedStatement pr=con.prepareStatement(sa);
            ResultSet rs=pr.executeQuery();
            
            ArrayList Fname=new ArrayList();
                       %>
            
                       <div align="center">
                           <table bgcolor="lightgreen" border="2"style="border-color: blueviolet;" >
                <tr style="font-style: italic;color: red">
                     <th>S.No</th>
                     <th>File Name</th>
                     <th>User ID</th>
                     <th>Requested User</th>                     
                     <th>Date</th>
                     <th>Response</th>
                     <th>Response Date</th>
                     <th>Download Status</th>
              </tr>
          
                <%
                while(rs.next())
                {
                %>
                <tr>
                    <%
                    String Fname1=rs.getString(3);
                    //request.setAttribute("FName","Fname1");
                    String user=rs.getString(1);
                    String uname=rs.getString(2);                    
                    String date=rs.getString(6);
                    String res1=rs.getString(7);
                    String dres=rs.getString(8);
                    String dow=rs.getString(9);
                    Fname.add(Fname1);
                    Fname.indexOf(i);
                    Date now=new Date();
                    //int d=now;
                    request.setAttribute("TDate","Date");
                    %>
                        <td><%=(i++)%></td> 
                        <td><%=Fname1%></td>
                        <td><%=user%></td>
                        <td><%=uname%></td>
                        <td><%=date%></td>
                        <td><%=res1%></td>
                        <td><%=dres%></td>
                        <td><%=dow%></td>
                </tr> 
                
                     <%
                     
                        }    
                     %>  
           </table>
           
          <!-- <input type="submit" value="SEND">-->
            </div>
           <%            
            //
                       }
        catch(Exception e)
        {
            System.out.println("Exception"+e);
        }
     %>      
    </div>  
        </div>
    				          File Transaction Code

<%@page import="java.util.Date"%>
<%@page import="java.util.ArrayList"%>
<%@page import="java.sql.ResultSet"%>
<%@page import="java.sql.PreparedStatement"%>
<%@page import="java.sql.DriverManager"%>
<%@page import="java.sql.Connection"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Cloud</title>
<meta name="keywords" content="free css, web template, cloudy" />
<meta name="description" content="Cloudy - free website template provided by templatemo.com" />
<link href="templatemo_style.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="css/featuredcontentglider.css" />
 <link href="css/style_2.css" rel="stylesheet" type="text/css" />
 <link href="style.css" rel="stylesheet" type="text/css" />
 
<script language="javascript" type="text/javascript">

</script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"></script>
<script type="text/javascript" src="css/featuredcontentglider.js">
     
</script>
</head>
<body>

<div id="templatemo_wrapper_outer">
<div id="templatemo_wrapper">

	<div id="temmplatmeo_header">
    
   		<div id="site_title">
                     
                    <center style="margin-left: 29px;margin-right: -640px ;color: red"> <h1>REAL CLOUD   </h1>   </center>  

            </a>
        </div>
    
    	<div id="templatemo_menu">
        
            <ul>
                <li><a href="index.jsp" class="current">Log Out</a></li>
		
            </ul>    	
        
        </div> <!-- end of templatemo_menu -->
    
    </div> <!-- end of templatemo_header -->
    
    <div id="templatemo_content_wrapper_top"></div>
    <div id="templatemo_content_wrapper">
    
    	
    
        <div id="templatemo_banner"><span class="frame"></span>
        
			<script type="text/javascript">
    
            featuredcontentglider.init({
                gliderid: "canadaprovinces", //ID of main glider container
                contentclass: "glidecontent", //Shared CSS class name of each glider content
                togglerid: "p-select", //ID of toggler container
                remotecontent: "", //Get gliding contents from external file on server? "filename" or "" to disable
                selected: 0, //Default selected content index (0=1st)
                persiststate: false, //Remember last content shown within browser session (true/false)?
                speed: 500, //Glide animation duration (in milliseconds)
                direction: "rightleft", //set direction of glide: "updown", "downup", "leftright", or "rightleft"
                autorotate: true, //Auto rotate contents (true/false)?
                autorotateconfig: [3000, 2] //if auto rotate enabled, set [milliseconds_btw_rotations, cycles_before_stopping]
            }
                    );
            
            </script>
            
            <div id="canadaprovinces" class="glidecontentwrapper">
            
            <div class="glidecontent">
                <!--<img src="images/templatemo_image_01.jpg" alt="bird" />-->
                 <img src="images/header-bg.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_02.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_03.jpg" alt="image" />
            </div>
            
            </div>
            
            <div id="p-select" class="cssbuttonstoggler">
            <a href="#" class="toc"><span>1</span></a> <a href="#" class="toc"><span>2</span></a> <a href="#" class="toc"><span>3</span></a>
            
            </div>
        
        
        </div> <!-- end of templatemo_banner -->
    	<div >     
        <tr>
            <td><table   style="width: 930px;" border="0" bgcolor="#999999" >
      <tr>
          <!--<td width="149"><div align="center" class="style1" > <a href="Accessfile.jsp"></a><strong style="font-size: 17px; ;color: greenyellow">File Access View</strong></a></div></td>-->
      <td width="149"><div align="center" class="style1" > <a href="Accessfile.jsp"><strong style="font-size: 17px; ;color: greenyellow"> File Access View</strong></a></div></td>
       
          <td width="149"><div align="center" class="style1" > <a href="Blockuser.jsp"><strong style="font-size: 17px; ;color: greenyellow"> User List</strong></a></div></td>
        <td width="166"><div align="center" class="style1"><a href="Filestransaction.jsp"><strong style="font-size: 17px;color: greenyellow ">Filestransaction</strong></a></div></td>
        <!--<td width="168"><div align="center" class="style1"><a href="Download.jsp"><strong style="font-size: 17px;color: greenyellow">File Download</strong></a></div></td>-->
       
      </tr>
    </table></td>
        </tr></div>
      <div align="center" >
          <h2 style="color: red;"> Transaction Details </h2>
 
         <%
    //String userid1,path1,FileName1;    
    int i=1;
        try
        {          
            //String name=(String)session.getAttribute("uname");
            
            String uid=(String)session.getAttribute("uid");
              //MODIFICATION 2 )...    		
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/decentralize", "root", "root");
 //MODIFICATION 2 (END)...          
  	//PreparedStatement pr=con.prepareStatement("select * from Reg");
            String sa="select * from requestst where request='Sent' and response='Done'";
            PreparedStatement pr=con.prepareStatement(sa);
            ResultSet rs=pr.executeQuery();
            %>
            <div align="center" style="border-color: #0033ff;">
                <table bgcolor="lightpink" border="2" style="padding: 5px;" >
                    <tr style="color: blue;">
                     <th>S.No</th>
                     <th>File Name</th>
                     <th>User ID</th>
                     
                     <th>Request</th>
                     
                     <th>Date</th>
                     <th>Response</th>
                     <th>Date</th>
                         
                </tr>
          
                <%
                while(rs.next())
                {
                %>
                <tr>
                    <%
                    String Fname1=rs.getString(3);
                    String user1=rs.getString(1);
                    String d1=rs.getString(5);
                    String d2=rs.getString(6);
                    String d3=rs.getString(7);
                    String d4=rs.getString(8);
                    //String status=rs.getString(7);
                    //String date=rs.getString(8);
                    //request.setAttribute("FName","Fname1");
                 
                    
                    //int d=now;
                    request.setAttribute("TDate","Date");
                    %>
                        <td><%=(i++)%></td> 
                        <td><%=Fname1%></td>
                        <td><%=user1%></td>  
                        <td><%=d1%></td>
                        <td><%=d2%></td>
                        <td><%=d3%></td>
                        <td><%=d4%></td>
                  <!--      <td><%//=status%></td>  
                        <td><%//=date%></td>  -->
                
                </tr>    
                     <%
                        }    
                     %>           
           </table>
           
           
            </div>
           <%            
            //
                       }
        catch(Exception e)
        {
            System.out.println("Exception"+e);
        }
            
     %> 
    </div>
              </div>














Login Code

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Cloud</title>
<meta name="keywords" content="free css, web template, cloudy" />
<meta name="description" content="Cloudy - free website template provided by templatemo.com" />
<link rel="stylesheet" href="css/style.css" media="screen" type="text/css" />
<link href="templatemo_style.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="css/featuredcontentglider.css" />
<script language="javascript" type="text/javascript">

</script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"></script>
<script type="text/javascript" src="css/featuredcontentglider.js">
</script>
</head>
<body>

<div id="templatemo_wrapper_outer">
<div id="templatemo_wrapper">

	<div id="temmplatmeo_header">
    
   		<div id="site_title">
                     
                    <center style="margin-left: 29px;margin-right: -640px ;color: red"> <h1>REAL CLOUD   </h1>   </center>  
           	<!--<a href="http://www.templatemo.com" target="_parent">-->
<!--            	<img src="images/templatemo_logo.png" alt="free css template" />
            	<span>designed by templatemo.com</span>-->
            </a>
        </div>
    
    	<div id="templatemo_menu">
        
            <ul>
                <li><a href="index.jsp" target="_parent">Home</a></li>
                <li><a href=Login.jsp class="current">Login</a></li>
                <li><a href=Newuser.jsp target="_parent"> Registration</a></li>
          		
            </ul>    	
        
        </div> <!-- end of templatemo_menu -->
    
    </div> <!-- end of templatemo_header -->
    
    <div id="templatemo_content_wrapper_top"></div>
    <div id="templatemo_content_wrapper">
    
    	
    
        <div id="templatemo_banner"><span class="frame"></span>
        
			<script type="text/javascript">
    
            featuredcontentglider.init({
                gliderid: "canadaprovinces", //ID of main glider container
                contentclass: "glidecontent", //Shared CSS class name of each glider content
                togglerid: "p-select", //ID of toggler container
                remotecontent: "", //Get gliding contents from external file on server? "filename" or "" to disable
                selected: 0, //Default selected content index (0=1st)
                persiststate: false, //Remember last content shown within browser session (true/false)?
                speed: 500, //Glide animation duration (in milliseconds)
                direction: "rightleft", //set direction of glide: "updown", "downup", "leftright", or "rightleft"
                autorotate: true, //Auto rotate contents (true/false)?
                autorotateconfig: [3000, 2] //if auto rotate enabled, set [milliseconds_btw_rotations, cycles_before_stopping]
            }
                    );
            
            </script>
            
            <div id="canadaprovinces" class="glidecontentwrapper">
            
            <div class="glidecontent">
                <!--<img src="images/templatemo_image_01.jpg" alt="bird" />-->
                 <img src="images/3.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/2.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/4.jpg" alt="image" />
            </div>
            
            </div>
            
            <div id="p-select" class="cssbuttonstoggler">
            <a href="#" class="toc"><span>1</span></a> <a href="#" class="toc"><span>2</span></a> <a href="#" class="toc"><span>3</span></a>
            
            </div>
        
        
        </div> <!-- end of templatemo_banner -->
    	    <form action="Login2" method="post">
                <div style="float:left; color: #cccccc ;margin-left:30px; ">

        <img src="images1/Login.jpg" alt="image" width="550"  ></img>
  
    </div>
<div class="login-card">
   <%
String s=request.getAttribute("msg1")!=null?request.getAttribute("msg1").toString():"";
String s1=request.getAttribute("msg")!=null?request.getAttribute("msg").toString():"";
String s3=request.getAttribute("name")!=null?request.getAttribute("name" ).toString():"";
String s4=request.getAttribute("pwd")!=null?request.getAttribute("pwd" ).toString():"";

%>
  <p style=" color:orangered ;font-size: large;font:bold ">   <%=s%> </p>

    <h1>Log-in</h1><br>
  <form>
      <input type="text" name="name" value="name" placeholder="Username">
          <input type="password" name="pwd" value="name" placeholder="Password">
        <select  input type="text" name="type" placeholder="User Type">
              <!--<select name="type">-->
<option value="Server">Server</option>
<option value="user">User Login</option>     
<option value="admin">Service Provider</option>
<option value="tpa">Third Parity Auditor</option><br>
</select>
  <br>  <input type="submit" name="login" class="login login-submit" value="login">
  </form>
<%
if(s1!=null)
       {
    %>
    <p style=" color:orangered ;font-size: large;font:bold ">   <%=s1%> </p>
<a style="color:blue;margin-left:180px;font-size: larger;font: bold "href="contacttpa.jsp">TPAContact</a>
<%}%>
  <div class="login-help">
<!--    <a href="#">Register</a> ? <a href="#">Forgot Password</a>-->
  </div>
</div>














Registration Code
<%-- 
    Document   : Registration
--%>

<%-- 
    Document   : login
    Created on : Oct 30, 2014, 5:47:26 PM
    Author     : Raja
--%>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Cloud</title>
<meta name="keywords" content="free css, web template, cloudy" />
<meta name="description" content="Cloudy - free website template provided by templatemo.com" />
<link rel="stylesheet" href="css/style.css" media="screen" type="text/css" />
<link href="templatemo_style.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="css/featuredcontentglider.css" />
<script language="javascript" type="text/javascript">

</script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"></script>
<script type="text/javascript" src="css/featuredcontentglider.js">
</script>
<!--<style>
    .login-card{ float: left;}
</style>-->
</head>
<body>

<div id="templatemo_wrapper_outer">
<div id="templatemo_wrapper">

	<div id="temmplatmeo_header">
    
   		<div id="site_title">
                     
                    <center style="margin-left: 29px;margin-right: -640px ;color: red"> <h1>REAL CLOUD   </h1>   </center>  
            </a>
        </div>
    
    	<div id="templatemo_menu">
        
            <ul>
                <li><a href="index.jsp" target="_parent">Home</a></li>
                <li><a href=Login.jsp target="_parent">Login</a></li>
                <li><a href=Newuser.jsp class="current"> Registration</a></li>
          		
            </ul>    	
        
        </div> <!-- end of templatemo_menu -->
    
    </div> <!-- end of templatemo_header -->
    
    <div id="templatemo_content_wrapper_top"></div>
    <div id="templatemo_content_wrapper">
 
        <div id="templatemo_banner"><span class="frame"></span> 
			<script type="text/javascript"> 
            featuredcontentglider.init({
                gliderid: "canadaprovinces", //ID of main glider container
                contentclass: "glidecontent", //Shared CSS class name of each glider content
                togglerid: "p-select", //ID of toggler container
                remotecontent: "", //Get gliding contents from external file on server? "filename" or "" to disable
                selected: 0, //Default selected content index (0=1st)
                persiststate: false, //Remember last content shown within browser session (true/false)?
                speed: 500, //Glide animation duration (in milliseconds)
                direction: "rightleft", //set direction of glide: "updown", "downup", "leftright", or "rightleft"
                autorotate: true, //Auto rotate contents (true/false)?
                autorotateconfig: [3000, 2] //if auto rotate enabled, set [milliseconds_btw_rotations, cycles_before_stopping]
            }
                    );
            
            </script>
            
            <div id="canadaprovinces" class="glidecontentwrapper">
            
            <div class="glidecontent">
                <!--<img src="images/templatemo_image_01.jpg" alt="bird" />-->
                 <img src="images/1.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/2.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/4.jpg" alt="image" />
            </div>
            
            </div>
            
            <div id="p-select" class="cssbuttonstoggler">
            <a href="#" class="toc"><span>1</span></a> <a href="#" class="toc"><span>2</span></a> <a href="#" class="toc"><span>3</span></a>
            
            </div> 
        </div> <!-- end of templatemo_banner -->
    	     <form action="Newuser" method="post">
                 <div  style="float:left; margin-left: 50px;">
    
         <img src="images1/1.jpg" alt="image" width="350"  />
  
    </div>
                 <div class="login-card" style="size:480Spx;">
    <h1 style="color: red">Registration Form</h1><br>
  </form>
<!--    <input type="text" name="user" placeholder="Username">
    <input type="password" name="pass" placeholder="Password">
    <input type="submit" name="login" class="login login-submit" value="login">-->
        Enter your id:<input  type="text" name="id" required="" style="border-radius:20px"/> 
   Enter your Name: <input type="text" name="name" required="" style="border-radius:20px"/> 
    Enter your password:<input type="password" name="pwd" required="" style="border-radius:20px" />

Enter your city:<input type="text" name="city" required="" style="border-radius:20px"/>

Enter your Mail id :<input type="mail" name="mid" required="" style="border-radius:20px"/>
   Enter your Private Key:  :<input type="mail" name="pkey" required="" style="border-radius:20px"/>
 
  <input type="submit" name="login" class="login login-submit" value="Submit">

  </form>

  <div class="login-help">
  </div>
</div>
    
Upload Code
<%-- 
    Document   : Upload
     
--%>

<%@page import="java.sql.ResultSet"%>
<%@page import="java.sql.PreparedStatement"%>
<%@page import="java.sql.DriverManager"%>
<%@page import="java.sql.Connection"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Cloud</title>
<meta name="keywords" content="free css, web template, cloudy" />
<meta name="description" content="Cloudy - free website template provided by templatemo.com" />
<link href="templatemo_style.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="css/featuredcontentglider.css" />
<script language="javascript" type="text/javascript">

</script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"></script>
<script type="text/javascript" src="css/featuredcontentglider.js">
</script>
</head>
<body>

<div id="templatemo_wrapper_outer">
<div id="templatemo_wrapper">

	<div id="temmplatmeo_header">
    
   		<div id="site_title">
                     
                    <center style="margin-left: 29px;margin-right: -640px ;color: red"> <h1>REAL CLOUD   </h1>   </center>  
           	<!--<a href="http://www.templatemo.com" target="_parent">-->
<!--            	<img src="images/templatemo_logo.png" alt="free css template" />
            	<span>designed by templatemo.com</span>-->
            </a>
        </div>
    
    	<div id="templatemo_menu">
        
              <ul>
                <li><a href="index.jsp" class="current">Log Out</a></li>
            
               
          		
            </ul>        	
        
        </div> <!-- end of templatemo_menu -->
    
    </div> <!-- end of templatemo_header -->
    
    <div id="templatemo_content_wrapper_top"></div>
    <div id="templatemo_content_wrapper">
          <div id="templatemo_banner"><span class="frame"></span>
        
			<script type="text/javascript">
    
            featuredcontentglider.init({
                gliderid: "canadaprovinces", //ID of main glider container
                contentclass: "glidecontent", //Shared CSS class name of each glider content
                togglerid: "p-select", //ID of toggler container
                remotecontent: "", //Get gliding contents from external file on server? "filename" or "" to disable
                selected: 0, //Default selected content index (0=1st)
                persiststate: false, //Remember last content shown within browser session (true/false)?
                speed: 500, //Glide animation duration (in milliseconds)
                direction: "rightleft", //set direction of glide: "updown", "downup", "leftright", or "rightleft"
                autorotate: true, //Auto rotate contents (true/false)?
                autorotateconfig: [3000, 2] //if auto rotate enabled, set [milliseconds_btw_rotations, cycles_before_stopping]
            }
                    );
            
            </script>
            
            <div id="canadaprovinces" class="glidecontentwrapper">
            
            <div class="glidecontent">
                <!--<img src="images/templatemo_image_01.jpg" alt="bird" />-->
                 <img src="images/header-bg.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_02.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_03.jpg" alt="image" />
            </div>
            
            </div>
            
            <div id="p-select" class="cssbuttonstoggler">
            <a href="#" class="toc"><span>1</span></a> <a href="#" class="toc"><span>2</span></a> <a href="#" class="toc"><span>3</span></a>
            
            </div> 
        </div> <!-- end of templatemo_banner -->
    	    
      <div >     
        <tr>
            <td><table   style="width: 930px;" border="0" bgcolor="#999999" >
      <tr>
          <td width="149"><div align="center" class="style1" > <a href="Deduplication.jsp"><strong style="font-size: 17px; ;color: greenyellow">Deduplication</strong></a></li></div></td>
        <td width="166"><div align="center" class="style1"><li class ="selected"><a href="encryption.jsp"><strong style="font-size: 17px;color: greenyellow ">Encryption</strong></a></div></td>
        <td width="168"><div align="center" class="style1"><a href="Upload.jsp"><strong style="font-size: 17px;color: greenyellow">Upload Details</strong></a></div></td>
       <td width="168"><div align="center" class="style1"><a href="Userrequest.jsp"><strong style="font-size: 17px;color: greenyellow">User Request</strong></a></div></td>
       <td width="168"><div align="center" class="style1"><a href="Downloadhistory.jsp"><strong style="font-size: 17px;color: greenyellow">Download History</strong></a></div></td>
       
      </tr>
    </table></td>
  </tr></div>
        <br>
            </br>
    <div align="center"> <img width="400" height="200" src="images1/uploading.jpg" alt="" style="border-radius:20px;margin-left: 30px;" ></img></div>
    <% 
String f=(String)request.getAttribute("fname");
String sk=(String)session.getAttribute("skey");
%>
    <br></br><form action="upload" method="post">
    <div class="login" align="center">
     <%
       	try
        {
            int i=1;
            String uid1=(String)session.getAttribute("uid");       
//MODIFICATION 1 )...   
            //Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            //Connection con = DriverManager.getConnection("jdbc:odbc:PSE"); 		
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/decentralize", "root", "root");
 //MODIFICATION 1 (END)...               
   
            //PreparedStatement pr=con.prepareStatement("select * from Reg");
            String sa="select * from files"; 
            PreparedStatement pr=con.prepareStatement(sa);
            ResultSet rs=pr.executeQuery();
		%>
                <font color="red"> <h3 align="center"> Upload Details </h3></font>
                <table border="3" style="border: 2px; border-color:red; border-style: double;">
                    <tr bgcolor="white">
                        <font color="orange " style="font: bold ;size: 10px">  <td>S.No</td><td>File Name</td><td>Status</td><td>Date of Upload</td></font>
                        
            </tr>
             <%
            while(rs.next())
            {
            String FName=rs.getString(2);
          //  String UName=(String)session.getAttribute("uname");
            //Date now=new Date();
            String status=rs.getString(7);
            String da=rs.getString(5);
           %>
           <tr bgcolor="lightblue">
                <%--    <td><%=(i++)%></td><td><%=%>now</td><td><%=UName%></td><%=%>   --%>
                <td><%=(i++)%></td><td><%=FName%></td><td><%=status%></td><td><%=da%></td>
            </tr>
            <       }
             %>
        </table>
        	
	<%	}
        catch(Exception e)
		{
			System.out.println(e);
		}
	   %>  
    </div>
    </form>
</div><div id="templatemo_content_wrapper_bottom"></div> <!-- end of templatemo_wrapper -->

        <div id="templatemo_footer">

       


Verified Files
<%-- 
    Document   : Verifiedfiles
    
--%>

<%@page import="java.util.Date"%>
<%@page import="java.util.ArrayList"%>
<%@page import="java.sql.ResultSet"%>
<%@page import="java.sql.PreparedStatement"%>
<%@page import="java.sql.DriverManager"%>
<%@page import="java.sql.Connection"%>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Cloud</title>
<meta name="keywords" content="free css, web template, cloudy" />
<meta name="description" content="Cloudy - free website template provided by templatemo.com" />
<link href="templatemo_style.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="css/featuredcontentglider.css" />
 <link href="css/style_2.css" rel="stylesheet" type="text/css" />
 <link href="style.css" rel="stylesheet" type="text/css" />
 
<script language="javascript" type="text/javascript">

</script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"></script>
<script type="text/javascript" src="css/featuredcontentglider.js">
     
</script>
</head>
<body>

<div id="templatemo_wrapper_outer">
<div id="templatemo_wrapper">

	<div id="temmplatmeo_header">
    
   		<div id="site_title">
                     
                    <center style="margin-left: 29px;margin-right: -640px ;color: red"> <h1>REAL CLOUD   </h1>   </center>  

            </a>
        </div>
    
    	<div id="templatemo_menu">
        
            <ul>
                <li><a href="index.jsp" class="current">Log Out</a></li>
            
               
          		
            </ul>    	
        
        </div> <!-- end of templatemo_menu -->
    
    </div> <!-- end of templatemo_header -->
    
    <div id="templatemo_content_wrapper_top"></div>
    <div id="templatemo_content_wrapper"> 
        <div id="templatemo_banner"><span class="frame"></span> 
			<script type="text/javascript"> 
            featuredcontentglider.init({
                gliderid: "canadaprovinces", //ID of main glider container
                contentclass: "glidecontent", //Shared CSS class name of each glider content
                togglerid: "p-select", //ID of toggler container
                remotecontent: "", //Get gliding contents from external file on server? "filename" or "" to disable
                selected: 0, //Default selected content index (0=1st)
                persiststate: false, //Remember last content shown within browser session (true/false)?
                speed: 500, //Glide animation duration (in milliseconds)
                direction: "rightleft", //set direction of glide: "updown", "downup", "leftright", or "rightleft"
                autorotate: true, //Auto rotate contents (true/false)?
                autorotateconfig: [3000, 2] //if auto rotate enabled, set [milliseconds_btw_rotations, cycles_before_stopping]
            }
                    ); 
            </script>
            
            <div id="canadaprovinces" class="glidecontentwrapper">
            
            <div class="glidecontent">
                <!--<img src="images/templatemo_image_01.jpg" alt="bird" />-->
                 <img src="images/header-bg.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_02.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_03.jpg" alt="image" />
            </div>
            
            </div> 
            <div id="p-select" class="cssbuttonstoggler">
            <a href="#" class="toc"><span>1</span></a> <a href="#" class="toc"><span>2</span></a> <a href="#" class="toc"><span>3</span></a>
            
            </div> 
        
        </div> <!-- end of templatemo_banner -->
    	<div >     
        <tr>
            <td><table   style="width: 930px;" border="0" bgcolor="#999999" >
      <tr>
          <td width="149"><div align="center" class="style1" > <a href="Accessfile.jsp"><strong style="font-size: 17px; ;color: greenyellow"> File Access View</strong></a></div></td>
       
          <td width="149"><div align="center" class="style1" > <a href="Blockuser.jsp"><strong style="font-size: 17px; ;color: greenyellow"> User List</strong></a></div></td>
        <td width="166"><div align="center" class="style1"><a href="Filestransaction.jsp"><strong style="font-size: 17px;color: greenyellow ">Filestransaction</strong></a></div></td>
     <!--<td width="168"><div align="center" class="style1"><a href="Download.jsp"><strong style="font-size: 17px;color: greenyellow">File Download</strong></a></div></td>-->
       
      </tr>
    </table></td>
  </tr></div>
        <div>
    <div align="left" style="margin-left: 100px;"> <li><a href="Accessfile.jsp">Go Back</a></li></div>
    <%
    //String userid1,path1,FileName1;    
    int i=1;
        try
        {          
                    String uid=(String)session.getAttribute("uid");
//MODIFICATION 1 )...    		
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/decentralize", "root", "root");
 //MODIFICATION 1 (END)...               
		//PreparedStatement pr=con.prepareStatement("select * from Reg");
            String sa="select * from files where auditor='verified'";
            PreparedStatement pr=con.prepareStatement(sa);
            ResultSet rs=pr.executeQuery();
            ArrayList Fname=new ArrayList();
                  
            %>
            
           <div align="center">
               <table class="table1" border="2">
                <tr style="height: 30px; background-color: mediumaquamarine;">
                    <th>S.No</th>
                     <th>File Name</th>
                     <th>File Owner</th>
                     <th>Authenticate</th>
                     <th>Status</th>
                </tr>
          
                <%
                while(rs.next())
                {
                %>
                <form action="" method="post">
                <tr style="height: 30px; background-color: orange;">
                    <%
                    String Fname1=rs.getString(2);
                    //request.setAttribute("FName","Fname1");
                    Fname.add(Fname1);
                    Fname.indexOf(i);
                    Date now=new Date();
                    //int d=now;
                    request.setAttribute("TDate","Date");
                    //String uid=(String)session.getAttribute("");
                    %>
                        <td><%=(i++)%></td> 
                        <td><%=Fname1%></td>
                        <td> Admin </td>
                        <td>
                            <!--<font color="white"><input type="radio" name="s1" value=<%=Fname1%>>Select for Decryption<br></font>-->
                        <font color="green">Verified</font> 
                        </td><td>Added File List</td>                                  
                </tr>  
                </form>
                     <%
                        }    
                     %>           
           </table>
              <br>
              </br>
            </div>
           <%            
            //
                       }
        catch(Exception e)
        {
            System.out.println("Exception"+e);
        }
            
     %>  
            
        </div>  </div>
    
Admin Login Code
<%-- 
    Document   : adminlogin
    
--%>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Cloud</title>
<meta name="keywords" content="free css, web template, cloudy" />
<meta name="description" content="Cloudy - free website template provided by templatemo.com" />
<link href="templatemo_style.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="css/featuredcontentglider.css" />
<script language="javascript" type="text/javascript">

</script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"></script>
<script type="text/javascript" src="css/featuredcontentglider.js">
</script>
</head>
<body>

<div id="templatemo_wrapper_outer">
<div id="templatemo_wrapper">

	<div id="temmplatmeo_header">
    
   		<div id="site_title">
                     
                    <center style="margin-left: 29px;margin-right: -640px ;color: red"> <h1>REAL CLOUD   </h1>   </center>  

            </a>
        </div>
    
    	<div id="templatemo_menu">
        
            <ul>
                <li><a href="#" class="current">Log Out</a></li>
            
               
          		
            </ul>    	
        
        </div> <!-- end of templatemo_menu -->
    
    </div> <!-- end of templatemo_header -->
    
    <div id="templatemo_content_wrapper_top"></div>
    <div id="templatemo_content_wrapper">
    
    	
    
        <div id="templatemo_banner"><span class="frame"></span>
        
			<script type="text/javascript">
    
            featuredcontentglider.init({
                gliderid: "canadaprovinces", //ID of main glider container
                contentclass: "glidecontent", //Shared CSS class name of each glider content
                togglerid: "p-select", //ID of toggler container
                remotecontent: "", //Get gliding contents from external file on server? "filename" or "" to disable
                selected: 0, //Default selected content index (0=1st)
                persiststate: false, //Remember last content shown within browser session (true/false)?
                speed: 500, //Glide animation duration (in milliseconds)
                direction: "rightleft", //set direction of glide: "updown", "downup", "leftright", or "rightleft"
                autorotate: true, //Auto rotate contents (true/false)?
                autorotateconfig: [3000, 2] //if auto rotate enabled, set [milliseconds_btw_rotations, cycles_before_stopping]
            }
                    );
            
            </script>
            
            <div id="canadaprovinces" class="glidecontentwrapper">
            
            <div class="glidecontent">
                <!--<img src="images/templatemo_image_01.jpg" alt="bird" />-->
                 <img src="images/header-bg.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_02.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_03.jpg" alt="image" />
            </div>
            
            </div>
            
            <div id="p-select" class="cssbuttonstoggler">
            <a href="#" class="toc"><span>1</span></a> <a href="#" class="toc"><span>2</span></a> <a href="#" class="toc"><span>3</span></a>
            
            </div>
        
        
        </div> <!-- end of templatemo_banner -->
    	<div >     
        <tr>
            <td><table   style="width: 930px;" border="0" bgcolor="#999999" >
      <tr>
         <td width="149"><div align="center" class="style1" > <li class ="selected"><a href="Deduplication.jsp"><strong style="font-size: 17px; ;color: greenyellow">Deduplication</strong></a></li></div></td>
        <td width="166"><div align="center" class="style1"><a href="encryption.jsp"><strong style="font-size: 17px;color: greenyellow ">Encryption</strong></a></div></td>
        <td width="168"><div align="center" class="style1"><a href="Upload.jsp"><strong style="font-size: 17px;color: greenyellow">Upload Details</strong></a></div></td>
       <td width="168"><div align="center" class="style1"><a href="Userrequest.jsp"><strong style="font-size: 17px;color: greenyellow">User Request</strong></a></div></td>
       <td width="168"><div align="center" class="style1"><a href="Downloadhistory.jsp"><strong style="font-size: 17px;color: greenyellow">Download History</strong></a></div></td>
       
      </tr>
    </table></td>
  </tr></div>
        
        <div>
             <p style="color: darkmagenta;font-size: x-large;font-style: inherit ">  Server Loged In Successfully....................</p>
     
        </div>
    
            <div align="center"> <img width="500" height="250" src="images1/pu.jpg" alt="" style="border-radius:20px" /></div>
        
<!--    	<div id="content">
        
        	<div class="full_width">
            
            	<h2>Welcome to Cloudy Template</h2>
                <p>	This template is provided by <a href="http://www.templatemo.com" target="_parent">Free CSS Templates</a> for free of charge. Validate <a href="http://validator.w3.org/check?uri=referer">XHTML</a> &amp; <a href="http://jigsaw.w3.org/css-validator/check/referer">CSS</a>. Feel free to download, edit and apply this template for your websites. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Nunc quis sem nec tellus blandit tincidunt. Duis vitae velit sed dui malesuada dignissim. Donec mollis aliquet ligula. Maecenas adipiscing elementum ipsum. Pellentesque vitae magna. Sed nec est. Suspendisse a nibh tristique justo rhoncus volutpat. </p>
              <p>Suspendisse vitae neque eget ante tristique vestibulum. Pellentesque dolor nulla, congue vitae, fringilla in, varius a, orci. Mauris convallis. Proin vel libero id erat venenatis accumsan. Nunc blandit orci sit amet risus. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ut iaculis lacinia purus. Duis pulvinar scelerisque ante. </p>
              <div class="button_01 float_r"><a href="#">Read more</a></div>
                
                <div class="cleaner"></div>
            </div>
            
            <div class="full_width">
            
            	<div class="section_w280 margin_r_30 w280_bg">
                
                	<h2 class="services">Our Services</h2>
                    
                    <p>Mauris quis nulla sed ipsum pretium sagittis. Suspendisse feugiat. Ut sodales libero odio. Maecenas venenatis metus eu est.</p>
                    
                    <ul class="service_list">
                   		<li><a href="#">Suspendisse vitae neque</a></li>
                      <li><a href="#">Eget ante tristique</a></li>
                      <li><a href="#">Vestibulum ellentesque</a></li>
                      <li><a href="#">Dolor nulla, congue vitae</a></li>
                      <li><a href="#">Fringilla in, varius a, orci</a></li>
                      <li><a href="#">Mauris convallis</a></li>
                  </ul>
                
                </div>
                
                <div class="section_w280 margin_r_30 w280_bg">
                
                	<h2 class="portfolio">Our Portfolio</h2>
                    
                    <a href="#"><img src="images/templatemo_image_08.png" alt="image" /></a>
                    
                  <p>Vivamus a massa. Donec iaculis felis id neque. Morbi nunc. Praesent varius egestas velit. Donec a massa ut pede pulvinar vulputate.</p>
                  <p>Curabitur quis velit quis tortor tincidunt aliquet. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ut iaculis lacinia purus.</p>
              </div>
                
                <div class="section_w280 w280_bg">
                
                	<h2 class="project">Our Projects</h2>
                    
                    <ul class="project_gallery">
                    	
                        <li><a href="#"><img src="images/templatemo_image_04.jpg" alt="image" /></a></li>
                        <li><a href="#"><img src="images/templatemo_image_05.jpg" alt="image" /></a></li>
                        <li><a href="#"><img src="images/templatemo_image_06.jpg" alt="image" /></a></li>
                        <li><a href="#"><img src="images/templatemo_image_07.jpg" alt="image" /></a></li>
                        
                    </ul>
					
                    <div class="cleaner"></div>                
                	<div class="button_01 float_r"><a href="#">View All</a></div>
                </div>
                
                <div class="cleaner"></div>
            
            </div>
            
            <div class="full_width">
            
            	<div class="section_w590 margin_r_30">
                	
                    <h2 class="current_activities">New Activities</h2>
                    <p>	Quisque in diam a justo condimentum molestie. Vivamus a velit. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Suspendisse feugiat.  <a href="#">read more</a></p>
                    <p>Curabitur quis velit quis tortor tincidunt aliquet. Vivamus leo velit, convallis id, ultrices sit amet, tempor a, libero. Quisque rhoncus nulla quis sem. Mauris quis nulla sed ipsum pretium sagittis. <a href="#">read more</a></p>
           	  </div>
                
                <div class="section_w280">
                
                	<h2 class="newsletter">Newsletter</h2>
                    
                    <form action="#" method="get" class="search_box">
                        <input type="text" value="Enter your email" name="q" size="10" id="searchfield" title="searchfield" onfocus="clearText(this)" onblur="clearText(this)" />
                        <input type="submit" name="Search" value="Subscribe" alt="Search" id="searchbutton" title="Search" />
                    </form>
                    
                    <strong>Tel:</strong> 010-010-0100  &nbsp;&nbsp;<strong>Fax:</strong> 020-020-0200 <br />
				<strong>Email:</strong> <a href="#">info@yourcompany.com</a>                </div>
                
                <div class="cleaner"></div>
            
            </div>
        
		</div>  end of content -->
        
</div><div id="templatemo_content_wrapper_bottom"></div> <!-- end of templatemo_wrapper -->







                                 Encryption Code (Important)
<%-- 
    Document   : encryption
    
--%>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Cloud</title>
<meta name="keywords" content="free css, web template, cloudy" />
<meta name="description" content="Cloudy - free website template provided by templatemo.com" />
<link href="templatemo_style.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="css/featuredcontentglider.css" />
<script language="javascript" type="text/javascript">

</script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"></script>
<script type="text/javascript" src="css/featuredcontentglider.js">
</script>
</head>
<body>

<div id="templatemo_wrapper_outer">
<div id="templatemo_wrapper">

	<div id="temmplatmeo_header">
    
   		<div id="site_title">
                     
                    <center style="margin-left: 29px;margin-right: -640px ;color: red"> <h1>REAL CLOUD   </h1>   </center>  
           	<!--<a href="http://www.templatemo.com" target="_parent">-->
<!--            	<img src="images/templatemo_logo.png" alt="free css template" />
            	<span>designed by templatemo.com</span>-->
            </a>
        </div>
    
    	<div id="templatemo_menu">
        
              <ul>
                <li><a href="index.jsp" class="current">Log Out</a></li>
 		
            </ul>        	
        
        </div> <!-- end of templatemo_menu -->
    
    </div> <!-- end of templatemo_header -->
    
    <div id="templatemo_content_wrapper_top"></div>
    <div id="templatemo_content_wrapper"> 
        <div id="templatemo_banner"><span class="frame"></span>
        
			<script type="text/javascript">
    
            featuredcontentglider.init({
                gliderid: "canadaprovinces", //ID of main glider container
                contentclass: "glidecontent", //Shared CSS class name of each glider content
                togglerid: "p-select", //ID of toggler container
                remotecontent: "", //Get gliding contents from external file on server? "filename" or "" to disable
                selected: 0, //Default selected content index (0=1st)
                persiststate: false, //Remember last content shown within browser session (true/false)?
                speed: 500, //Glide animation duration (in milliseconds)
                direction: "rightleft", //set direction of glide: "updown", "downup", "leftright", or "rightleft"
                autorotate: true, //Auto rotate contents (true/false)?
                autorotateconfig: [3000, 2] //if auto rotate enabled, set [milliseconds_btw_rotations, cycles_before_stopping]
            }
                    ); 
            </script> 
            <div id="canadaprovinces" class="glidecontentwrapper">
            
            <div class="glidecontent">
                <!--<img src="images/templatemo_image_01.jpg" alt="bird" />-->
                 <img src="images/header-bg.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_02.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_03.jpg" alt="image" />
            </div>
            
            </div>
            
            <div id="p-select" class="cssbuttonstoggler">
            <a href="#" class="toc"><span>1</span></a> <a href="#" class="toc"><span>2</span></a> <a href="#" class="toc"><span>3</span></a>
            
            </div> 
        </div> <!-- end of templatemo_banner -->
    	    
      <div >     
        <tr>
            <td><table   style="width: 930px;" border="0" bgcolor="#999999" >
      <tr>
          <td width="149"><div align="center" class="style1" > <a href="Deduplication.jsp"><strong style="font-size: 17px; ;color: greenyellow">Deduplication</strong></a></li></div></td>
        <td width="166"><div align="center" class="style1"><li class ="selected"><a href="encryption.jsp"><strong style="font-size: 17px;color: greenyellow ">Encryption</strong></a></div></td>
        <td width="168"><div align="center" class="style1"><a href="Upload.jsp"><strong style="font-size: 17px;color: greenyellow">Upload Details</strong></a></div></td>
       <td width="168"><div align="center" class="style1"><a href="Userrequest.jsp"><strong style="font-size: 17px;color: greenyellow">User Request</strong></a></div></td>
       <td width="168"><div align="center" class="style1"><a href="Downloadhistory.jsp"><strong style="font-size: 17px;color: greenyellow">Download History</strong></a></div></td>
       
      </tr>
    </table></td>
  </tr></div> 
        
        <br>
         <br>
                <% 
String f=(String)request.getAttribute("fname");
String sk=(String)session.getAttribute("skey");
%>
    <br></br><br></br><form action="upload" method="post">
         <div align="center"> <img width="400" height="200" src="images1/cloud.jpg" alt="" style="border-radius:20px" /></div>
    <div class="login" align="center">
        <h3><font color="orange"> File Key</font> </h3>
        <input class="login-input" type="text" value="<%= sk %>" name="key" placeholder="Set File Key"/>
<h3><font color="orange"> File Name</font> </h3>
<input class="login-input" type="text" name="fn" value="<%= f %>"></input>
        <input class="login-submit" type="submit" value="upload" style="width: 200px; color: red;"></input>
    </div> 
        
    </form>> 
<!--    	<div id="content">
        
        	<div class="full_width">
            
            	<h2>Welcome to Cloudy Template</h2>
                <p>	This template is provided by <a href="http://www.templatemo.com" target="_parent">Free CSS Templates</a> for free of charge. Validate <a href="http://validator.w3.org/check?uri=referer">XHTML</a> &amp; <a href="http://jigsaw.w3.org/css-validator/check/referer">CSS</a>. Feel free to download, edit and apply this template for your websites. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Nunc quis sem nec tellus blandit tincidunt. Duis vitae velit sed dui malesuada dignissim. Donec mollis aliquet ligula. Maecenas adipiscing elementum ipsum. Pellentesque vitae magna. Sed nec est. Suspendisse a nibh tristique justo rhoncus volutpat. </p>
              <p>Suspendisse vitae neque eget ante tristique vestibulum. Pellentesque dolor nulla, congue vitae, fringilla in, varius a, orci. Mauris convallis. Proin vel libero id erat venenatis accumsan. Nunc blandit orci sit amet risus. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ut iaculis lacinia purus. Duis pulvinar scelerisque ante. </p>
              <div class="button_01 float_r"><a href="#">Read more</a></div>
                
                <div class="cleaner"></div>
            </div>
            
            <div class="full_width">
            
            	<div class="section_w280 margin_r_30 w280_bg">
                
                	<h2 class="services">Our Services</h2>
                    
                    <p>Mauris quis nulla sed ipsum pretium sagittis. Suspendisse feugiat. Ut sodales libero odio. Maecenas venenatis metus eu est.</p>
                    
                    <ul class="service_list">
                   		<li><a href="#">Suspendisse vitae neque</a></li>
                      <li><a href="#">Eget ante tristique</a></li>
                      <li><a href="#">Vestibulum ellentesque</a></li>
                      <li><a href="#">Dolor nulla, congue vitae</a></li>
                      <li><a href="#">Fringilla in, varius a, orci</a></li>
                      <li><a href="#">Mauris convallis</a></li>
                  </ul>
                
                </div>
                
                <div class="section_w280 margin_r_30 w280_bg">
                
                	<h2 class="portfolio">Our Portfolio</h2>
                    
                    <a href="#"><img src="images/templatemo_image_08.png" alt="image" /></a>
                    
                  <p>Vivamus a massa. Donec iaculis felis id neque. Morbi nunc. Praesent varius egestas velit. Donec a massa ut pede pulvinar vulputate.</p>
                  <p>Curabitur quis velit quis tortor tincidunt aliquet. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Ut iaculis lacinia purus.</p>
              </div>
                
                <div class="section_w280 w280_bg">
                
                	<h2 class="project">Our Projects</h2>
                    
                    <ul class="project_gallery">
                    	
                        <li><a href="#"><img src="images/templatemo_image_04.jpg" alt="image" /></a></li>
                        <li><a href="#"><img src="images/templatemo_image_05.jpg" alt="image" /></a></li>
                        <li><a href="#"><img src="images/templatemo_image_06.jpg" alt="image" /></a></li>
                        <li><a href="#"><img src="images/templatemo_image_07.jpg" alt="image" /></a></li>
                        
                    </ul>
					
                    <div class="cleaner"></div>                
                	<div class="button_01 float_r"><a href="#">View All</a></div>
                </div>
                
                <div class="cleaner"></div>
            
            </div>
            
            <div class="full_width">
            
            	<div class="section_w590 margin_r_30">
                	
                    <h2 class="current_activities">New Activities</h2>
                    <p>	Quisque in diam a justo condimentum molestie. Vivamus a velit. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Suspendisse feugiat.  <a href="#">read more</a></p>
                    <p>Curabitur quis velit quis tortor tincidunt aliquet. Vivamus leo velit, convallis id, ultrices sit amet, tempor a, libero. Quisque rhoncus nulla quis sem. Mauris quis nulla sed ipsum pretium sagittis. <a href="#">read more</a></p>
           	  </div>
                
                <div class="section_w280">
                
                	<h2 class="newsletter">Newsletter</h2>
                    
                    <form action="#" method="get" class="search_box">
                        <input type="text" value="Enter your email" name="q" size="10" id="searchfield" title="searchfield" onfocus="clearText(this)" onblur="clearText(this)" />
                        <input type="submit" name="Search" value="Subscribe" alt="Search" id="searchbutton" title="Search" />
                    </form>
                    
                    <strong>Tel:</strong> 010-010-0100  &nbsp;&nbsp;<strong>Fax:</strong> 020-020-0200 <br />
				<strong>Email:</strong> <a href="#">info@yourcompany.com</a>                </div>
                
                <div class="cleaner"></div>
            
            </div>
        
		</div>  end of content -->
        
</div><div id="templatemo_content_wrapper_bottom"></div> <!-- end of templatemo_wrapper -->





















Server List Code
<%-- 
    Document   : serverlist
--%>

<%@page import="java.sql.Connection"%>
<%@page import="java.sql.ResultSet"%>
<%@page import="java.sql.PreparedStatement"%>
<%@page import="java.sql.DriverManager"%>


<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Cloud</title>
<meta name="keywords" content="free css, web template, cloudy" />
<meta name="description" content="Cloudy - free website template provided by templatemo.com" />
<link href="templatemo_style.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="css/featuredcontentglider.css" />
<script language="javascript" type="text/javascript">

</script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"></script>
<script type="text/javascript" src="css/featuredcontentglider.js">
</script>
</head>
<body>

<div id="templatemo_wrapper_outer">
<div id="templatemo_wrapper">

	<div id="temmplatmeo_header">
    
   		<div id="site_title">
                     
                    <center style="margin-left: 29px;margin-right: -640px ;color: red"> <h1>REAL CLOUD   </h1>   </center>  

            </a>
        </div>
    
    	<div id="templatemo_menu">
        
            <ul>
                <li><a href="index.jsp" class="current">Log Out</a></li> 
          		
            </ul>    	
        
        </div> <!-- end of templatemo_menu -->
    
    </div> <!-- end of templatemo_header -->
    
    <div id="templatemo_content_wrapper_top"></div>
    <div id="templatemo_content_wrapper"> 
        <div id="templatemo_banner"><span class="frame"></span>
        
			<script type="text/javascript">
    
            featuredcontentglider.init({
                gliderid: "canadaprovinces", //ID of main glider container
                contentclass: "glidecontent", //Shared CSS class name of each glider content
                togglerid: "p-select", //ID of toggler container
                remotecontent: "", //Get gliding contents from external file on server? "filename" or "" to disable
                selected: 0, //Default selected content index (0=1st)
                persiststate: false, //Remember last content shown within browser session (true/false)?
                speed: 500, //Glide animation duration (in milliseconds)
                direction: "rightleft", //set direction of glide: "updown", "downup", "leftright", or "rightleft"
                autorotate: true, //Auto rotate contents (true/false)?
                autorotateconfig: [3000, 2] //if auto rotate enabled, set [milliseconds_btw_rotations, cycles_before_stopping]
            }
                    );
            
            </script>
            
            <div id="canadaprovinces" class="glidecontentwrapper">
            
            <div class="glidecontent">
                <!--<img src="images/templatemo_image_01.jpg" alt="bird" />-->
                 <img src="images/header-bg.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_02.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_03.jpg" alt="image" />
            </div>
            
            </div>
            
            <div id="p-select" class="cssbuttonstoggler">
            <a href="#" class="toc"><span>1</span></a> <a href="#" class="toc"><span>2</span></a> <a href="#" class="toc"><span>3</span></a>
            
            </div>
        
        
        </div> <!-- end of templatemo_banner -->
    	<div >     
        <tr>
            <td><table   style="width: 930px;" border="0" bgcolor="#999999" >
      <tr>
         <td width="149"><div align="center" class="style1" > <li class ="selected"><a href="userlist.jsp"><strong style="font-size: 17px; ;color: greenyellow">User List</strong></a></li></div></td>
        <td width="166"><div align="center" class="style1"><a href="serverlist.jsp"><strong style="font-size: 17px;color: greenyellow ">Server List</strong></a></div></td>

      </tr>
    </table></td>
  </tr></div>
        
        <div>
            <br>
                </br>
             <p style="color: darkmagenta;font-size: x-large;font-style: inherit "> Server Details</p>
     
        </div>
    <br>
        </br>
            <!--<div align="center"> <img width="500" height="250" src="images1/pu.jpg" alt="" style="border-radius:20px" /></div>-->
     <%
    int i=1;
   
    	try
		{
		  //MODIFICATION 2 )...    		
                Class.forName("com.mysql.jdbc.Driver").newInstance();
                 Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/decentralize", "root", "root");
 //MODIFICATION 2 (END)...          
  //PreparedStatement pr=con.prepareStatement("select * from Reg");
                String sa="select * from files";
                PreparedStatement pr=con.prepareStatement(sa);
                ResultSet rs=pr.executeQuery();
		
                String hostName=request.getServerName();
                int port=request.getServerPort();
                %>
                <div align="center" >
                <table width="500"  style="background-color:thistle; color:#000;"  height="500" border="1">
	 <tr style="background-color: bisque;font-size: medium;color: red"><th>User ID</th>
	<th>Protocol</th>	
             <th>Server name</th>
			<th>Port No</th>
		<th>host group</th>
	
<!--                <th>User ID</th>-->
                <th>File</th>
                </tr>
                <%--<th>Application</th>
		<th>Programm</th>--%>
                
		<% 
		while(rs.next())
		{%>
			
			<tr>
                        <td><%=(i++)%></td>
                        <td>http</td>
                        <td>localhost</td>
                        <td>8080</td>
			<td>Server</td>
			<td><%=rs.getString(2)%></td>
			</tr>
	
	<%	}
	pr.close();
	rs.close();
		
		}
		
	
		catch(Exception e)
		{
			System.out.println(e);
		} 
    %></table>
 
<input type="hidden" name="hidden">
    </div></div> 

  </div> 
</div><div id="templatemo_content_wrapper_bottom"></div> <!-- end of templatemo_wrapper -->

        <div id="templatemo_footer">



                                                          User Login Code
<%-- 
    Document   : userlogin
    
--%>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Cloud</title>
<meta name="keywords" content="free css, web template, cloudy" />
<meta name="description" content="Cloudy - free website template provided by templatemo.com" />
<link href="templatemo_style.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="css/featuredcontentglider.css" />
 <link href="css/style_2.css" rel="stylesheet" type="text/css" />
 <link href="style.css" rel="stylesheet" type="text/css" />
 
<script language="javascript" type="text/javascript">

</script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"></script>
<script type="text/javascript" src="css/featuredcontentglider.js">
     </script>
</head>
<body>

<div id="templatemo_wrapper_outer">
<div id="templatemo_wrapper">

	<div id="temmplatmeo_header">
    
   		<div id="site_title">
                     
                    <center style="margin-left: 29px;margin-right: -640px ;color: red"> <h1>REAL CLOUD   </h1>   </center>  
            </a>
        </div>
    
    	<div id="templatemo_menu">
        
            <ul>
                <li><a href="index.jsp" class="current">Log Out</a></li>
 
        </div> <!-- end of templatemo_menu -->
    
    </div> <!-- end of templatemo_header -->
    
    <div id="templatemo_content_wrapper_top"></div>
    <div id="templatemo_content_wrapper"> 
        <div id="templatemo_banner"><span class="frame"></span>
        
			<script type="text/javascript">
    
            featuredcontentglider.init({
                gliderid: "canadaprovinces", //ID of main glider container
                contentclass: "glidecontent", //Shared CSS class name of each glider content
                togglerid: "p-select", //ID of toggler container
                remotecontent: "", //Get gliding contents from external file on server? "filename" or "" to disable
                selected: 0, //Default selected content index (0=1st)
                persiststate: false, //Remember last content shown within browser session (true/false)?
                speed: 500, //Glide animation duration (in milliseconds)
                direction: "rightleft", //set direction of glide: "updown", "downup", "leftright", or "rightleft"
                autorotate: true, //Auto rotate contents (true/false)?
                autorotateconfig: [3000, 2] //if auto rotate enabled, set [milliseconds_btw_rotations, cycles_before_stopping]
            }
                    );
            
            </script>
            
            <div id="canadaprovinces" class="glidecontentwrapper">
            
            <div class="glidecontent">
                <!--<img src="images/templatemo_image_01.jpg" alt="bird" />-->
                 <img src="images/header-bg.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_02.jpg" alt="image" />
            </div>
            
            <div class="glidecontent">
            <img src="images/templatemo_image_03.jpg" alt="image" />
            </div>
            
            </div>
            
            <div id="p-select" class="cssbuttonstoggler">
            <a href="#" class="toc"><span>1</span></a> <a href="#" class="toc"><span>2</span></a> <a href="#" class="toc"><span>3</span></a>
            
            </div>
        
        
        </div> <!-- end of templatemo_banner -->
    	<div >     
        <tr>
            <td><table   style="width: 930px;" border="0" bgcolor="#999999" >
      <tr>
           <td width="149"><div align="center" class="style1" > <li class ="selected"><a href="Viewprofile.jsp"><strong style="font-size: 17px; ;color: greenyellow">Profile</strong></a></li></div></td>
     
          <td width="149"><div align="center" class="style1" > <a href="Fileview.jsp"><strong style="font-size: 17px; ;color: greenyellow">View Files</strong></a></div></td>
        <td width="166"><div align="center" class="style1"><a href="Adminresponse.jsp"><strong style="font-size: 17px;color: greenyellow ">Request Status</strong></a></div></td>
        <td width="168"><div align="center" class="style1"><a href="Download.jsp"><strong style="font-size: 17px;color: greenyellow">File Download</strong></a></div></td>
       
      </tr>
    </table></td>
  </tr></div>
        
              </div>
        
<div id="templatemo_content_wrapper_bottom"></div> <!-- end of templatemo_wrapper -->

        <div id="templatemo_footer"

Drop Box Code
package com.dropbox.client2;

import com.dropbox.client2.exception.DropboxException;
import com.dropbox.client2.exception.DropboxIOException;
import com.dropbox.client2.exception.DropboxLocalStorageFullException;
import com.dropbox.client2.exception.DropboxPartialFileException;
import com.dropbox.client2.exception.DropboxUnlinkedException;
import com.dropbox.client2.jsonextract.JsonExtractionException;
import com.dropbox.client2.jsonextract.JsonThing;
import com.dropbox.client2.session.Session;
import java.io.FilterInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.Serializable;
import java.util.Date;
import java.util.List;
import java.util.Map;

public class DropboxAPI<SESS_T extends Session> {

    public static final class CreatedCopyRef {

        public final String copyRef;
        public final String expiration;

        public CreatedCopyRef(String copyRef, String expiration) {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: invokespecial #1                  // Method java/lang/Object."<init>":()V
             * 4: aload_0
             * 5: aload_1
             * 6: putfield      #2                  // Field copyRef:Ljava/lang/String;
             * 9: aload_0
             * 10: aload_2
             * 11: putfield      #3                  // Field expiration:Ljava/lang/String;
             * 14: return
             *  */
            // </editor-fold>
        }

        public static CreatedCopyRef extractFromJson(JsonThing j) throws JsonExtractionException {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: invokevirtual #4                  // Method com/dropbox/client2/jsonextract/JsonThing.expectMap:()Lcom/dropbox/client2/jsonextract/JsonMap;
             * 4: astore_1
             * 5: aload_1
             * 6: ldc           #5                  // String copy_ref
             * 8: invokevirtual #6                  // Method com/dropbox/client2/jsonextract/JsonMap.get:(Ljava/lang/String;)Lcom/dropbox/client2/jsonextract/JsonThing;
             * 11: invokevirtual #7                  // Method com/dropbox/client2/jsonextract/JsonThing.expectString:()Ljava/lang/String;
             * 14: astore_2
             * 15: aload_1
             * 16: ldc           #8                  // String expires
             * 18: invokevirtual #6                  // Method com/dropbox/client2/jsonextract/JsonMap.get:(Ljava/lang/String;)Lcom/dropbox/client2/jsonextract/JsonThing;
             * 21: invokevirtual #7                  // Method com/dropbox/client2/jsonextract/JsonThing.expectString:()Ljava/lang/String;
             * 24: astore_3
             * 25: new           #9                  // class com/dropbox/client2/DropboxAPI$CreatedCopyRef
             * 28: dup
             * 29: aload_2
             * 30: aload_3
             * 31: invokespecial #10                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;)V
             * 34: areturn
             *  */
            // </editor-fold>
        }
    }

    public static final class DeltaEntry<MD extends Object> {

        public static final class JsonExtractor<MD extends Object> extends com.dropbox.client2.jsonextract.JsonExtractor<DeltaEntry<MD>> {

            public final com.dropbox.client2.jsonextract.JsonExtractor<MD> mdExtractor;

            public JsonExtractor(com.dropbox.client2.jsonextract.JsonExtractor<MD> mdExtractor) {
                // <editor-fold defaultstate="collapsed" desc="Compiled Code">
                /* 0: aload_0
                 * 1: invokespecial #1                  // Method com/dropbox/client2/jsonextract/JsonExtractor."<init>":()V
                 * 4: aload_0
                 * 5: aload_1
                 * 6: putfield      #2                  // Field mdExtractor:Lcom/dropbox/client2/jsonextract/JsonExtractor;
                 * 9: return
                 *  */
                // </editor-fold>
            }

            public DeltaEntry<MD> extract(JsonThing j) throws JsonExtractionException {
                // <editor-fold defaultstate="collapsed" desc="Compiled Code">
                /* 0: aload_1
                 * 1: aload_0
                 * 2: getfield      #2                  // Field mdExtractor:Lcom/dropbox/client2/jsonextract/JsonExtractor;
                 * 5: invokestatic  #3                  // Method extract:(Lcom/dropbox/client2/jsonextract/JsonThing;Lcom/dropbox/client2/jsonextract/JsonExtractor;)Lcom/dropbox/client2/DropboxAPI$DeltaEntry;
                 * 8: areturn
                 *  */
                // </editor-fold>
            }

            public static <MD extends Object> DeltaEntry<MD> extract(JsonThing j, com.dropbox.client2.jsonextract.JsonExtractor<MD> mdExtractor) throws JsonExtractionException {
                // <editor-fold defaultstate="collapsed" desc="Compiled Code">
                /* 0: aload_0
                 * 1: invokevirtual #4                  // Method com/dropbox/client2/jsonextract/JsonThing.expectList:()Lcom/dropbox/client2/jsonextract/JsonList;
                 * 4: astore_2
                 * 5: aload_2
                 * 6: iconst_0
                 * 7: invokevirtual #5                  // Method com/dropbox/client2/jsonextract/JsonList.get:(I)Lcom/dropbox/client2/jsonextract/JsonThing;
                 * 10: invokevirtual #6                  // Method com/dropbox/client2/jsonextract/JsonThing.expectString:()Ljava/lang/String;
                 * 13: astore_3
                 * 14: aload_2
                 * 15: iconst_1
                 * 16: invokevirtual #5                  // Method com/dropbox/client2/jsonextract/JsonList.get:(I)Lcom/dropbox/client2/jsonextract/JsonThing;
                 * 19: aload_1
                 * 20: invokevirtual #7                  // Method com/dropbox/client2/jsonextract/JsonThing.optionalExtract:(Lcom/dropbox/client2/jsonextract/JsonExtractor;)Ljava/lang/Object;
                 * 23: astore        4
                 * 25: new           #8                  // class com/dropbox/client2/DropboxAPI$DeltaEntry
                 * 28: dup
                 * 29: aload_3
                 * 30: aload         4
                 * 32: invokespecial #9                  // Method com/dropbox/client2/DropboxAPI$DeltaEntry."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
                 * 35: areturn
                 *  */
                // </editor-fold>
            }
        }
        public final String lcPath;
        public final MD metadata;

        public DeltaEntry(String lcPath, MD metadata) {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: invokespecial #1                  // Method java/lang/Object."<init>":()V
             * 4: aload_0
             * 5: aload_1
             * 6: putfield      #2                  // Field lcPath:Ljava/lang/String;
             * 9: aload_0
             * 10: aload_2
             * 11: putfield      #3                  // Field metadata:Ljava/lang/Object;
             * 14: return
             *  */
            // </editor-fold>
        }
    }

    public static final class DeltaPage<MD extends Object> {

        public final boolean reset;
        public final String cursor;
        public final List<DeltaEntry<MD>> entries;
        public final boolean hasMore;

        public DeltaPage(boolean reset, List<DeltaEntry<MD>> entries, String cursor, boolean hasMore) {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: invokespecial #1                  // Method java/lang/Object."<init>":()V
             * 4: aload_0
             * 5: iload_1
             * 6: putfield      #2                  // Field reset:Z
             * 9: aload_0
             * 10: aload_2
             * 11: putfield      #3                  // Field entries:Ljava/util/List;
             * 14: aload_0
             * 15: aload_3
             * 16: putfield      #4                  // Field cursor:Ljava/lang/String;
             * 19: aload_0
             * 20: iload         4
             * 22: putfield      #5                  // Field hasMore:Z
             * 25: return
             *  */
            // </editor-fold>
        }

        public static <MD extends Object> DeltaPage<MD> extractFromJson(JsonThing j, com.dropbox.client2.jsonextract.JsonExtractor<MD> entryExtractor) throws JsonExtractionException {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: invokevirtual #6                  // Method com/dropbox/client2/jsonextract/JsonThing.expectMap:()Lcom/dropbox/client2/jsonextract/JsonMap;
             * 4: astore_2
             * 5: aload_2
             * 6: ldc           #7                  // String reset
             * 8: invokevirtual #8                  // Method com/dropbox/client2/jsonextract/JsonMap.get:(Ljava/lang/String;)Lcom/dropbox/client2/jsonextract/JsonThing;
             * 11: invokevirtual #9                  // Method com/dropbox/client2/jsonextract/JsonThing.expectBoolean:()Z
             * 14: istore_3
             * 15: aload_2
             * 16: ldc           #10                 // String cursor
             * 18: invokevirtual #8                  // Method com/dropbox/client2/jsonextract/JsonMap.get:(Ljava/lang/String;)Lcom/dropbox/client2/jsonextract/JsonThing;
             * 21: invokevirtual #11                 // Method com/dropbox/client2/jsonextract/JsonThing.expectString:()Ljava/lang/String;
             * 24: astore        4
             * 26: aload_2
             * 27: ldc           #12                 // String has_more
             * 29: invokevirtual #8                  // Method com/dropbox/client2/jsonextract/JsonMap.get:(Ljava/lang/String;)Lcom/dropbox/client2/jsonextract/JsonThing;
             * 32: invokevirtual #9                  // Method com/dropbox/client2/jsonextract/JsonThing.expectBoolean:()Z
             * 35: istore        5
             * 37: aload_2
             * 38: ldc           #13                 // String entries
             * 40: invokevirtual #8                  // Method com/dropbox/client2/jsonextract/JsonMap.get:(Ljava/lang/String;)Lcom/dropbox/client2/jsonextract/JsonThing;
             * 43: invokevirtual #14                 // Method com/dropbox/client2/jsonextract/JsonThing.expectList:()Lcom/dropbox/client2/jsonextract/JsonList;
             * 46: new           #15                 // class com/dropbox/client2/DropboxAPI$DeltaEntry$JsonExtractor
             * 49: dup
             * 50: aload_1
             * 51: invokespecial #16                 // Method com/dropbox/client2/DropboxAPI$DeltaEntry$JsonExtractor."<init>":(Lcom/dropbox/client2/jsonextract/JsonExtractor;)V
             * 54: invokevirtual #17                 // Method com/dropbox/client2/jsonextract/JsonList.extract:(Lcom/dropbox/client2/jsonextract/JsonExtractor;)Ljava/util/ArrayList;
             * 57: astore        6
             * 59: new           #18                 // class com/dropbox/client2/DropboxAPI$DeltaPage
             * 62: dup
             * 63: iload_3
             * 64: aload         6
             * 66: aload         4
             * 68: iload         5
             * 70: invokespecial #19                 // Method "<init>":(ZLjava/util/List;Ljava/lang/String;Z)V
             * 73: areturn
             *  */
            // </editor-fold>
        }
    }

    public enum ThumbFormat {

        PNG, JPEG;

        private ThumbFormat() {
            // compiled code
        }
    }

    public enum ThumbSize {

        ICON_32x32, ICON_64x64, ICON_128x128, ICON_256x256, BESTFIT_320x240, BESTFIT_480x320, BESTFIT_640x480, BESTFIT_960x640, BESTFIT_1024x768;
        private String size;

        private ThumbSize(String size) {
            // compiled code
        }

        public String toAPISize() {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: getfield      #7                  // Field size:Ljava/lang/String;
             * 4: areturn
             *  */
            // </editor-fold>
        }
    }

    public static class DropboxLink {

        public final String url;
        public final Date expires;

        private DropboxLink(String returl, boolean secure) {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: invokespecial #3                  // Method java/lang/Object."<init>":()V
             * 4: iload_2
             * 5: ifne          35
             * 8: aload_1
             * 9: ldc           #4                  // String https://
             * 11: invokevirtual #5                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
             * 14: ifeq          35
             * 17: aload_1
             * 18: ldc           #4                  // String https://
             * 20: ldc           #6                  // String http://
             * 22: invokevirtual #7                  // Method java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
             * 25: astore_1
             * 26: aload_1
             * 27: ldc           #8                  // String :443/
             * 29: ldc           #9                  // String /
             * 31: invokevirtual #7                  // Method java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
             * 34: astore_1
             * 35: aload_0
             * 36: aload_1
             * 37: putfield      #10                 // Field url:Ljava/lang/String;
             * 40: aload_0
             * 41: aconst_null
             * 42: putfield      #11                 // Field expires:Ljava/util/Date;
             * 45: return
             *  */
            // </editor-fold>
        }

        private DropboxLink(Map<String, Object> map) {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: aload_1
             * 2: iconst_1
             * 3: invokespecial #2                  // Method "<init>":(Ljava/util/Map;Z)V
             * 6: return
             *  */
            // </editor-fold>
        }

        private DropboxLink(Map<String, Object> map, boolean secure) {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: invokespecial #3                  // Method java/lang/Object."<init>":()V
             * 4: aload_1
             * 5: ldc           #12                 // String url
             * 7: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
             * 12: checkcast     #14                 // class java/lang/String
             * 15: astore_3
             * 16: aload_1
             * 17: ldc           #15                 // String expires
             * 19: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
             * 24: checkcast     #14                 // class java/lang/String
             * 27: astore        4
             * 29: aload         4
             * 31: ifnull        46
             * 34: aload_0
             * 35: aload         4
             * 37: invokestatic  #16                 // Method com/dropbox/client2/RESTUtility.parseDate:(Ljava/lang/String;)Ljava/util/Date;
             * 40: putfield      #11                 // Field expires:Ljava/util/Date;
             * 43: goto          51
             * 46: aload_0
             * 47: aconst_null
             * 48: putfield      #11                 // Field expires:Ljava/util/Date;
             * 51: iload_2
             * 52: ifne          82
             * 55: aload_3
             * 56: ldc           #4                  // String https://
             * 58: invokevirtual #5                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
             * 61: ifeq          82
             * 64: aload_3
             * 65: ldc           #4                  // String https://
             * 67: ldc           #6                  // String http://
             * 69: invokevirtual #7                  // Method java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
             * 72: astore_3
             * 73: aload_3
             * 74: ldc           #8                  // String :443/
             * 76: ldc           #9                  // String /
             * 78: invokevirtual #7                  // Method java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
             * 81: astore_3
             * 82: aload_0
             * 83: aload_3
             * 84: putfield      #10                 // Field url:Ljava/lang/String;
             * 87: return
             *  */
            // </editor-fold>
        }
    }

    public static final class RequestAndResponse {

        public final org.apache.http.client.methods.HttpUriRequest request;
        public final org.apache.http.HttpResponse response;

        protected RequestAndResponse(org.apache.http.client.methods.HttpUriRequest request, org.apache.http.HttpResponse response) {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: invokespecial #1                  // Method java/lang/Object."<init>":()V
             * 4: aload_0
             * 5: aload_1
             * 6: putfield      #2                  // Field request:Lorg/apache/http/client/methods/HttpUriRequest;
             * 9: aload_0
             * 10: aload_2
             * 11: putfield      #3                  // Field response:Lorg/apache/http/HttpResponse;
             * 14: return
             *  */
            // </editor-fold>
        }
    }

    protected static final class BasicUploadRequest implements UploadRequest {

        private final org.apache.http.client.methods.HttpUriRequest request;
        private final Session session;

        public BasicUploadRequest(org.apache.http.client.methods.HttpUriRequest request, Session session) {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: invokespecial #1                  // Method java/lang/Object."<init>":()V
             * 4: aload_0
             * 5: aload_1
             * 6: putfield      #2                  // Field request:Lorg/apache/http/client/methods/HttpUriRequest;
             * 9: aload_0
             * 10: aload_2
             * 11: putfield      #3                  // Field session:Lcom/dropbox/client2/session/Session;
             * 14: return
             *  */
            // </editor-fold>
        }

        public void abort() {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: getfield      #2                  // Field request:Lorg/apache/http/client/methods/HttpUriRequest;
             * 4: invokeinterface #4,  1            // InterfaceMethod org/apache/http/client/methods/HttpUriRequest.abort:()V
             * 9: return
             *  */
            // </editor-fold>
        }

        public Entry upload() throws DropboxException {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: getfield      #3                  // Field session:Lcom/dropbox/client2/session/Session;
             * 4: aload_0
             * 5: getfield      #2                  // Field request:Lorg/apache/http/client/methods/HttpUriRequest;
             * 8: ldc           #5                  // int 180000
             * 10: invokestatic  #6                  // Method com/dropbox/client2/RESTUtility.execute:(Lcom/dropbox/client2/session/Session;Lorg/apache/http/client/methods/HttpUriRequest;I)Lorg/apache/http/HttpResponse;
             * 13: astore_1
             * 14: goto          43
             * 17: astore_2
             * 18: aload_0
             * 19: getfield      #2                  // Field request:Lorg/apache/http/client/methods/HttpUriRequest;
             * 22: invokeinterface #8,  1            // InterfaceMethod org/apache/http/client/methods/HttpUriRequest.isAborted:()Z
             * 27: ifeq          41
             * 30: new           #9                  // class com/dropbox/client2/exception/DropboxPartialFileException
             * 33: dup
             * 34: ldc2_w        #10                 // long -1l
             * 37: invokespecial #12                 // Method com/dropbox/client2/exception/DropboxPartialFileException."<init>":(J)V
             * 40: athrow
             * 41: aload_2
             * 42: athrow
             * 43: aload_1
             * 44: invokestatic  #13                 // Method com/dropbox/client2/RESTUtility.parseAsJSON:(Lorg/apache/http/HttpResponse;)Ljava/lang/Object;
             * 47: astore_2
             * 48: aload_2
             * 49: checkcast     #14                 // class java/util/Map
             * 52: astore_3
             * 53: new           #15                 // class com/dropbox/client2/DropboxAPI$Entry
             * 56: dup
             * 57: aload_3
             * 58: invokespecial #16                 // Method com/dropbox/client2/DropboxAPI$Entry."<init>":(Ljava/util/Map;)V
             * 61: areturn
             * Exception table:
             * from    to  target type
             * 0    14    17   Class com/dropbox/client2/exception/DropboxIOException
             *  */
            // </editor-fold>
        }
    }

    protected static final class ChunkedUploadRequest {

        private final org.apache.http.client.methods.HttpUriRequest request;
        private final Session session;

        protected ChunkedUploadRequest(org.apache.http.client.methods.HttpUriRequest request, Session session) {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: invokespecial #1                  // Method java/lang/Object."<init>":()V
             * 4: aload_0
             * 5: aload_1
             * 6: putfield      #2                  // Field request:Lorg/apache/http/client/methods/HttpUriRequest;
             * 9: aload_0
             * 10: aload_2
             * 11: putfield      #3                  // Field session:Lcom/dropbox/client2/session/Session;
             * 14: return
             *  */
            // </editor-fold>
        }

        public void abort() {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: getfield      #2                  // Field request:Lorg/apache/http/client/methods/HttpUriRequest;
             * 4: invokeinterface #4,  1            // InterfaceMethod org/apache/http/client/methods/HttpUriRequest.abort:()V
             * 9: return
             *  */
            // </editor-fold>
        }

        public ChunkedUploadResponse upload() throws DropboxException {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: getfield      #3                  // Field session:Lcom/dropbox/client2/session/Session;
             * 4: aload_0
             * 5: getfield      #2                  // Field request:Lorg/apache/http/client/methods/HttpUriRequest;
             * 8: ldc           #5                  // int 180000
             * 10: invokestatic  #6                  // Method com/dropbox/client2/RESTUtility.execute:(Lcom/dropbox/client2/session/Session;Lorg/apache/http/client/methods/HttpUriRequest;I)Lorg/apache/http/HttpResponse;
             * 13: astore_1
             * 14: goto          43
             * 17: astore_2
             * 18: aload_0
             * 19: getfield      #2                  // Field request:Lorg/apache/http/client/methods/HttpUriRequest;
             * 22: invokeinterface #8,  1            // InterfaceMethod org/apache/http/client/methods/HttpUriRequest.isAborted:()Z
             * 27: ifeq          41
             * 30: new           #9                  // class com/dropbox/client2/exception/DropboxPartialFileException
             * 33: dup
             * 34: ldc2_w        #10                 // long -1l
             * 37: invokespecial #12                 // Method com/dropbox/client2/exception/DropboxPartialFileException."<init>":(J)V
             * 40: athrow
             * 41: aload_2
             * 42: athrow
             * 43: aload_1
             * 44: invokestatic  #13                 // Method com/dropbox/client2/RESTUtility.parseAsJSON:(Lorg/apache/http/HttpResponse;)Ljava/lang/Object;
             * 47: checkcast     #14                 // class java/util/Map
             * 50: astore_2
             * 51: aload_2
             * 52: astore_3
             * 53: new           #15                 // class com/dropbox/client2/DropboxAPI$ChunkedUploadResponse
             * 56: dup
             * 57: aload_3
             * 58: invokespecial #16                 // Method com/dropbox/client2/DropboxAPI$ChunkedUploadResponse."<init>":(Ljava/util/Map;)V
             * 61: areturn
             * Exception table:
             * from    to  target type
             * 0    14    17   Class com/dropbox/client2/exception/DropboxIOException
             *  */
            // </editor-fold>
        }
    }

    public class ChunkedUploader {

        private String uploadId;
        private long offset;
        private static final int DEFAULT_CHUNK_SIZE = 4194304;
        private byte[] lastChunk;
        private InputStream stream;
        private long targetLength;
        private boolean active;
        private ChunkedUploadRequest lastRequest;
        private int chunkSize;

        ChunkedUploader(InputStream is, long length, int chunkSize) {
            // compiled code
        }

        ChunkedUploader(InputStream is, long length) {
            // compiled code
        }

        public long getOffset() {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: getfield      #3                  // Field offset:J
             * 4: lreturn
             *  */
            // </editor-fold>
        }

        public boolean isComplete() {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: getfield      #3                  // Field offset:J
             * 4: aload_0
             * 5: getfield      #8                  // Field targetLength:J
             * 8: lcmp
             * 9: ifne          16
             * 12: iconst_1
             * 13: goto          17
             * 16: iconst_0
             * 17: ireturn
             *  */
            // </editor-fold>
        }

        public boolean getActive() {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: getfield      #5                  // Field active:Z
             * 4: ireturn
             *  */
            // </editor-fold>
        }

        public void abort() {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: dup
             * 2: astore_1
             * 3: monitorenter
             * 4: aload_0
             * 5: getfield      #6                  // Field lastRequest:Lcom/dropbox/client2/DropboxAPI$ChunkedUploadRequest;
             * 8: ifnull        18
             * 11: aload_0
             * 12: getfield      #6                  // Field lastRequest:Lcom/dropbox/client2/DropboxAPI$ChunkedUploadRequest;
             * 15: invokevirtual #12                 // Method com/dropbox/client2/DropboxAPI$ChunkedUploadRequest.abort:()V
             * 18: aload_0
             * 19: iconst_0
             * 20: putfield      #5                  // Field active:Z
             * 23: aload_1
             * 24: monitorexit
             * 25: goto          33
             * 28: astore_2
             * 29: aload_1
             * 30: monitorexit
             * 31: aload_2
             * 32: athrow
             * 33: return
             * Exception table:
             * from    to  target type
             * 4    25    28   any
             * 28    31    28   any
             *  */
            // </editor-fold>
        }

        public void upload() throws DropboxException, IOException {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: aconst_null
             * 2: invokevirtual #13                 // Method upload:(Lcom/dropbox/client2/ProgressListener;)V
             * 5: return
             *  */
            // </editor-fold>
        }

        public void upload(ProgressListener listener) throws DropboxException, IOException {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: getfield      #3                  // Field offset:J
             * 4: aload_0
             * 5: getfield      #8                  // Field targetLength:J
             * 8: lcmp
             * 9: ifge          328
             * 12: aload_0
             * 13: getfield      #9                  // Field chunkSize:I
             * 16: i2l
             * 17: aload_0
             * 18: getfield      #8                  // Field targetLength:J
             * 21: aload_0
             * 22: getfield      #3                  // Field offset:J
             * 25: lsub
             * 26: invokestatic  #14                 // Method java/lang/Math.min:(JJ)J
             * 29: l2i
             * 30: istore_2
             * 31: aconst_null
             * 32: astore_3
             * 33: aload_1
             * 34: ifnull        54
             * 37: new           #15                 // class com/dropbox/client2/ProgressListener$Adjusted
             * 40: dup
             * 41: aload_1
             * 42: aload_0
             * 43: getfield      #3                  // Field offset:J
             * 46: aload_0
             * 47: getfield      #8                  // Field targetLength:J
             * 50: invokespecial #16                 // Method com/dropbox/client2/ProgressListener$Adjusted."<init>":(Lcom/dropbox/client2/ProgressListener;JJ)V
             * 53: astore_3
             * 54: aload_0
             * 55: getfield      #4                  // Field lastChunk:[B
             * 58: ifnonnull     142
             * 61: aload_0
             * 62: iload_2
             * 63: newarray       byte
             * 65: putfield      #4                  // Field lastChunk:[B
             * 68: aload_0
             * 69: getfield      #7                  // Field stream:Ljava/io/InputStream;
             * 72: aload_0
             * 73: getfield      #4                  // Field lastChunk:[B
             * 76: invokevirtual #17                 // Method java/io/InputStream.read:([B)I
             * 79: istore        4
             * 81: iload         4
             * 83: aload_0
             * 84: getfield      #4                  // Field lastChunk:[B
             * 87: arraylength
             * 88: if_icmpge     142
             * 91: new           #18                 // class java/lang/IllegalStateException
             * 94: dup
             * 95: new           #19                 // class java/lang/StringBuilder
             * 98: dup
             * 99: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
             * 102: ldc           #21                 // String InputStream ended after
             * 104: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
             * 107: aload_0
             * 108: getfield      #3                  // Field offset:J
             * 111: iload         4
             * 113: i2l
             * 114: ladd
             * 115: invokevirtual #23                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
             * 118: ldc           #24                 // String  bytes, expecting
             * 120: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
             * 123: aload_0
             * 124: getfield      #8                  // Field targetLength:J
             * 127: invokevirtual #23                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
             * 130: ldc           #25                 // String  bytes.
             * 132: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
             * 135: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
             * 138: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
             * 141: athrow
             * 142: aload_0
             * 143: dup
             * 144: astore        4
             * 146: monitorenter
             * 147: aload_0
             * 148: getfield      #5                  // Field active:Z
             * 151: ifne          163
             * 154: new           #28                 // class com/dropbox/client2/exception/DropboxPartialFileException
             * 157: dup
             * 158: lconst_0
             * 159: invokespecial #29                 // Method com/dropbox/client2/exception/DropboxPartialFileException."<init>":(J)V
             * 162: athrow
             * 163: aload_0
             * 164: aload_0
             * 165: getfield      #1                  // Field this$0:Lcom/dropbox/client2/DropboxAPI;
             * 168: new           #30                 // class java/io/ByteArrayInputStream
             * 171: dup
             * 172: aload_0
             * 173: getfield      #4                  // Field lastChunk:[B
             * 176: invokespecial #31                 // Method java/io/ByteArrayInputStream."<init>":([B)V
             * 179: aload_0
             * 180: getfield      #4                  // Field lastChunk:[B
             * 183: arraylength
             * 184: i2l
             * 185: aload_3
             * 186: aload_0
             * 187: getfield      #3                  // Field offset:J
             * 190: aload_0
             * 191: getfield      #32                 // Field uploadId:Ljava/lang/String;
             * 194: invokevirtual #33                 // Method com/dropbox/client2/DropboxAPI.chunkedUploadRequest:(Ljava/io/InputStream;JLcom/dropbox/client2/ProgressListener;JLjava/lang/String;)Lcom/dropbox/client2/DropboxAPI$ChunkedUploadRequest;
             * 197: putfield      #6                  // Field lastRequest:Lcom/dropbox/client2/DropboxAPI$ChunkedUploadRequest;
             * 200: aload         4
             * 202: monitorexit
             * 203: goto          214
             * 206: astore        5
             * 208: aload         4
             * 210: monitorexit
             * 211: aload         5
             * 213: athrow
             * 214: aload_0
             * 215: getfield      #6                  // Field lastRequest:Lcom/dropbox/client2/DropboxAPI$ChunkedUploadRequest;
             * 218: invokevirtual #34                 // Method com/dropbox/client2/DropboxAPI$ChunkedUploadRequest.upload:()Lcom/dropbox/client2/DropboxAPI$ChunkedUploadResponse;
             * 221: astore        4
             * 223: aload_0
             * 224: aload         4
             * 226: invokevirtual #35                 // Method com/dropbox/client2/DropboxAPI$ChunkedUploadResponse.getOffset:()J
             * 229: putfield      #3                  // Field offset:J
             * 232: aload_0
             * 233: aload         4
             * 235: invokevirtual #36                 // Method com/dropbox/client2/DropboxAPI$ChunkedUploadResponse.getUploadId:()Ljava/lang/String;
             * 238: putfield      #32                 // Field uploadId:Ljava/lang/String;
             * 241: aload_0
             * 242: aconst_null
             * 243: putfield      #4                  // Field lastChunk:[B
             * 246: goto          325
             * 249: astore        4
             * 251: aload         4
             * 253: getfield      #38                 // Field com/dropbox/client2/exception/DropboxServerException.body:Lcom/dropbox/client2/exception/DropboxServerException$Error;
             * 256: getfield      #39                 // Field com/dropbox/client2/exception/DropboxServerException$Error.fields:Ljava/util/Map;
             * 259: ldc           #40                 // String offset
             * 261: invokeinterface #41,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
             * 266: ifeq          322
             * 269: aload         4
             * 271: getfield      #38                 // Field com/dropbox/client2/exception/DropboxServerException.body:Lcom/dropbox/client2/exception/DropboxServerException$Error;
             * 274: getfield      #39                 // Field com/dropbox/client2/exception/DropboxServerException$Error.fields:Ljava/util/Map;
             * 277: ldc           #40                 // String offset
             * 279: invokeinterface #42,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
             * 284: checkcast     #43                 // class java/lang/Long
             * 287: invokevirtual #44                 // Method java/lang/Long.longValue:()J
             * 290: lstore        5
             * 292: lload         5
             * 294: aload_0
             * 295: getfield      #3                  // Field offset:J
             * 298: lcmp
             * 299: ifle          316
             * 302: aload_0
             * 303: aconst_null
             * 304: putfield      #4                  // Field lastChunk:[B
             * 307: aload_0
             * 308: lload         5
             * 310: putfield      #3                  // Field offset:J
             * 313: goto          319
             * 316: aload         4
             * 318: athrow
             * 319: goto          325
             * 322: aload         4
             * 324: athrow
             * 325: goto          0
             * 328: return
             * Exception table:
             * from    to  target type
             * 147   203   206   any
             * 206   211   206   any
             * 142   246   249   Class com/dropbox/client2/exception/DropboxServerException
             *  */
            // </editor-fold>
        }

        public Entry finish(String path, String parentRev) throws DropboxException {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: getfield      #1                  // Field this$0:Lcom/dropbox/client2/DropboxAPI;
             * 4: aload_1
             * 5: aload_0
             * 6: getfield      #32                 // Field uploadId:Ljava/lang/String;
             * 9: iconst_0
             * 10: aload_2
             * 11: invokestatic  #45                 // Method com/dropbox/client2/DropboxAPI.access$100:(Lcom/dropbox/client2/DropboxAPI;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Lcom/dropbox/client2/DropboxAPI$Entry;
             * 14: areturn
             *  */
            // </editor-fold>
        }
    }

    public static interface UploadRequest {

        public void abort();

        public Entry upload() throws DropboxException;
    }

    public static class DropboxInputStream extends FilterInputStream {

        private final org.apache.http.client.methods.HttpUriRequest request;
        private final DropboxFileInfo info;

        public DropboxInputStream(org.apache.http.client.methods.HttpUriRequest request, org.apache.http.HttpResponse response) throws DropboxException {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: aconst_null
             * 2: invokespecial #1                  // Method java/io/FilterInputStream."<init>":(Ljava/io/InputStream;)V
             * 5: aload_2
             * 6: invokeinterface #2,  1            // InterfaceMethod org/apache/http/HttpResponse.getEntity:()Lorg/apache/http/HttpEntity;
             * 11: astore_3
             * 12: aload_3
             * 13: ifnonnull     26
             * 16: new           #3                  // class com/dropbox/client2/exception/DropboxException
             * 19: dup
             * 20: ldc           #4                  // String Didn't get entity from HttpResponse
             * 22: invokespecial #5                  // Method com/dropbox/client2/exception/DropboxException."<init>":(Ljava/lang/String;)V
             * 25: athrow
             * 26: aload_0
             * 27: aload_3
             * 28: invokeinterface #6,  1            // InterfaceMethod org/apache/http/HttpEntity.getContent:()Ljava/io/InputStream;
             * 33: putfield      #7                  // Field java/io/FilterInputStream.in:Ljava/io/InputStream;
             * 36: goto          51
             * 39: astore        4
             * 41: new           #9                  // class com/dropbox/client2/exception/DropboxIOException
             * 44: dup
             * 45: aload         4
             * 47: invokespecial #10                 // Method com/dropbox/client2/exception/DropboxIOException."<init>":(Ljava/io/IOException;)V
             * 50: athrow
             * 51: aload_0
             * 52: aload_1
             * 53: putfield      #11                 // Field request:Lorg/apache/http/client/methods/HttpUriRequest;
             * 56: aload_0
             * 57: new           #12                 // class com/dropbox/client2/DropboxAPI$DropboxFileInfo
             * 60: dup
             * 61: aload_2
             * 62: aconst_null
             * 63: invokespecial #13                 // Method com/dropbox/client2/DropboxAPI$DropboxFileInfo."<init>":(Lorg/apache/http/HttpResponse;Lcom/dropbox/client2/DropboxAPI$1;)V
             * 66: putfield      #14                 // Field info:Lcom/dropbox/client2/DropboxAPI$DropboxFileInfo;
             * 69: return
             * Exception table:
             * from    to  target type
             * 26    36    39   Class java/io/IOException
             *  */
            // </editor-fold>
        }

        public void close() throws IOException {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: getfield      #11                 // Field request:Lorg/apache/http/client/methods/HttpUriRequest;
             * 4: invokeinterface #15,  1           // InterfaceMethod org/apache/http/client/methods/HttpUriRequest.abort:()V
             * 9: aload_0
             * 10: invokespecial #16                 // Method java/io/FilterInputStream.close:()V
             * 13: goto          23
             * 16: astore_1
             * 17: aload_0
             * 18: invokespecial #16                 // Method java/io/FilterInputStream.close:()V
             * 21: aload_1
             * 22: athrow
             * 23: return
             * Exception table:
             * from    to  target type
             * 0     9    16   any
             * 16    17    16   any
             *  */
            // </editor-fold>
        }

        public DropboxFileInfo getFileInfo() {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: getfield      #14                 // Field info:Lcom/dropbox/client2/DropboxAPI$DropboxFileInfo;
             * 4: areturn
             *  */
            // </editor-fold>
        }

        public void copyStreamToOutput(OutputStream os, ProgressListener listener) throws DropboxIOException, DropboxPartialFileException, DropboxLocalStorageFullException {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aconst_null
             * 1: astore_3
             * 2: lconst_0
             * 3: lstore        4
             * 5: lconst_0
             * 6: lstore        6
             * 8: aload_0
             * 9: getfield      #14                 // Field info:Lcom/dropbox/client2/DropboxAPI$DropboxFileInfo;
             * 12: invokevirtual #17                 // Method com/dropbox/client2/DropboxAPI$DropboxFileInfo.getFileSize:()J
             * 15: lstore        8
             * 17: new           #18                 // class java/io/BufferedOutputStream
             * 20: dup
             * 21: aload_1
             * 22: invokespecial #19                 // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;)V
             * 25: astore_3
             * 26: sipush        4096
             * 29: newarray       byte
             * 31: astore        10
             * 33: aload_0
             * 34: aload         10
             * 36: invokevirtual #20                 // Method read:([B)I
             * 39: istore        11
             * 41: iload         11
             * 43: ifge          71
             * 46: lload         8
             * 48: lconst_0
             * 49: lcmp
             * 50: iflt          125
             * 53: lload         4
             * 55: lload         8
             * 57: lcmp
             * 58: ifge          125
             * 61: new           #21                 // class com/dropbox/client2/exception/DropboxPartialFileException
             * 64: dup
             * 65: lload         4
             * 67: invokespecial #22                 // Method com/dropbox/client2/exception/DropboxPartialFileException."<init>":(J)V
             * 70: athrow
             * 71: aload_3
             * 72: aload         10
             * 74: iconst_0
             * 75: iload         11
             * 77: invokevirtual #23                 // Method java/io/BufferedOutputStream.write:([BII)V
             * 80: lload         4
             * 82: iload         11
             * 84: i2l
             * 85: ladd
             * 86: lstore        4
             * 88: aload_2
             * 89: ifnull        33
             * 92: invokestatic  #24                 // Method java/lang/System.currentTimeMillis:()J
             * 95: lstore        12
             * 97: lload         12
             * 99: lload         6
             * 101: lsub
             * 102: aload_2
             * 103: invokevirtual #25                 // Method com/dropbox/client2/ProgressListener.progressInterval:()J
             * 106: lcmp
             * 107: ifle          122
             * 110: lload         12
             * 112: lstore        6
             * 114: aload_2
             * 115: lload         4
             * 117: lload         8
             * 119: invokevirtual #26                 // Method com/dropbox/client2/ProgressListener.onProgress:(JJ)V
             * 122: goto          33
             * 125: aload_3
             * 126: invokevirtual #27                 // Method java/io/BufferedOutputStream.flush:()V
             * 129: aload_1
             * 130: invokevirtual #28                 // Method java/io/OutputStream.flush:()V
             * 133: aload_1
             * 134: instanceof    #29                 // class java/io/FileOutputStream
             * 137: ifeq          150
             * 140: aload_1
             * 141: checkcast     #29                 // class java/io/FileOutputStream
             * 144: invokevirtual #30                 // Method java/io/FileOutputStream.getFD:()Ljava/io/FileDescriptor;
             * 147: invokevirtual #31                 // Method java/io/FileDescriptor.sync:()V
             * 150: goto          155
             * 153: astore        12
             * 155: aload_3
             * 156: ifnull        168
             * 159: aload_3
             * 160: invokevirtual #33                 // Method java/io/BufferedOutputStream.close:()V
             * 163: goto          168
             * 166: astore        10
             * 168: aload_1
             * 169: ifnull        181
             * 172: aload_1
             * 173: invokevirtual #34                 // Method java/io/OutputStream.close:()V
             * 176: goto          181
             * 179: astore        10
             * 181: aload_0
             * 182: invokevirtual #35                 // Method close:()V
             * 185: goto          275
             * 188: astore        10
             * 190: goto          275
             * 193: astore        10
             * 195: aload         10
             * 197: invokevirtual #36                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
             * 200: astore        11
             * 202: aload         11
             * 204: ifnull        225
             * 207: aload         11
             * 209: ldc           #37                 // String No space
             * 211: invokevirtual #38                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
             * 214: ifeq          225
             * 217: new           #39                 // class com/dropbox/client2/exception/DropboxLocalStorageFullException
             * 220: dup
             * 221: invokespecial #40                 // Method com/dropbox/client2/exception/DropboxLocalStorageFullException."<init>":()V
             * 224: athrow
             * 225: new           #21                 // class com/dropbox/client2/exception/DropboxPartialFileException
             * 228: dup
             * 229: lload         4
             * 231: invokespecial #22                 // Method com/dropbox/client2/exception/DropboxPartialFileException."<init>":(J)V
             * 234: athrow
             * 235: astore        14
             * 237: aload_3
             * 238: ifnull        250
             * 241: aload_3
             * 242: invokevirtual #33                 // Method java/io/BufferedOutputStream.close:()V
             * 245: goto          250
             * 248: astore        15
             * 250: aload_1
             * 251: ifnull        263
             * 254: aload_1
             * 255: invokevirtual #34                 // Method java/io/OutputStream.close:()V
             * 258: goto          263
             * 261: astore        15
             * 263: aload_0
             * 264: invokevirtual #35                 // Method close:()V
             * 267: goto          272
             * 270: astore        15
             * 272: aload         14
             * 274: athrow
             * 275: return
             * Exception table:
             * from    to  target type
             * 133   150   153   Class java/io/SyncFailedException
             * 159   163   166   Class java/io/IOException
             * 172   176   179   Class java/io/IOException
             * 181   185   188   Class java/io/IOException
             * 17   155   193   Class java/io/IOException
             * 17   155   235   any
             * 241   245   248   Class java/io/IOException
             * 254   258   261   Class java/io/IOException
             * 263   267   270   Class java/io/IOException
             * 193   237   235   any
             *  */
            // </editor-fold>
        }
    }

    public static final class DropboxFileInfo {

        private String mimeType;
        private long fileSize;
        private String charset;
        private Entry metadata;

        private DropboxFileInfo(org.apache.http.HttpResponse response) throws DropboxException {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: invokespecial #2                  // Method java/lang/Object."<init>":()V
             * 4: aload_0
             * 5: aconst_null
             * 6: putfield      #3                  // Field mimeType:Ljava/lang/String;
             * 9: aload_0
             * 10: ldc2_w        #4                  // long -1l
             * 13: putfield      #6                  // Field fileSize:J
             * 16: aload_0
             * 17: aconst_null
             * 18: putfield      #7                  // Field charset:Ljava/lang/String;
             * 21: aload_0
             * 22: aconst_null
             * 23: putfield      #8                  // Field metadata:Lcom/dropbox/client2/DropboxAPI$Entry;
             * 26: aload_0
             * 27: aload_1
             * 28: invokestatic  #9                  // Method parseXDropboxMetadata:(Lorg/apache/http/HttpResponse;)Lcom/dropbox/client2/DropboxAPI$Entry;
             * 31: putfield      #8                  // Field metadata:Lcom/dropbox/client2/DropboxAPI$Entry;
             * 34: aload_0
             * 35: getfield      #8                  // Field metadata:Lcom/dropbox/client2/DropboxAPI$Entry;
             * 38: ifnonnull     51
             * 41: new           #10                 // class com/dropbox/client2/exception/DropboxParseException
             * 44: dup
             * 45: ldc           #11                 // String Error parsing metadata.
             * 47: invokespecial #12                 // Method com/dropbox/client2/exception/DropboxParseException."<init>":(Ljava/lang/String;)V
             * 50: athrow
             * 51: aload_0
             * 52: aload_1
             * 53: aload_0
             * 54: getfield      #8                  // Field metadata:Lcom/dropbox/client2/DropboxAPI$Entry;
             * 57: invokestatic  #13                 // Method parseFileSize:(Lorg/apache/http/HttpResponse;Lcom/dropbox/client2/DropboxAPI$Entry;)J
             * 60: putfield      #6                  // Field fileSize:J
             * 63: aload_0
             * 64: getfield      #6                  // Field fileSize:J
             * 67: ldc2_w        #4                  // long -1l
             * 70: lcmp
             * 71: ifne          84
             * 74: new           #10                 // class com/dropbox/client2/exception/DropboxParseException
             * 77: dup
             * 78: ldc           #14                 // String Error determining file size.
             * 80: invokespecial #12                 // Method com/dropbox/client2/exception/DropboxParseException."<init>":(Ljava/lang/String;)V
             * 83: athrow
             * 84: aload_1
             * 85: ldc           #15                 // String Content-Type
             * 87: invokeinterface #16,  2           // InterfaceMethod org/apache/http/HttpResponse.getFirstHeader:(Ljava/lang/String;)Lorg/apache/http/Header;
             * 92: astore_2
             * 93: aload_2
             * 94: ifnull        169
             * 97: aload_2
             * 98: invokeinterface #17,  1           // InterfaceMethod org/apache/http/Header.getValue:()Ljava/lang/String;
             * 103: astore_3
             * 104: aload_3
             * 105: ifnull        169
             * 108: aload_3
             * 109: ldc           #18                 // String ;
             * 111: invokevirtual #19                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
             * 114: astore        4
             * 116: aload         4
             * 118: arraylength
             * 119: ifle          133
             * 122: aload_0
             * 123: aload         4
             * 125: iconst_0
             * 126: aaload
             * 127: invokevirtual #20                 // Method java/lang/String.trim:()Ljava/lang/String;
             * 130: putfield      #3                  // Field mimeType:Ljava/lang/String;
             * 133: aload         4
             * 135: arraylength
             * 136: iconst_1
             * 137: if_icmple     169
             * 140: aload         4
             * 142: iconst_1
             * 143: aaload
             * 144: ldc           #21                 // String =
             * 146: invokevirtual #19                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
             * 149: astore        4
             * 151: aload         4
             * 153: arraylength
             * 154: iconst_1
             * 155: if_icmple     169
             * 158: aload_0
             * 159: aload         4
             * 161: iconst_1
             * 162: aaload
             * 163: invokevirtual #20                 // Method java/lang/String.trim:()Ljava/lang/String;
             * 166: putfield      #7                  // Field charset:Ljava/lang/String;
             * 169: return
             *  */
            // </editor-fold>
        }

        private static Entry parseXDropboxMetadata(org.apache.http.HttpResponse response) {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: ifnonnull     6
             * 4: aconst_null
             * 5: areturn
             * 6: aload_0
             * 7: ldc           #22                 // String X-Dropbox-Metadata
             * 9: invokeinterface #16,  2           // InterfaceMethod org/apache/http/HttpResponse.getFirstHeader:(Ljava/lang/String;)Lorg/apache/http/Header;
             * 14: astore_1
             * 15: aload_1
             * 16: ifnonnull     21
             * 19: aconst_null
             * 20: areturn
             * 21: aload_1
             * 22: invokeinterface #17,  1           // InterfaceMethod org/apache/http/Header.getValue:()Ljava/lang/String;
             * 27: astore_2
             * 28: aload_2
             * 29: invokestatic  #23                 // Method org/json/simple/JSONValue.parse:(Ljava/lang/String;)Ljava/lang/Object;
             * 32: astore_3
             * 33: aload_3
             * 34: ifnonnull     39
             * 37: aconst_null
             * 38: areturn
             * 39: aload_3
             * 40: checkcast     #24                 // class java/util/Map
             * 43: astore        4
             * 45: new           #25                 // class com/dropbox/client2/DropboxAPI$Entry
             * 48: dup
             * 49: aload         4
             * 51: invokespecial #26                 // Method com/dropbox/client2/DropboxAPI$Entry."<init>":(Ljava/util/Map;)V
             * 54: areturn
             *  */
            // </editor-fold>
        }

        private static long parseFileSize(org.apache.http.HttpResponse response, Entry metadata) {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: invokeinterface #27,  1           // InterfaceMethod org/apache/http/HttpResponse.getEntity:()Lorg/apache/http/HttpEntity;
             * 6: invokeinterface #28,  1           // InterfaceMethod org/apache/http/HttpEntity.getContentLength:()J
             * 11: lstore_2
             * 12: lload_2
             * 13: lconst_0
             * 14: lcmp
             * 15: iflt          20
             * 18: lload_2
             * 19: lreturn
             * 20: aload_1
             * 21: ifnull        29
             * 24: aload_1
             * 25: getfield      #29                 // Field com/dropbox/client2/DropboxAPI$Entry.bytes:J
             * 28: lreturn
             * 29: ldc2_w        #4                  // long -1l
             * 32: lreturn
             *  */
            // </editor-fold>
        }

        public final String getMimeType() {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: getfield      #3                  // Field mimeType:Ljava/lang/String;
             * 4: areturn
             *  */
            // </editor-fold>
        }

        @Deprecated
        public final long getContentLength() {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: invokevirtual #30                 // Method getFileSize:()J
             * 4: lreturn
             *  */
            // </editor-fold>
        }

        public final long getFileSize() {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: getfield      #6                  // Field fileSize:J
             * 4: lreturn
             *  */
            // </editor-fold>
        }

        public final String getCharset() {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: getfield      #7                  // Field charset:Ljava/lang/String;
             * 4: areturn
             *  */
            // </editor-fold>
        }

        public final Entry getMetadata() {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: getfield      #8                  // Field metadata:Lcom/dropbox/client2/DropboxAPI$Entry;
             * 4: areturn
             *  */
            // </editor-fold>
        }
    }

    public static final class ChunkedUploadResponse {

        private final String uploadId;
        private final long offset;

        public ChunkedUploadResponse(Map<String, Object> fields) {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: invokespecial #1                  // Method java/lang/Object."<init>":()V
             * 4: aload_0
             * 5: aload_1
             * 6: ldc           #2                  // String upload_id
             * 8: invokeinterface #3,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
             * 13: checkcast     #4                  // class java/lang/String
             * 16: putfield      #5                  // Field uploadId:Ljava/lang/String;
             * 19: aload_0
             * 20: aload_1
             * 21: ldc           #6                  // String offset
             * 23: invokeinterface #3,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
             * 28: checkcast     #7                  // class java/lang/Long
             * 31: invokevirtual #8                  // Method java/lang/Long.longValue:()J
             * 34: putfield      #9                  // Field offset:J
             * 37: return
             *  */
            // </editor-fold>
        }

        public String getUploadId() {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: getfield      #5                  // Field uploadId:Ljava/lang/String;
             * 4: areturn
             *  */
            // </editor-fold>
        }

        public long getOffset() {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: getfield      #9                  // Field offset:J
             * 4: lreturn
             *  */
            // </editor-fold>
        }
    }

    public static class Entry {

        public long bytes;
        public String hash;
        public String icon;
        public boolean isDir;
        public String modified;
        public String clientMtime;
        public String path;
        public String root;
        public String size;
        public String mimeType;
        public String rev;
        public boolean thumbExists;
        public boolean isDeleted;
        public List<Entry> contents;
        public static final com.dropbox.client2.jsonextract.JsonExtractor<Entry> JsonExtractor;

        public Entry(Map<String, Object> map) {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: invokespecial #1                  // Method java/lang/Object."<init>":()V
             * 4: aload_0
             * 5: aload_1
             * 6: ldc           #2                  // String bytes
             * 8: invokestatic  #3                  // Method com/dropbox/client2/DropboxAPI.getFromMapAsLong:(Ljava/util/Map;Ljava/lang/String;)J
             * 11: putfield      #4                  // Field bytes:J
             * 14: aload_0
             * 15: aload_1
             * 16: ldc           #5                  // String hash
             * 18: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
             * 23: checkcast     #7                  // class java/lang/String
             * 26: putfield      #8                  // Field hash:Ljava/lang/String;
             * 29: aload_0
             * 30: aload_1
             * 31: ldc           #9                  // String icon
             * 33: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
             * 38: checkcast     #7                  // class java/lang/String
             * 41: putfield      #10                 // Field icon:Ljava/lang/String;
             * 44: aload_0
             * 45: aload_1
             * 46: ldc           #11                 // String is_dir
             * 48: invokestatic  #12                 // Method com/dropbox/client2/DropboxAPI.getFromMapAsBoolean:(Ljava/util/Map;Ljava/lang/String;)Z
             * 51: putfield      #13                 // Field isDir:Z
             * 54: aload_0
             * 55: aload_1
             * 56: ldc           #14                 // String modified
             * 58: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
             * 63: checkcast     #7                  // class java/lang/String
             * 66: putfield      #15                 // Field modified:Ljava/lang/String;
             * 69: aload_0
             * 70: aload_1
             * 71: ldc           #16                 // String client_mtime
             * 73: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
             * 78: checkcast     #7                  // class java/lang/String
             * 81: putfield      #17                 // Field clientMtime:Ljava/lang/String;
             * 84: aload_0
             * 85: aload_1
             * 86: ldc           #18                 // String path
             * 88: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
             * 93: checkcast     #7                  // class java/lang/String
             * 96: putfield      #19                 // Field path:Ljava/lang/String;
             * 99: aload_0
             * 100: aload_1
             * 101: ldc           #20                 // String root
             * 103: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
             * 108: checkcast     #7                  // class java/lang/String
             * 111: putfield      #21                 // Field root:Ljava/lang/String;
             * 114: aload_0
             * 115: aload_1
             * 116: ldc           #22                 // String size
             * 118: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
             * 123: checkcast     #7                  // class java/lang/String
             * 126: putfield      #23                 // Field size:Ljava/lang/String;
             * 129: aload_0
             * 130: aload_1
             * 131: ldc           #24                 // String mime_type
             * 133: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
             * 138: checkcast     #7                  // class java/lang/String
             * 141: putfield      #25                 // Field mimeType:Ljava/lang/String;
             * 144: aload_0
             * 145: aload_1
             * 146: ldc           #26                 // String rev
             * 148: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
             * 153: checkcast     #7                  // class java/lang/String
             * 156: putfield      #27                 // Field rev:Ljava/lang/String;
             * 159: aload_0
             * 160: aload_1
             * 161: ldc           #28                 // String thumb_exists
             * 163: invokestatic  #12                 // Method com/dropbox/client2/DropboxAPI.getFromMapAsBoolean:(Ljava/util/Map;Ljava/lang/String;)Z
             * 166: putfield      #29                 // Field thumbExists:Z
             * 169: aload_0
             * 170: aload_1
             * 171: ldc           #30                 // String is_deleted
             * 173: invokestatic  #12                 // Method com/dropbox/client2/DropboxAPI.getFromMapAsBoolean:(Ljava/util/Map;Ljava/lang/String;)Z
             * 176: putfield      #31                 // Field isDeleted:Z
             * 179: aload_1
             * 180: ldc           #32                 // String contents
             * 182: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
             * 187: astore_2
             * 188: aload_2
             * 189: ifnull        271
             * 192: aload_2
             * 193: instanceof    #33                 // class org/json/simple/JSONArray
             * 196: ifeq          271
             * 199: aload_0
             * 200: new           #34                 // class java/util/ArrayList
             * 203: dup
             * 204: invokespecial #35                 // Method java/util/ArrayList."<init>":()V
             * 207: putfield      #36                 // Field contents:Ljava/util/List;
             * 210: aload_2
             * 211: checkcast     #33                 // class org/json/simple/JSONArray
             * 214: invokevirtual #37                 // Method org/json/simple/JSONArray.iterator:()Ljava/util/Iterator;
             * 217: astore        4
             * 219: aload         4
             * 221: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
             * 226: ifeq          268
             * 229: aload         4
             * 231: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
             * 236: astore_3
             * 237: aload_3
             * 238: instanceof    #40                 // class java/util/Map
             * 241: ifeq          219
             * 244: aload_0
             * 245: getfield      #36                 // Field contents:Ljava/util/List;
             * 248: new           #41                 // class com/dropbox/client2/DropboxAPI$Entry
             * 251: dup
             * 252: aload_3
             * 253: checkcast     #40                 // class java/util/Map
             * 256: invokespecial #42                 // Method "<init>":(Ljava/util/Map;)V
             * 259: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
             * 264: pop
             * 265: goto          219
             * 268: goto          276
             * 271: aload_0
             * 272: aconst_null
             * 273: putfield      #36                 // Field contents:Ljava/util/List;
             * 276: return
             *  */
            // </editor-fold>
        }

        public Entry() {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: invokespecial #1                  // Method java/lang/Object."<init>":()V
             * 4: return
             *  */
            // </editor-fold>
        }

        public String fileName() {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: getfield      #19                 // Field path:Ljava/lang/String;
             * 4: bipush        47
             * 6: invokevirtual #44                 // Method java/lang/String.lastIndexOf:(I)I
             * 9: istore_1
             * 10: aload_0
             * 11: getfield      #19                 // Field path:Ljava/lang/String;
             * 14: iload_1
             * 15: iconst_1
             * 16: iadd
             * 17: aload_0
             * 18: getfield      #19                 // Field path:Ljava/lang/String;
             * 21: invokevirtual #45                 // Method java/lang/String.length:()I
             * 24: invokevirtual #46                 // Method java/lang/String.substring:(II)Ljava/lang/String;
             * 27: areturn
             *  */
            // </editor-fold>
        }

        public String parentPath() {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: getfield      #19                 // Field path:Ljava/lang/String;
             * 4: ldc           #47                 // String /
             * 6: invokevirtual #48                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
             * 9: ifeq          15
             * 12: ldc           #49                 // String
             * 14: areturn
             * 15: aload_0
             * 16: getfield      #19                 // Field path:Ljava/lang/String;
             * 19: bipush        47
             * 21: invokevirtual #44                 // Method java/lang/String.lastIndexOf:(I)I
             * 24: istore_1
             * 25: aload_0
             * 26: getfield      #19                 // Field path:Ljava/lang/String;
             * 29: iconst_0
             * 30: iload_1
             * 31: iconst_1
             * 32: iadd
             * 33: invokevirtual #46                 // Method java/lang/String.substring:(II)Ljava/lang/String;
             * 36: areturn
             *  */
            // </editor-fold>
        }
    }

    public static class Account implements Serializable {

        private static final long serialVersionUID = 2097522622341535732L;
        public final String country;
        public final String displayName;
        public final long quota;
        public final long quotaNormal;
        public final long quotaShared;
        public final long uid;
        public final String referralLink;

        protected Account(Map<String, Object> map) {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: invokespecial #1                  // Method java/lang/Object."<init>":()V
             * 4: aload_0
             * 5: aload_1
             * 6: ldc           #2                  // String country
             * 8: invokeinterface #3,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
             * 13: checkcast     #4                  // class java/lang/String
             * 16: putfield      #5                  // Field country:Ljava/lang/String;
             * 19: aload_0
             * 20: aload_1
             * 21: ldc           #6                  // String display_name
             * 23: invokeinterface #3,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
             * 28: checkcast     #4                  // class java/lang/String
             * 31: putfield      #7                  // Field displayName:Ljava/lang/String;
             * 34: aload_0
             * 35: aload_1
             * 36: ldc           #8                  // String uid
             * 38: invokestatic  #9                  // Method com/dropbox/client2/DropboxAPI.getFromMapAsLong:(Ljava/util/Map;Ljava/lang/String;)J
             * 41: putfield      #10                 // Field uid:J
             * 44: aload_0
             * 45: aload_1
             * 46: ldc           #11                 // String referral_link
             * 48: invokeinterface #3,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
             * 53: checkcast     #4                  // class java/lang/String
             * 56: putfield      #12                 // Field referralLink:Ljava/lang/String;
             * 59: aload_1
             * 60: ldc           #13                 // String quota_info
             * 62: invokeinterface #3,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
             * 67: astore_2
             * 68: aload_2
             * 69: checkcast     #14                 // class java/util/Map
             * 72: astore_3
             * 73: aload_0
             * 74: aload_3
             * 75: ldc           #15                 // String quota
             * 77: invokestatic  #9                  // Method com/dropbox/client2/DropboxAPI.getFromMapAsLong:(Ljava/util/Map;Ljava/lang/String;)J
             * 80: putfield      #16                 // Field quota:J
             * 83: aload_0
             * 84: aload_3
             * 85: ldc           #17                 // String normal
             * 87: invokestatic  #9                  // Method com/dropbox/client2/DropboxAPI.getFromMapAsLong:(Ljava/util/Map;Ljava/lang/String;)J
             * 90: putfield      #18                 // Field quotaNormal:J
             * 93: aload_0
             * 94: aload_3
             * 95: ldc           #19                 // String shared
             * 97: invokestatic  #9                  // Method com/dropbox/client2/DropboxAPI.getFromMapAsLong:(Ljava/util/Map;Ljava/lang/String;)J
             * 100: putfield      #20                 // Field quotaShared:J
             * 103: return
             *  */
            // </editor-fold>
        }

        protected Account(String country, String displayName, long uid, String referralLink, long quota, long quotaNormal, long quotaShared) {
            // <editor-fold defaultstate="collapsed" desc="Compiled Code">
            /* 0: aload_0
             * 1: invokespecial #1                  // Method java/lang/Object."<init>":()V
             * 4: aload_0
             * 5: aload_1
             * 6: putfield      #5                  // Field country:Ljava/lang/String;
             * 9: aload_0
             * 10: aload_2
             * 11: putfield      #7                  // Field displayName:Ljava/lang/String;
             * 14: aload_0
             * 15: lload_3
             * 16: putfield      #10                 // Field uid:J
             * 19: aload_0
             * 20: aload         5
             * 22: putfield      #12                 // Field referralLink:Ljava/lang/String;
             * 25: aload_0
             * 26: lload         6
             * 28: putfield      #16                 // Field quota:J
             * 31: aload_0
             * 32: lload         8
             * 34: putfield      #18                 // Field quotaNormal:J
             * 37: aload_0
             * 38: lload         10
             * 40: putfield      #20                 // Field quotaShared:J
             * 43: return
             *  */
            // </editor-fold>
        }
    }
    public static final int VERSION = 1;
    public static final String SDK_VERSION;
    public static final long MAX_UPLOAD_SIZE = 188743680L;
    protected static final int METADATA_DEFAULT_LIMIT = 25000;
    private static final int REVISION_DEFAULT_LIMIT = 1000;
    private static final int SEARCH_DEFAULT_LIMIT = 10000;
    private static final int UPLOAD_SO_TIMEOUT_MS = 180000;
    protected final SESS_T session;

    public DropboxAPI(SESS_T session) {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: invokespecial #2                  // Method java/lang/Object."<init>":()V
         * 4: aload_1
         * 5: ifnonnull     18
         * 8: new           #3                  // class java/lang/IllegalArgumentException
         * 11: dup
         * 12: ldc           #4                  // String Session must not be null.
         * 14: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
         * 17: athrow
         * 18: aload_0
         * 19: aload_1
         * 20: putfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 23: return
         *  */
        // </editor-fold>
    }

    public ChunkedUploader getChunkedUploader(InputStream is, long length) {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: new           #7                  // class com/dropbox/client2/DropboxAPI$ChunkedUploader
         * 3: dup
         * 4: aload_0
         * 5: aload_1
         * 6: lload_2
         * 7: invokespecial #8                  // Method com/dropbox/client2/DropboxAPI$ChunkedUploader."<init>":(Lcom/dropbox/client2/DropboxAPI;Ljava/io/InputStream;J)V
         * 10: areturn
         *  */
        // </editor-fold>
    }

    public ChunkedUploader getChunkedUploader(InputStream is, long length, int chunkSize) {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: new           #7                  // class com/dropbox/client2/DropboxAPI$ChunkedUploader
         * 3: dup
         * 4: aload_0
         * 5: aload_1
         * 6: lload_2
         * 7: iload         4
         * 9: invokespecial #9                  // Method com/dropbox/client2/DropboxAPI$ChunkedUploader."<init>":(Lcom/dropbox/client2/DropboxAPI;Ljava/io/InputStream;JI)V
         * 12: areturn
         *  */
        // </editor-fold>
    }

    public ChunkedUploadRequest chunkedUploadRequest(InputStream is, long length, ProgressListener listener, long offset, String uploadId) {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: lload         5
         * 2: lconst_0
         * 3: lcmp
         * 4: ifne          16
         * 7: iconst_0
         * 8: anewarray     #10                 // class java/lang/String
         * 11: astore        8
         * 13: goto          60
         * 16: iconst_4
         * 17: anewarray     #10                 // class java/lang/String
         * 20: dup
         * 21: iconst_0
         * 22: ldc           #11                 // String upload_id
         * 24: aastore
         * 25: dup
         * 26: iconst_1
         * 27: aload         7
         * 29: aastore
         * 30: dup
         * 31: iconst_2
         * 32: ldc           #12                 // String offset
         * 34: aastore
         * 35: dup
         * 36: iconst_3
         * 37: new           #13                 // class java/lang/StringBuilder
         * 40: dup
         * 41: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
         * 44: ldc           #15                 // String
         * 46: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 49: lload         5
         * 51: invokevirtual #17                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
         * 54: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 57: aastore
         * 58: astore        8
         * 60: aload_0
         * 61: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 64: invokeinterface #19,  1           // InterfaceMethod com/dropbox/client2/session/Session.getContentServer:()Ljava/lang/String;
         * 69: iconst_1
         * 70: ldc           #20                 // String /chunked_upload/
         * 72: aload         8
         * 74: invokestatic  #21                 // Method com/dropbox/client2/RESTUtility.buildURL:(Ljava/lang/String;ILjava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
         * 77: astore        9
         * 79: new           #22                 // class org/apache/http/client/methods/HttpPut
         * 82: dup
         * 83: aload         9
         * 85: invokespecial #23                 // Method org/apache/http/client/methods/HttpPut."<init>":(Ljava/lang/String;)V
         * 88: astore        10
         * 90: aload_0
         * 91: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 94: aload         10
         * 96: invokeinterface #24,  2           // InterfaceMethod com/dropbox/client2/session/Session.sign:(Lorg/apache/http/HttpRequest;)V
         * 101: new           #25                 // class org/apache/http/entity/InputStreamEntity
         * 104: dup
         * 105: aload_1
         * 106: lload_2
         * 107: invokespecial #26                 // Method org/apache/http/entity/InputStreamEntity."<init>":(Ljava/io/InputStream;J)V
         * 110: astore        11
         * 112: aload         11
         * 114: ldc           #27                 // String application/octet-stream
         * 116: invokevirtual #28                 // Method org/apache/http/entity/InputStreamEntity.setContentEncoding:(Ljava/lang/String;)V
         * 119: aload         11
         * 121: iconst_0
         * 122: invokevirtual #29                 // Method org/apache/http/entity/InputStreamEntity.setChunked:(Z)V
         * 125: aload         11
         * 127: astore        12
         * 129: aload         4
         * 131: ifnull        147
         * 134: new           #30                 // class com/dropbox/client2/ProgressListener$ProgressHttpEntity
         * 137: dup
         * 138: aload         12
         * 140: aload         4
         * 142: invokespecial #31                 // Method com/dropbox/client2/ProgressListener$ProgressHttpEntity."<init>":(Lorg/apache/http/HttpEntity;Lcom/dropbox/client2/ProgressListener;)V
         * 145: astore        12
         * 147: aload         10
         * 149: aload         12
         * 151: invokevirtual #32                 // Method org/apache/http/client/methods/HttpPut.setEntity:(Lorg/apache/http/HttpEntity;)V
         * 154: new           #33                 // class com/dropbox/client2/DropboxAPI$ChunkedUploadRequest
         * 157: dup
         * 158: aload         10
         * 160: aload_0
         * 161: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 164: invokespecial #34                 // Method com/dropbox/client2/DropboxAPI$ChunkedUploadRequest."<init>":(Lorg/apache/http/client/methods/HttpUriRequest;Lcom/dropbox/client2/session/Session;)V
         * 167: areturn
         *  */
        // </editor-fold>
    }

    public SESS_T getSession() {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 4: areturn
         *  */
        // </editor-fold>
    }

    public Account accountInfo() throws DropboxException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: invokevirtual #35                 // Method assertAuthenticated:()V
         * 4: getstatic     #36                 // Field com/dropbox/client2/RESTUtility$RequestMethod.GET:Lcom/dropbox/client2/RESTUtility$RequestMethod;
         * 7: aload_0
         * 8: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 11: invokeinterface #37,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAPIServer:()Ljava/lang/String;
         * 16: ldc           #38                 // String /account/info
         * 18: iconst_1
         * 19: iconst_2
         * 20: anewarray     #10                 // class java/lang/String
         * 23: dup
         * 24: iconst_0
         * 25: ldc           #39                 // String locale
         * 27: aastore
         * 28: dup
         * 29: iconst_1
         * 30: aload_0
         * 31: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 34: invokeinterface #40,  1           // InterfaceMethod com/dropbox/client2/session/Session.getLocale:()Ljava/util/Locale;
         * 39: invokevirtual #41                 // Method java/util/Locale.toString:()Ljava/lang/String;
         * 42: aastore
         * 43: aload_0
         * 44: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 47: invokestatic  #42                 // Method com/dropbox/client2/RESTUtility.request:(Lcom/dropbox/client2/RESTUtility$RequestMethod;Ljava/lang/String;Ljava/lang/String;I[Ljava/lang/String;Lcom/dropbox/client2/session/Session;)Ljava/lang/Object;
         * 50: checkcast     #43                 // class java/util/Map
         * 53: astore_1
         * 54: new           #44                 // class com/dropbox/client2/DropboxAPI$Account
         * 57: dup
         * 58: aload_1
         * 59: invokespecial #45                 // Method com/dropbox/client2/DropboxAPI$Account."<init>":(Ljava/util/Map;)V
         * 62: areturn
         *  */
        // </editor-fold>
    }

    public DropboxFileInfo getFile(String path, String rev, OutputStream os, ProgressListener listener) throws DropboxException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: aload_1
         * 2: aload_2
         * 3: invokevirtual #46                 // Method getFileStream:(Ljava/lang/String;Ljava/lang/String;)Lcom/dropbox/client2/DropboxAPI$DropboxInputStream;
         * 6: astore        5
         * 8: aload         5
         * 10: aload_3
         * 11: aload         4
         * 13: invokevirtual #47                 // Method com/dropbox/client2/DropboxAPI$DropboxInputStream.copyStreamToOutput:(Ljava/io/OutputStream;Lcom/dropbox/client2/ProgressListener;)V
         * 16: aload         5
         * 18: invokevirtual #48                 // Method com/dropbox/client2/DropboxAPI$DropboxInputStream.getFileInfo:()Lcom/dropbox/client2/DropboxAPI$DropboxFileInfo;
         * 21: areturn
         *  */
        // </editor-fold>
    }

    public DropboxInputStream getFileStream(String path, String rev) throws DropboxException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: invokevirtual #35                 // Method assertAuthenticated:()V
         * 4: aload_1
         * 5: ldc           #49                 // String /
         * 7: invokevirtual #50                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
         * 10: ifne          33
         * 13: new           #13                 // class java/lang/StringBuilder
         * 16: dup
         * 17: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
         * 20: ldc           #49                 // String /
         * 22: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 25: aload_1
         * 26: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 29: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 32: astore_1
         * 33: new           #13                 // class java/lang/StringBuilder
         * 36: dup
         * 37: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
         * 40: ldc           #51                 // String /files/
         * 42: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 45: aload_0
         * 46: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 49: invokeinterface #52,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAccessType:()Lcom/dropbox/client2/session/Session$AccessType;
         * 54: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
         * 57: aload_1
         * 58: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 61: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 64: astore_3
         * 65: iconst_4
         * 66: anewarray     #10                 // class java/lang/String
         * 69: dup
         * 70: iconst_0
         * 71: ldc           #54                 // String rev
         * 73: aastore
         * 74: dup
         * 75: iconst_1
         * 76: aload_2
         * 77: aastore
         * 78: dup
         * 79: iconst_2
         * 80: ldc           #39                 // String locale
         * 82: aastore
         * 83: dup
         * 84: iconst_3
         * 85: aload_0
         * 86: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 89: invokeinterface #40,  1           // InterfaceMethod com/dropbox/client2/session/Session.getLocale:()Ljava/util/Locale;
         * 94: invokevirtual #41                 // Method java/util/Locale.toString:()Ljava/lang/String;
         * 97: aastore
         * 98: astore        4
         * 100: aload_0
         * 101: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 104: invokeinterface #19,  1           // InterfaceMethod com/dropbox/client2/session/Session.getContentServer:()Ljava/lang/String;
         * 109: iconst_1
         * 110: aload_3
         * 111: aload         4
         * 113: invokestatic  #21                 // Method com/dropbox/client2/RESTUtility.buildURL:(Ljava/lang/String;ILjava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
         * 116: astore        5
         * 118: new           #55                 // class org/apache/http/client/methods/HttpGet
         * 121: dup
         * 122: aload         5
         * 124: invokespecial #56                 // Method org/apache/http/client/methods/HttpGet."<init>":(Ljava/lang/String;)V
         * 127: astore        6
         * 129: aload_0
         * 130: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 133: aload         6
         * 135: invokeinterface #24,  2           // InterfaceMethod com/dropbox/client2/session/Session.sign:(Lorg/apache/http/HttpRequest;)V
         * 140: aload_0
         * 141: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 144: aload         6
         * 146: invokestatic  #57                 // Method com/dropbox/client2/RESTUtility.execute:(Lcom/dropbox/client2/session/Session;Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/HttpResponse;
         * 149: astore        7
         * 151: new           #58                 // class com/dropbox/client2/DropboxAPI$DropboxInputStream
         * 154: dup
         * 155: aload         6
         * 157: aload         7
         * 159: invokespecial #59                 // Method com/dropbox/client2/DropboxAPI$DropboxInputStream."<init>":(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/HttpResponse;)V
         * 162: areturn
         *  */
        // </editor-fold>
    }

    public Entry putFile(String path, InputStream is, long length, String parentRev, ProgressListener listener) throws DropboxException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: aload_1
         * 2: aload_2
         * 3: lload_3
         * 4: aload         5
         * 6: aload         6
         * 8: invokevirtual #60                 // Method putFileRequest:(Ljava/lang/String;Ljava/io/InputStream;JLjava/lang/String;Lcom/dropbox/client2/ProgressListener;)Lcom/dropbox/client2/DropboxAPI$UploadRequest;
         * 11: astore        7
         * 13: aload         7
         * 15: invokeinterface #61,  1           // InterfaceMethod com/dropbox/client2/DropboxAPI$UploadRequest.upload:()Lcom/dropbox/client2/DropboxAPI$Entry;
         * 20: areturn
         *  */
        // </editor-fold>
    }

    public UploadRequest putFileRequest(String path, InputStream is, long length, String parentRev, ProgressListener listener) throws DropboxException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: aload_1
         * 2: aload_2
         * 3: lload_3
         * 4: iconst_0
         * 5: aload         5
         * 7: aload         6
         * 9: invokespecial #62                 // Method putFileRequest:(Ljava/lang/String;Ljava/io/InputStream;JZLjava/lang/String;Lcom/dropbox/client2/ProgressListener;)Lcom/dropbox/client2/DropboxAPI$UploadRequest;
         * 12: areturn
         *  */
        // </editor-fold>
    }

    public Entry putFileOverwrite(String path, InputStream is, long length, ProgressListener listener) throws DropboxException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: aload_1
         * 2: aload_2
         * 3: lload_3
         * 4: aload         5
         * 6: invokevirtual #63                 // Method putFileOverwriteRequest:(Ljava/lang/String;Ljava/io/InputStream;JLcom/dropbox/client2/ProgressListener;)Lcom/dropbox/client2/DropboxAPI$UploadRequest;
         * 9: astore        6
         * 11: aload         6
         * 13: invokeinterface #61,  1           // InterfaceMethod com/dropbox/client2/DropboxAPI$UploadRequest.upload:()Lcom/dropbox/client2/DropboxAPI$Entry;
         * 18: areturn
         *  */
        // </editor-fold>
    }

    public UploadRequest putFileOverwriteRequest(String path, InputStream is, long length, ProgressListener listener) throws DropboxException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: aload_1
         * 2: aload_2
         * 3: lload_3
         * 4: iconst_1
         * 5: aconst_null
         * 6: aload         5
         * 8: invokespecial #62                 // Method putFileRequest:(Ljava/lang/String;Ljava/io/InputStream;JZLjava/lang/String;Lcom/dropbox/client2/ProgressListener;)Lcom/dropbox/client2/DropboxAPI$UploadRequest;
         * 11: areturn
         *  */
        // </editor-fold>
    }

    public DropboxFileInfo getThumbnail(String path, OutputStream os, ThumbSize size, ThumbFormat format, ProgressListener listener) throws DropboxException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: aload_1
         * 2: aload_3
         * 3: aload         4
         * 5: invokevirtual #64                 // Method getThumbnailStream:(Ljava/lang/String;Lcom/dropbox/client2/DropboxAPI$ThumbSize;Lcom/dropbox/client2/DropboxAPI$ThumbFormat;)Lcom/dropbox/client2/DropboxAPI$DropboxInputStream;
         * 8: astore        6
         * 10: aload         6
         * 12: aload_2
         * 13: aload         5
         * 15: invokevirtual #47                 // Method com/dropbox/client2/DropboxAPI$DropboxInputStream.copyStreamToOutput:(Ljava/io/OutputStream;Lcom/dropbox/client2/ProgressListener;)V
         * 18: aload         6
         * 20: invokevirtual #48                 // Method com/dropbox/client2/DropboxAPI$DropboxInputStream.getFileInfo:()Lcom/dropbox/client2/DropboxAPI$DropboxFileInfo;
         * 23: areturn
         *  */
        // </editor-fold>
    }

    public DropboxInputStream getThumbnailStream(String path, ThumbSize size, ThumbFormat format) throws DropboxException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: invokevirtual #35                 // Method assertAuthenticated:()V
         * 4: new           #13                 // class java/lang/StringBuilder
         * 7: dup
         * 8: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
         * 11: ldc           #65                 // String /thumbnails/
         * 13: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 16: aload_0
         * 17: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 20: invokeinterface #52,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAccessType:()Lcom/dropbox/client2/session/Session$AccessType;
         * 25: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
         * 28: aload_1
         * 29: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 32: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 35: astore        4
         * 37: bipush        6
         * 39: anewarray     #10                 // class java/lang/String
         * 42: dup
         * 43: iconst_0
         * 44: ldc           #66                 // String size
         * 46: aastore
         * 47: dup
         * 48: iconst_1
         * 49: aload_2
         * 50: invokevirtual #67                 // Method com/dropbox/client2/DropboxAPI$ThumbSize.toAPISize:()Ljava/lang/String;
         * 53: aastore
         * 54: dup
         * 55: iconst_2
         * 56: ldc           #68                 // String format
         * 58: aastore
         * 59: dup
         * 60: iconst_3
         * 61: aload_3
         * 62: invokevirtual #69                 // Method com/dropbox/client2/DropboxAPI$ThumbFormat.toString:()Ljava/lang/String;
         * 65: aastore
         * 66: dup
         * 67: iconst_4
         * 68: ldc           #39                 // String locale
         * 70: aastore
         * 71: dup
         * 72: iconst_5
         * 73: aload_0
         * 74: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 77: invokeinterface #40,  1           // InterfaceMethod com/dropbox/client2/session/Session.getLocale:()Ljava/util/Locale;
         * 82: invokevirtual #41                 // Method java/util/Locale.toString:()Ljava/lang/String;
         * 85: aastore
         * 86: astore        5
         * 88: getstatic     #36                 // Field com/dropbox/client2/RESTUtility$RequestMethod.GET:Lcom/dropbox/client2/RESTUtility$RequestMethod;
         * 91: aload_0
         * 92: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 95: invokeinterface #19,  1           // InterfaceMethod com/dropbox/client2/session/Session.getContentServer:()Ljava/lang/String;
         * 100: aload         4
         * 102: iconst_1
         * 103: aload         5
         * 105: aload_0
         * 106: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 109: invokestatic  #70                 // Method com/dropbox/client2/RESTUtility.streamRequest:(Lcom/dropbox/client2/RESTUtility$RequestMethod;Ljava/lang/String;Ljava/lang/String;I[Ljava/lang/String;Lcom/dropbox/client2/session/Session;)Lcom/dropbox/client2/DropboxAPI$RequestAndResponse;
         * 112: astore        6
         * 114: new           #58                 // class com/dropbox/client2/DropboxAPI$DropboxInputStream
         * 117: dup
         * 118: aload         6
         * 120: getfield      #71                 // Field com/dropbox/client2/DropboxAPI$RequestAndResponse.request:Lorg/apache/http/client/methods/HttpUriRequest;
         * 123: aload         6
         * 125: getfield      #72                 // Field com/dropbox/client2/DropboxAPI$RequestAndResponse.response:Lorg/apache/http/HttpResponse;
         * 128: invokespecial #59                 // Method com/dropbox/client2/DropboxAPI$DropboxInputStream."<init>":(Lorg/apache/http/client/methods/HttpUriRequest;Lorg/apache/http/HttpResponse;)V
         * 131: areturn
         *  */
        // </editor-fold>
    }

    public Entry metadata(String path, int fileLimit, String hash, boolean list, String rev) throws DropboxException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: invokevirtual #35                 // Method assertAuthenticated:()V
         * 4: iload_2
         * 5: ifgt          12
         * 8: sipush        25000
         * 11: istore_2
         * 12: bipush        10
         * 14: anewarray     #10                 // class java/lang/String
         * 17: dup
         * 18: iconst_0
         * 19: ldc           #73                 // String file_limit
         * 21: aastore
         * 22: dup
         * 23: iconst_1
         * 24: iload_2
         * 25: invokestatic  #74                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
         * 28: aastore
         * 29: dup
         * 30: iconst_2
         * 31: ldc           #75                 // String hash
         * 33: aastore
         * 34: dup
         * 35: iconst_3
         * 36: aload_3
         * 37: aastore
         * 38: dup
         * 39: iconst_4
         * 40: ldc           #76                 // String list
         * 42: aastore
         * 43: dup
         * 44: iconst_5
         * 45: iload         4
         * 47: invokestatic  #77                 // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
         * 50: aastore
         * 51: dup
         * 52: bipush        6
         * 54: ldc           #54                 // String rev
         * 56: aastore
         * 57: dup
         * 58: bipush        7
         * 60: aload         5
         * 62: aastore
         * 63: dup
         * 64: bipush        8
         * 66: ldc           #39                 // String locale
         * 68: aastore
         * 69: dup
         * 70: bipush        9
         * 72: aload_0
         * 73: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 76: invokeinterface #40,  1           // InterfaceMethod com/dropbox/client2/session/Session.getLocale:()Ljava/util/Locale;
         * 81: invokevirtual #41                 // Method java/util/Locale.toString:()Ljava/lang/String;
         * 84: aastore
         * 85: astore        6
         * 87: new           #13                 // class java/lang/StringBuilder
         * 90: dup
         * 91: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
         * 94: ldc           #78                 // String /metadata/
         * 96: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 99: aload_0
         * 100: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 103: invokeinterface #52,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAccessType:()Lcom/dropbox/client2/session/Session$AccessType;
         * 108: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
         * 111: aload_1
         * 112: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 115: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 118: astore        7
         * 120: getstatic     #36                 // Field com/dropbox/client2/RESTUtility$RequestMethod.GET:Lcom/dropbox/client2/RESTUtility$RequestMethod;
         * 123: aload_0
         * 124: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 127: invokeinterface #37,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAPIServer:()Ljava/lang/String;
         * 132: aload         7
         * 134: iconst_1
         * 135: aload         6
         * 137: aload_0
         * 138: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 141: invokestatic  #42                 // Method com/dropbox/client2/RESTUtility.request:(Lcom/dropbox/client2/RESTUtility$RequestMethod;Ljava/lang/String;Ljava/lang/String;I[Ljava/lang/String;Lcom/dropbox/client2/session/Session;)Ljava/lang/Object;
         * 144: checkcast     #43                 // class java/util/Map
         * 147: astore        8
         * 149: new           #79                 // class com/dropbox/client2/DropboxAPI$Entry
         * 152: dup
         * 153: aload         8
         * 155: invokespecial #80                 // Method com/dropbox/client2/DropboxAPI$Entry."<init>":(Ljava/util/Map;)V
         * 158: areturn
         *  */
        // </editor-fold>
    }

    public List<Entry> revisions(String path, int revLimit) throws DropboxException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: invokevirtual #35                 // Method assertAuthenticated:()V
         * 4: iload_2
         * 5: ifgt          12
         * 8: sipush        1000
         * 11: istore_2
         * 12: iconst_4
         * 13: anewarray     #10                 // class java/lang/String
         * 16: dup
         * 17: iconst_0
         * 18: ldc           #81                 // String rev_limit
         * 20: aastore
         * 21: dup
         * 22: iconst_1
         * 23: iload_2
         * 24: invokestatic  #74                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
         * 27: aastore
         * 28: dup
         * 29: iconst_2
         * 30: ldc           #39                 // String locale
         * 32: aastore
         * 33: dup
         * 34: iconst_3
         * 35: aload_0
         * 36: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 39: invokeinterface #40,  1           // InterfaceMethod com/dropbox/client2/session/Session.getLocale:()Ljava/util/Locale;
         * 44: invokevirtual #41                 // Method java/util/Locale.toString:()Ljava/lang/String;
         * 47: aastore
         * 48: astore_3
         * 49: new           #13                 // class java/lang/StringBuilder
         * 52: dup
         * 53: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
         * 56: ldc           #82                 // String /revisions/
         * 58: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 61: aload_0
         * 62: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 65: invokeinterface #52,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAccessType:()Lcom/dropbox/client2/session/Session$AccessType;
         * 70: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
         * 73: aload_1
         * 74: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 77: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 80: astore        4
         * 82: getstatic     #36                 // Field com/dropbox/client2/RESTUtility$RequestMethod.GET:Lcom/dropbox/client2/RESTUtility$RequestMethod;
         * 85: aload_0
         * 86: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 89: invokeinterface #37,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAPIServer:()Ljava/lang/String;
         * 94: aload         4
         * 96: iconst_1
         * 97: aload_3
         * 98: aload_0
         * 99: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 102: invokestatic  #42                 // Method com/dropbox/client2/RESTUtility.request:(Lcom/dropbox/client2/RESTUtility$RequestMethod;Ljava/lang/String;Ljava/lang/String;I[Ljava/lang/String;Lcom/dropbox/client2/session/Session;)Ljava/lang/Object;
         * 105: checkcast     #83                 // class org/json/simple/JSONArray
         * 108: astore        5
         * 110: new           #84                 // class java/util/LinkedList
         * 113: dup
         * 114: invokespecial #85                 // Method java/util/LinkedList."<init>":()V
         * 117: astore        6
         * 119: aload         5
         * 121: invokevirtual #86                 // Method org/json/simple/JSONArray.iterator:()Ljava/util/Iterator;
         * 124: astore        7
         * 126: aload         7
         * 128: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
         * 133: ifeq          168
         * 136: aload         7
         * 138: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
         * 143: astore        8
         * 145: aload         6
         * 147: new           #79                 // class com/dropbox/client2/DropboxAPI$Entry
         * 150: dup
         * 151: aload         8
         * 153: checkcast     #43                 // class java/util/Map
         * 156: invokespecial #80                 // Method com/dropbox/client2/DropboxAPI$Entry."<init>":(Ljava/util/Map;)V
         * 159: invokeinterface #89,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
         * 164: pop
         * 165: goto          126
         * 168: aload         6
         * 170: areturn
         *  */
        // </editor-fold>
    }

    public List<Entry> search(String path, String query, int fileLimit, boolean includeDeleted) throws DropboxException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: invokevirtual #35                 // Method assertAuthenticated:()V
         * 4: iload_3
         * 5: ifgt          12
         * 8: sipush        10000
         * 11: istore_3
         * 12: new           #13                 // class java/lang/StringBuilder
         * 15: dup
         * 16: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
         * 19: ldc           #90                 // String /search/
         * 21: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 24: aload_0
         * 25: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 28: invokeinterface #52,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAccessType:()Lcom/dropbox/client2/session/Session$AccessType;
         * 33: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
         * 36: aload_1
         * 37: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 40: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 43: astore        5
         * 45: bipush        8
         * 47: anewarray     #10                 // class java/lang/String
         * 50: dup
         * 51: iconst_0
         * 52: ldc           #91                 // String query
         * 54: aastore
         * 55: dup
         * 56: iconst_1
         * 57: aload_2
         * 58: aastore
         * 59: dup
         * 60: iconst_2
         * 61: ldc           #73                 // String file_limit
         * 63: aastore
         * 64: dup
         * 65: iconst_3
         * 66: iload_3
         * 67: invokestatic  #74                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
         * 70: aastore
         * 71: dup
         * 72: iconst_4
         * 73: ldc           #92                 // String include_deleted
         * 75: aastore
         * 76: dup
         * 77: iconst_5
         * 78: iload         4
         * 80: invokestatic  #77                 // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
         * 83: aastore
         * 84: dup
         * 85: bipush        6
         * 87: ldc           #39                 // String locale
         * 89: aastore
         * 90: dup
         * 91: bipush        7
         * 93: aload_0
         * 94: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 97: invokeinterface #40,  1           // InterfaceMethod com/dropbox/client2/session/Session.getLocale:()Ljava/util/Locale;
         * 102: invokevirtual #41                 // Method java/util/Locale.toString:()Ljava/lang/String;
         * 105: aastore
         * 106: astore        6
         * 108: getstatic     #36                 // Field com/dropbox/client2/RESTUtility$RequestMethod.GET:Lcom/dropbox/client2/RESTUtility$RequestMethod;
         * 111: aload_0
         * 112: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 115: invokeinterface #37,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAPIServer:()Ljava/lang/String;
         * 120: aload         5
         * 122: iconst_1
         * 123: aload         6
         * 125: aload_0
         * 126: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 129: invokestatic  #42                 // Method com/dropbox/client2/RESTUtility.request:(Lcom/dropbox/client2/RESTUtility$RequestMethod;Ljava/lang/String;Ljava/lang/String;I[Ljava/lang/String;Lcom/dropbox/client2/session/Session;)Ljava/lang/Object;
         * 132: astore        7
         * 134: new           #93                 // class java/util/ArrayList
         * 137: dup
         * 138: invokespecial #94                 // Method java/util/ArrayList."<init>":()V
         * 141: astore        8
         * 143: aload         7
         * 145: instanceof    #83                 // class org/json/simple/JSONArray
         * 148: ifeq          217
         * 151: aload         7
         * 153: checkcast     #83                 // class org/json/simple/JSONArray
         * 156: astore        9
         * 158: aload         9
         * 160: invokevirtual #86                 // Method org/json/simple/JSONArray.iterator:()Ljava/util/Iterator;
         * 163: astore        10
         * 165: aload         10
         * 167: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
         * 172: ifeq          217
         * 175: aload         10
         * 177: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
         * 182: astore        11
         * 184: aload         11
         * 186: instanceof    #43                 // class java/util/Map
         * 189: ifeq          214
         * 192: new           #79                 // class com/dropbox/client2/DropboxAPI$Entry
         * 195: dup
         * 196: aload         11
         * 198: checkcast     #43                 // class java/util/Map
         * 201: invokespecial #80                 // Method com/dropbox/client2/DropboxAPI$Entry."<init>":(Ljava/util/Map;)V
         * 204: astore        12
         * 206: aload         8
         * 208: aload         12
         * 210: invokevirtual #95                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
         * 213: pop
         * 214: goto          165
         * 217: aload         8
         * 219: areturn
         *  */
        // </editor-fold>
    }

    public Entry move(String fromPath, String toPath) throws DropboxException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: invokevirtual #35                 // Method assertAuthenticated:()V
         * 4: bipush        8
         * 6: anewarray     #10                 // class java/lang/String
         * 9: dup
         * 10: iconst_0
         * 11: ldc           #96                 // String root
         * 13: aastore
         * 14: dup
         * 15: iconst_1
         * 16: aload_0
         * 17: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 20: invokeinterface #52,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAccessType:()Lcom/dropbox/client2/session/Session$AccessType;
         * 25: invokevirtual #97                 // Method com/dropbox/client2/session/Session$AccessType.toString:()Ljava/lang/String;
         * 28: aastore
         * 29: dup
         * 30: iconst_2
         * 31: ldc           #98                 // String from_path
         * 33: aastore
         * 34: dup
         * 35: iconst_3
         * 36: aload_1
         * 37: aastore
         * 38: dup
         * 39: iconst_4
         * 40: ldc           #99                 // String to_path
         * 42: aastore
         * 43: dup
         * 44: iconst_5
         * 45: aload_2
         * 46: aastore
         * 47: dup
         * 48: bipush        6
         * 50: ldc           #39                 // String locale
         * 52: aastore
         * 53: dup
         * 54: bipush        7
         * 56: aload_0
         * 57: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 60: invokeinterface #40,  1           // InterfaceMethod com/dropbox/client2/session/Session.getLocale:()Ljava/util/Locale;
         * 65: invokevirtual #41                 // Method java/util/Locale.toString:()Ljava/lang/String;
         * 68: aastore
         * 69: astore_3
         * 70: getstatic     #100                // Field com/dropbox/client2/RESTUtility$RequestMethod.POST:Lcom/dropbox/client2/RESTUtility$RequestMethod;
         * 73: aload_0
         * 74: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 77: invokeinterface #37,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAPIServer:()Ljava/lang/String;
         * 82: ldc           #101                // String /fileops/move
         * 84: iconst_1
         * 85: aload_3
         * 86: aload_0
         * 87: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 90: invokestatic  #42                 // Method com/dropbox/client2/RESTUtility.request:(Lcom/dropbox/client2/RESTUtility$RequestMethod;Ljava/lang/String;Ljava/lang/String;I[Ljava/lang/String;Lcom/dropbox/client2/session/Session;)Ljava/lang/Object;
         * 93: checkcast     #43                 // class java/util/Map
         * 96: astore        4
         * 98: new           #79                 // class com/dropbox/client2/DropboxAPI$Entry
         * 101: dup
         * 102: aload         4
         * 104: invokespecial #80                 // Method com/dropbox/client2/DropboxAPI$Entry."<init>":(Ljava/util/Map;)V
         * 107: areturn
         *  */
        // </editor-fold>
    }

    public Entry copy(String fromPath, String toPath) throws DropboxException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: invokevirtual #35                 // Method assertAuthenticated:()V
         * 4: bipush        8
         * 6: anewarray     #10                 // class java/lang/String
         * 9: dup
         * 10: iconst_0
         * 11: ldc           #96                 // String root
         * 13: aastore
         * 14: dup
         * 15: iconst_1
         * 16: aload_0
         * 17: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 20: invokeinterface #52,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAccessType:()Lcom/dropbox/client2/session/Session$AccessType;
         * 25: invokevirtual #97                 // Method com/dropbox/client2/session/Session$AccessType.toString:()Ljava/lang/String;
         * 28: aastore
         * 29: dup
         * 30: iconst_2
         * 31: ldc           #98                 // String from_path
         * 33: aastore
         * 34: dup
         * 35: iconst_3
         * 36: aload_1
         * 37: aastore
         * 38: dup
         * 39: iconst_4
         * 40: ldc           #99                 // String to_path
         * 42: aastore
         * 43: dup
         * 44: iconst_5
         * 45: aload_2
         * 46: aastore
         * 47: dup
         * 48: bipush        6
         * 50: ldc           #39                 // String locale
         * 52: aastore
         * 53: dup
         * 54: bipush        7
         * 56: aload_0
         * 57: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 60: invokeinterface #40,  1           // InterfaceMethod com/dropbox/client2/session/Session.getLocale:()Ljava/util/Locale;
         * 65: invokevirtual #41                 // Method java/util/Locale.toString:()Ljava/lang/String;
         * 68: aastore
         * 69: astore_3
         * 70: getstatic     #100                // Field com/dropbox/client2/RESTUtility$RequestMethod.POST:Lcom/dropbox/client2/RESTUtility$RequestMethod;
         * 73: aload_0
         * 74: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 77: invokeinterface #37,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAPIServer:()Ljava/lang/String;
         * 82: ldc           #102                // String /fileops/copy
         * 84: iconst_1
         * 85: aload_3
         * 86: aload_0
         * 87: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 90: invokestatic  #42                 // Method com/dropbox/client2/RESTUtility.request:(Lcom/dropbox/client2/RESTUtility$RequestMethod;Ljava/lang/String;Ljava/lang/String;I[Ljava/lang/String;Lcom/dropbox/client2/session/Session;)Ljava/lang/Object;
         * 93: checkcast     #43                 // class java/util/Map
         * 96: astore        4
         * 98: new           #79                 // class com/dropbox/client2/DropboxAPI$Entry
         * 101: dup
         * 102: aload         4
         * 104: invokespecial #80                 // Method com/dropbox/client2/DropboxAPI$Entry."<init>":(Ljava/util/Map;)V
         * 107: areturn
         *  */
        // </editor-fold>
    }

    public Entry createFolder(String path) throws DropboxException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: invokevirtual #35                 // Method assertAuthenticated:()V
         * 4: bipush        6
         * 6: anewarray     #10                 // class java/lang/String
         * 9: dup
         * 10: iconst_0
         * 11: ldc           #96                 // String root
         * 13: aastore
         * 14: dup
         * 15: iconst_1
         * 16: aload_0
         * 17: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 20: invokeinterface #52,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAccessType:()Lcom/dropbox/client2/session/Session$AccessType;
         * 25: invokevirtual #97                 // Method com/dropbox/client2/session/Session$AccessType.toString:()Ljava/lang/String;
         * 28: aastore
         * 29: dup
         * 30: iconst_2
         * 31: ldc           #103                // String path
         * 33: aastore
         * 34: dup
         * 35: iconst_3
         * 36: aload_1
         * 37: aastore
         * 38: dup
         * 39: iconst_4
         * 40: ldc           #39                 // String locale
         * 42: aastore
         * 43: dup
         * 44: iconst_5
         * 45: aload_0
         * 46: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 49: invokeinterface #40,  1           // InterfaceMethod com/dropbox/client2/session/Session.getLocale:()Ljava/util/Locale;
         * 54: invokevirtual #41                 // Method java/util/Locale.toString:()Ljava/lang/String;
         * 57: aastore
         * 58: astore_2
         * 59: getstatic     #100                // Field com/dropbox/client2/RESTUtility$RequestMethod.POST:Lcom/dropbox/client2/RESTUtility$RequestMethod;
         * 62: aload_0
         * 63: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 66: invokeinterface #37,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAPIServer:()Ljava/lang/String;
         * 71: ldc           #104                // String /fileops/create_folder
         * 73: iconst_1
         * 74: aload_2
         * 75: aload_0
         * 76: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 79: invokestatic  #42                 // Method com/dropbox/client2/RESTUtility.request:(Lcom/dropbox/client2/RESTUtility$RequestMethod;Ljava/lang/String;Ljava/lang/String;I[Ljava/lang/String;Lcom/dropbox/client2/session/Session;)Ljava/lang/Object;
         * 82: checkcast     #43                 // class java/util/Map
         * 85: astore_3
         * 86: new           #79                 // class com/dropbox/client2/DropboxAPI$Entry
         * 89: dup
         * 90: aload_3
         * 91: invokespecial #80                 // Method com/dropbox/client2/DropboxAPI$Entry."<init>":(Ljava/util/Map;)V
         * 94: areturn
         *  */
        // </editor-fold>
    }

    public void delete(String path) throws DropboxException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: invokevirtual #35                 // Method assertAuthenticated:()V
         * 4: bipush        6
         * 6: anewarray     #10                 // class java/lang/String
         * 9: dup
         * 10: iconst_0
         * 11: ldc           #96                 // String root
         * 13: aastore
         * 14: dup
         * 15: iconst_1
         * 16: aload_0
         * 17: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 20: invokeinterface #52,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAccessType:()Lcom/dropbox/client2/session/Session$AccessType;
         * 25: invokevirtual #97                 // Method com/dropbox/client2/session/Session$AccessType.toString:()Ljava/lang/String;
         * 28: aastore
         * 29: dup
         * 30: iconst_2
         * 31: ldc           #103                // String path
         * 33: aastore
         * 34: dup
         * 35: iconst_3
         * 36: aload_1
         * 37: aastore
         * 38: dup
         * 39: iconst_4
         * 40: ldc           #39                 // String locale
         * 42: aastore
         * 43: dup
         * 44: iconst_5
         * 45: aload_0
         * 46: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 49: invokeinterface #40,  1           // InterfaceMethod com/dropbox/client2/session/Session.getLocale:()Ljava/util/Locale;
         * 54: invokevirtual #41                 // Method java/util/Locale.toString:()Ljava/lang/String;
         * 57: aastore
         * 58: astore_2
         * 59: getstatic     #100                // Field com/dropbox/client2/RESTUtility$RequestMethod.POST:Lcom/dropbox/client2/RESTUtility$RequestMethod;
         * 62: aload_0
         * 63: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 66: invokeinterface #37,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAPIServer:()Ljava/lang/String;
         * 71: ldc           #105                // String /fileops/delete
         * 73: iconst_1
         * 74: aload_2
         * 75: aload_0
         * 76: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 79: invokestatic  #42                 // Method com/dropbox/client2/RESTUtility.request:(Lcom/dropbox/client2/RESTUtility$RequestMethod;Ljava/lang/String;Ljava/lang/String;I[Ljava/lang/String;Lcom/dropbox/client2/session/Session;)Ljava/lang/Object;
         * 82: pop
         * 83: return
         *  */
        // </editor-fold>
    }

    public Entry restore(String path, String rev) throws DropboxException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: invokevirtual #35                 // Method assertAuthenticated:()V
         * 4: iconst_4
         * 5: anewarray     #10                 // class java/lang/String
         * 8: dup
         * 9: iconst_0
         * 10: ldc           #54                 // String rev
         * 12: aastore
         * 13: dup
         * 14: iconst_1
         * 15: aload_2
         * 16: aastore
         * 17: dup
         * 18: iconst_2
         * 19: ldc           #39                 // String locale
         * 21: aastore
         * 22: dup
         * 23: iconst_3
         * 24: aload_0
         * 25: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 28: invokeinterface #40,  1           // InterfaceMethod com/dropbox/client2/session/Session.getLocale:()Ljava/util/Locale;
         * 33: invokevirtual #41                 // Method java/util/Locale.toString:()Ljava/lang/String;
         * 36: aastore
         * 37: astore_3
         * 38: new           #13                 // class java/lang/StringBuilder
         * 41: dup
         * 42: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
         * 45: ldc           #106                // String /restore/
         * 47: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 50: aload_0
         * 51: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 54: invokeinterface #52,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAccessType:()Lcom/dropbox/client2/session/Session$AccessType;
         * 59: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
         * 62: aload_1
         * 63: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 66: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 69: astore        4
         * 71: getstatic     #36                 // Field com/dropbox/client2/RESTUtility$RequestMethod.GET:Lcom/dropbox/client2/RESTUtility$RequestMethod;
         * 74: aload_0
         * 75: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 78: invokeinterface #37,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAPIServer:()Ljava/lang/String;
         * 83: aload         4
         * 85: iconst_1
         * 86: aload_3
         * 87: aload_0
         * 88: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 91: invokestatic  #42                 // Method com/dropbox/client2/RESTUtility.request:(Lcom/dropbox/client2/RESTUtility$RequestMethod;Ljava/lang/String;Ljava/lang/String;I[Ljava/lang/String;Lcom/dropbox/client2/session/Session;)Ljava/lang/Object;
         * 94: checkcast     #43                 // class java/util/Map
         * 97: astore        5
         * 99: new           #79                 // class com/dropbox/client2/DropboxAPI$Entry
         * 102: dup
         * 103: aload         5
         * 105: invokespecial #80                 // Method com/dropbox/client2/DropboxAPI$Entry."<init>":(Ljava/util/Map;)V
         * 108: areturn
         *  */
        // </editor-fold>
    }

    public DropboxLink media(String path, boolean ssl) throws DropboxException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: invokevirtual #35                 // Method assertAuthenticated:()V
         * 4: new           #13                 // class java/lang/StringBuilder
         * 7: dup
         * 8: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
         * 11: ldc           #107                // String /media/
         * 13: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 16: aload_0
         * 17: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 20: invokeinterface #52,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAccessType:()Lcom/dropbox/client2/session/Session$AccessType;
         * 25: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
         * 28: aload_1
         * 29: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 32: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 35: astore_3
         * 36: getstatic     #36                 // Field com/dropbox/client2/RESTUtility$RequestMethod.GET:Lcom/dropbox/client2/RESTUtility$RequestMethod;
         * 39: aload_0
         * 40: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 43: invokeinterface #37,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAPIServer:()Ljava/lang/String;
         * 48: aload_3
         * 49: iconst_1
         * 50: iconst_2
         * 51: anewarray     #10                 // class java/lang/String
         * 54: dup
         * 55: iconst_0
         * 56: ldc           #39                 // String locale
         * 58: aastore
         * 59: dup
         * 60: iconst_1
         * 61: aload_0
         * 62: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 65: invokeinterface #40,  1           // InterfaceMethod com/dropbox/client2/session/Session.getLocale:()Ljava/util/Locale;
         * 70: invokevirtual #41                 // Method java/util/Locale.toString:()Ljava/lang/String;
         * 73: aastore
         * 74: aload_0
         * 75: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 78: invokestatic  #42                 // Method com/dropbox/client2/RESTUtility.request:(Lcom/dropbox/client2/RESTUtility$RequestMethod;Ljava/lang/String;Ljava/lang/String;I[Ljava/lang/String;Lcom/dropbox/client2/session/Session;)Ljava/lang/Object;
         * 81: checkcast     #43                 // class java/util/Map
         * 84: astore        4
         * 86: new           #108                // class com/dropbox/client2/DropboxAPI$DropboxLink
         * 89: dup
         * 90: aload         4
         * 92: iload_2
         * 93: aconst_null
         * 94: invokespecial #109                // Method com/dropbox/client2/DropboxAPI$DropboxLink."<init>":(Ljava/util/Map;ZLcom/dropbox/client2/DropboxAPI$1;)V
         * 97: areturn
         *  */
        // </editor-fold>
    }

    public DropboxLink share(String path) throws DropboxException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: invokevirtual #35                 // Method assertAuthenticated:()V
         * 4: new           #13                 // class java/lang/StringBuilder
         * 7: dup
         * 8: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
         * 11: ldc           #110                // String /shares/
         * 13: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 16: aload_0
         * 17: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 20: invokeinterface #52,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAccessType:()Lcom/dropbox/client2/session/Session$AccessType;
         * 25: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
         * 28: aload_1
         * 29: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 32: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 35: astore_2
         * 36: getstatic     #36                 // Field com/dropbox/client2/RESTUtility$RequestMethod.GET:Lcom/dropbox/client2/RESTUtility$RequestMethod;
         * 39: aload_0
         * 40: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 43: invokeinterface #37,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAPIServer:()Ljava/lang/String;
         * 48: aload_2
         * 49: iconst_1
         * 50: iconst_2
         * 51: anewarray     #10                 // class java/lang/String
         * 54: dup
         * 55: iconst_0
         * 56: ldc           #39                 // String locale
         * 58: aastore
         * 59: dup
         * 60: iconst_1
         * 61: aload_0
         * 62: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 65: invokeinterface #40,  1           // InterfaceMethod com/dropbox/client2/session/Session.getLocale:()Ljava/util/Locale;
         * 70: invokevirtual #41                 // Method java/util/Locale.toString:()Ljava/lang/String;
         * 73: aastore
         * 74: aload_0
         * 75: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 78: invokestatic  #42                 // Method com/dropbox/client2/RESTUtility.request:(Lcom/dropbox/client2/RESTUtility$RequestMethod;Ljava/lang/String;Ljava/lang/String;I[Ljava/lang/String;Lcom/dropbox/client2/session/Session;)Ljava/lang/Object;
         * 81: checkcast     #43                 // class java/util/Map
         * 84: astore_3
         * 85: aload_3
         * 86: ldc           #111                // String url
         * 88: invokeinterface #112,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
         * 93: checkcast     #10                 // class java/lang/String
         * 96: astore        4
         * 98: aload_3
         * 99: ldc           #113                // String expires
         * 101: invokeinterface #112,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
         * 106: checkcast     #10                 // class java/lang/String
         * 109: invokestatic  #114                // Method com/dropbox/client2/RESTUtility.parseDate:(Ljava/lang/String;)Ljava/util/Date;
         * 112: astore        5
         * 114: aload         4
         * 116: ifnull        124
         * 119: aload         5
         * 121: ifnonnull     134
         * 124: new           #115                // class com/dropbox/client2/exception/DropboxParseException
         * 127: dup
         * 128: ldc           #116                // String Could not parse share response.
         * 130: invokespecial #117                // Method com/dropbox/client2/exception/DropboxParseException."<init>":(Ljava/lang/String;)V
         * 133: athrow
         * 134: new           #108                // class com/dropbox/client2/DropboxAPI$DropboxLink
         * 137: dup
         * 138: aload_3
         * 139: aconst_null
         * 140: invokespecial #118                // Method com/dropbox/client2/DropboxAPI$DropboxLink."<init>":(Ljava/util/Map;Lcom/dropbox/client2/DropboxAPI$1;)V
         * 143: areturn
         *  */
        // </editor-fold>
    }

    protected static boolean getFromMapAsBoolean(Map<String, Object> map, String name) {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: aload_1
         * 2: invokeinterface #112,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
         * 7: astore_2
         * 8: aload_2
         * 9: ifnull        27
         * 12: aload_2
         * 13: instanceof    #119                // class java/lang/Boolean
         * 16: ifeq          27
         * 19: aload_2
         * 20: checkcast     #119                // class java/lang/Boolean
         * 23: invokevirtual #120                // Method java/lang/Boolean.booleanValue:()Z
         * 26: ireturn
         * 27: iconst_0
         * 28: ireturn
         *  */
        // </editor-fold>
    }

    private UploadRequest putFileRequest(String path, InputStream is, long length, boolean overwrite, String parentRev, ProgressListener listener) throws DropboxException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_1
         * 1: ifnull        13
         * 4: aload_1
         * 5: ldc           #15                 // String
         * 7: invokevirtual #121                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
         * 10: ifeq          23
         * 13: new           #3                  // class java/lang/IllegalArgumentException
         * 16: dup
         * 17: ldc           #122                // String path is null or empty.
         * 19: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
         * 22: athrow
         * 23: aload_0
         * 24: invokevirtual #35                 // Method assertAuthenticated:()V
         * 27: aload_1
         * 28: ldc           #49                 // String /
         * 30: invokevirtual #50                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
         * 33: ifne          56
         * 36: new           #13                 // class java/lang/StringBuilder
         * 39: dup
         * 40: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
         * 43: ldc           #49                 // String /
         * 45: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 48: aload_1
         * 49: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 52: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 55: astore_1
         * 56: new           #13                 // class java/lang/StringBuilder
         * 59: dup
         * 60: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
         * 63: ldc           #123                // String /files_put/
         * 65: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 68: aload_0
         * 69: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 72: invokeinterface #52,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAccessType:()Lcom/dropbox/client2/session/Session$AccessType;
         * 77: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
         * 80: aload_1
         * 81: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 84: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 87: astore        8
         * 89: aload         6
         * 91: ifnonnull     98
         * 94: ldc           #15                 // String
         * 96: astore        6
         * 98: bipush        6
         * 100: anewarray     #10                 // class java/lang/String
         * 103: dup
         * 104: iconst_0
         * 105: ldc           #124                // String overwrite
         * 107: aastore
         * 108: dup
         * 109: iconst_1
         * 110: iload         5
         * 112: invokestatic  #77                 // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
         * 115: aastore
         * 116: dup
         * 117: iconst_2
         * 118: ldc           #125                // String parent_rev
         * 120: aastore
         * 121: dup
         * 122: iconst_3
         * 123: aload         6
         * 125: aastore
         * 126: dup
         * 127: iconst_4
         * 128: ldc           #39                 // String locale
         * 130: aastore
         * 131: dup
         * 132: iconst_5
         * 133: aload_0
         * 134: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 137: invokeinterface #40,  1           // InterfaceMethod com/dropbox/client2/session/Session.getLocale:()Ljava/util/Locale;
         * 142: invokevirtual #41                 // Method java/util/Locale.toString:()Ljava/lang/String;
         * 145: aastore
         * 146: astore        9
         * 148: aload_0
         * 149: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 152: invokeinterface #19,  1           // InterfaceMethod com/dropbox/client2/session/Session.getContentServer:()Ljava/lang/String;
         * 157: iconst_1
         * 158: aload         8
         * 160: aload         9
         * 162: invokestatic  #21                 // Method com/dropbox/client2/RESTUtility.buildURL:(Ljava/lang/String;ILjava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
         * 165: astore        10
         * 167: new           #22                 // class org/apache/http/client/methods/HttpPut
         * 170: dup
         * 171: aload         10
         * 173: invokespecial #23                 // Method org/apache/http/client/methods/HttpPut."<init>":(Ljava/lang/String;)V
         * 176: astore        11
         * 178: aload_0
         * 179: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 182: aload         11
         * 184: invokeinterface #24,  2           // InterfaceMethod com/dropbox/client2/session/Session.sign:(Lorg/apache/http/HttpRequest;)V
         * 189: new           #25                 // class org/apache/http/entity/InputStreamEntity
         * 192: dup
         * 193: aload_2
         * 194: lload_3
         * 195: invokespecial #26                 // Method org/apache/http/entity/InputStreamEntity."<init>":(Ljava/io/InputStream;J)V
         * 198: astore        12
         * 200: aload         12
         * 202: ldc           #27                 // String application/octet-stream
         * 204: invokevirtual #28                 // Method org/apache/http/entity/InputStreamEntity.setContentEncoding:(Ljava/lang/String;)V
         * 207: aload         12
         * 209: iconst_0
         * 210: invokevirtual #29                 // Method org/apache/http/entity/InputStreamEntity.setChunked:(Z)V
         * 213: aload         12
         * 215: astore        13
         * 217: aload         7
         * 219: ifnull        235
         * 222: new           #30                 // class com/dropbox/client2/ProgressListener$ProgressHttpEntity
         * 225: dup
         * 226: aload         13
         * 228: aload         7
         * 230: invokespecial #31                 // Method com/dropbox/client2/ProgressListener$ProgressHttpEntity."<init>":(Lorg/apache/http/HttpEntity;Lcom/dropbox/client2/ProgressListener;)V
         * 233: astore        13
         * 235: aload         11
         * 237: aload         13
         * 239: invokevirtual #32                 // Method org/apache/http/client/methods/HttpPut.setEntity:(Lorg/apache/http/HttpEntity;)V
         * 242: new           #126                // class com/dropbox/client2/DropboxAPI$BasicUploadRequest
         * 245: dup
         * 246: aload         11
         * 248: aload_0
         * 249: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 252: invokespecial #127                // Method com/dropbox/client2/DropboxAPI$BasicUploadRequest."<init>":(Lorg/apache/http/client/methods/HttpUriRequest;Lcom/dropbox/client2/session/Session;)V
         * 255: areturn
         *  */
        // </editor-fold>
    }

    private Entry commitChunkedUpload(String path, String uploadId, boolean overwrite, String parentRev) throws DropboxException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_1
         * 1: ifnull        13
         * 4: aload_1
         * 5: ldc           #15                 // String
         * 7: invokevirtual #121                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
         * 10: ifeq          23
         * 13: new           #3                  // class java/lang/IllegalArgumentException
         * 16: dup
         * 17: ldc           #122                // String path is null or empty.
         * 19: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
         * 22: athrow
         * 23: aload_0
         * 24: invokevirtual #35                 // Method assertAuthenticated:()V
         * 27: aload_1
         * 28: ldc           #49                 // String /
         * 30: invokevirtual #50                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
         * 33: ifne          56
         * 36: new           #13                 // class java/lang/StringBuilder
         * 39: dup
         * 40: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
         * 43: ldc           #49                 // String /
         * 45: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 48: aload_1
         * 49: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 52: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 55: astore_1
         * 56: new           #13                 // class java/lang/StringBuilder
         * 59: dup
         * 60: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
         * 63: ldc           #128                // String /commit_chunked_upload/
         * 65: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 68: aload_0
         * 69: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 72: invokeinterface #52,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAccessType:()Lcom/dropbox/client2/session/Session$AccessType;
         * 77: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
         * 80: aload_1
         * 81: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 84: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 87: astore        5
         * 89: bipush        8
         * 91: anewarray     #10                 // class java/lang/String
         * 94: dup
         * 95: iconst_0
         * 96: ldc           #124                // String overwrite
         * 98: aastore
         * 99: dup
         * 100: iconst_1
         * 101: iload_3
         * 102: invokestatic  #77                 // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
         * 105: aastore
         * 106: dup
         * 107: iconst_2
         * 108: ldc           #125                // String parent_rev
         * 110: aastore
         * 111: dup
         * 112: iconst_3
         * 113: aload         4
         * 115: aastore
         * 116: dup
         * 117: iconst_4
         * 118: ldc           #39                 // String locale
         * 120: aastore
         * 121: dup
         * 122: iconst_5
         * 123: aload_0
         * 124: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 127: invokeinterface #40,  1           // InterfaceMethod com/dropbox/client2/session/Session.getLocale:()Ljava/util/Locale;
         * 132: invokevirtual #41                 // Method java/util/Locale.toString:()Ljava/lang/String;
         * 135: aastore
         * 136: dup
         * 137: bipush        6
         * 139: ldc           #11                 // String upload_id
         * 141: aastore
         * 142: dup
         * 143: bipush        7
         * 145: aload_2
         * 146: aastore
         * 147: astore        6
         * 149: aload_0
         * 150: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 153: invokeinterface #19,  1           // InterfaceMethod com/dropbox/client2/session/Session.getContentServer:()Ljava/lang/String;
         * 158: iconst_1
         * 159: aload         5
         * 161: aload         6
         * 163: invokestatic  #21                 // Method com/dropbox/client2/RESTUtility.buildURL:(Ljava/lang/String;ILjava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
         * 166: astore        7
         * 168: new           #129                // class org/apache/http/client/methods/HttpPost
         * 171: dup
         * 172: aload         7
         * 174: invokespecial #130                // Method org/apache/http/client/methods/HttpPost."<init>":(Ljava/lang/String;)V
         * 177: astore        8
         * 179: aload_0
         * 180: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 183: aload         8
         * 185: invokeinterface #24,  2           // InterfaceMethod com/dropbox/client2/session/Session.sign:(Lorg/apache/http/HttpRequest;)V
         * 190: aload_0
         * 191: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 194: aload         8
         * 196: invokestatic  #57                 // Method com/dropbox/client2/RESTUtility.execute:(Lcom/dropbox/client2/session/Session;Lorg/apache/http/client/methods/HttpUriRequest;)Lorg/apache/http/HttpResponse;
         * 199: astore        9
         * 201: aload         9
         * 203: invokestatic  #131                // Method com/dropbox/client2/RESTUtility.parseAsJSON:(Lorg/apache/http/HttpResponse;)Ljava/lang/Object;
         * 206: checkcast     #43                 // class java/util/Map
         * 209: astore        10
         * 211: aload         10
         * 213: astore        11
         * 215: new           #79                 // class com/dropbox/client2/DropboxAPI$Entry
         * 218: dup
         * 219: aload         11
         * 221: invokespecial #80                 // Method com/dropbox/client2/DropboxAPI$Entry."<init>":(Ljava/util/Map;)V
         * 224: areturn
         *  */
        // </editor-fold>
    }

    public DeltaPage<Entry> delta(String cursor) throws DropboxException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: iconst_4
         * 1: anewarray     #10                 // class java/lang/String
         * 4: dup
         * 5: iconst_0
         * 6: ldc           #132                // String cursor
         * 8: aastore
         * 9: dup
         * 10: iconst_1
         * 11: aload_1
         * 12: aastore
         * 13: dup
         * 14: iconst_2
         * 15: ldc           #39                 // String locale
         * 17: aastore
         * 18: dup
         * 19: iconst_3
         * 20: aload_0
         * 21: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 24: invokeinterface #40,  1           // InterfaceMethod com/dropbox/client2/session/Session.getLocale:()Ljava/util/Locale;
         * 29: invokevirtual #41                 // Method java/util/Locale.toString:()Ljava/lang/String;
         * 32: aastore
         * 33: astore_2
         * 34: getstatic     #100                // Field com/dropbox/client2/RESTUtility$RequestMethod.POST:Lcom/dropbox/client2/RESTUtility$RequestMethod;
         * 37: aload_0
         * 38: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 41: invokeinterface #37,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAPIServer:()Ljava/lang/String;
         * 46: ldc           #133                // String /delta
         * 48: iconst_1
         * 49: aload_2
         * 50: aload_0
         * 51: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 54: invokestatic  #42                 // Method com/dropbox/client2/RESTUtility.request:(Lcom/dropbox/client2/RESTUtility$RequestMethod;Ljava/lang/String;Ljava/lang/String;I[Ljava/lang/String;Lcom/dropbox/client2/session/Session;)Ljava/lang/Object;
         * 57: astore_3
         * 58: new           #134                // class com/dropbox/client2/jsonextract/JsonThing
         * 61: dup
         * 62: aload_3
         * 63: invokespecial #135                // Method com/dropbox/client2/jsonextract/JsonThing."<init>":(Ljava/lang/Object;)V
         * 66: getstatic     #136                // Field com/dropbox/client2/DropboxAPI$Entry.JsonExtractor:Lcom/dropbox/client2/jsonextract/JsonExtractor;
         * 69: invokestatic  #137                // Method com/dropbox/client2/DropboxAPI$DeltaPage.extractFromJson:(Lcom/dropbox/client2/jsonextract/JsonThing;Lcom/dropbox/client2/jsonextract/JsonExtractor;)Lcom/dropbox/client2/DropboxAPI$DeltaPage;
         * 72: areturn
         * 73: astore        4
         * 75: new           #115                // class com/dropbox/client2/exception/DropboxParseException
         * 78: dup
         * 79: new           #13                 // class java/lang/StringBuilder
         * 82: dup
         * 83: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
         * 86: ldc           #139                // String Error parsing /delta results:
         * 88: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 91: aload         4
         * 93: invokevirtual #140                // Method com/dropbox/client2/jsonextract/JsonExtractionException.getMessage:()Ljava/lang/String;
         * 96: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 99: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 102: invokespecial #117                // Method com/dropbox/client2/exception/DropboxParseException."<init>":(Ljava/lang/String;)V
         * 105: athrow
         * Exception table:
         * from    to  target type
         * 58    72    73   Class com/dropbox/client2/jsonextract/JsonExtractionException
         *  */
        // </editor-fold>
    }

    public CreatedCopyRef createCopyRef(String sourcePath) throws DropboxException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: invokevirtual #35                 // Method assertAuthenticated:()V
         * 4: aload_1
         * 5: ldc           #49                 // String /
         * 7: invokevirtual #50                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
         * 10: ifne          40
         * 13: new           #3                  // class java/lang/IllegalArgumentException
         * 16: dup
         * 17: new           #13                 // class java/lang/StringBuilder
         * 20: dup
         * 21: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
         * 24: ldc           #141                // String 'sourcePath' must start with \"/\":
         * 26: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 29: aload_1
         * 30: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 33: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 36: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
         * 39: athrow
         * 40: iconst_2
         * 41: anewarray     #10                 // class java/lang/String
         * 44: dup
         * 45: iconst_0
         * 46: ldc           #39                 // String locale
         * 48: aastore
         * 49: dup
         * 50: iconst_1
         * 51: aload_0
         * 52: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 55: invokeinterface #40,  1           // InterfaceMethod com/dropbox/client2/session/Session.getLocale:()Ljava/util/Locale;
         * 60: invokevirtual #41                 // Method java/util/Locale.toString:()Ljava/lang/String;
         * 63: aastore
         * 64: astore_2
         * 65: new           #13                 // class java/lang/StringBuilder
         * 68: dup
         * 69: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
         * 72: ldc           #142                // String /copy_ref/
         * 74: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 77: aload_0
         * 78: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 81: invokeinterface #52,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAccessType:()Lcom/dropbox/client2/session/Session$AccessType;
         * 86: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
         * 89: aload_1
         * 90: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 93: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 96: astore_3
         * 97: getstatic     #36                 // Field com/dropbox/client2/RESTUtility$RequestMethod.GET:Lcom/dropbox/client2/RESTUtility$RequestMethod;
         * 100: aload_0
         * 101: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 104: invokeinterface #37,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAPIServer:()Ljava/lang/String;
         * 109: aload_3
         * 110: iconst_1
         * 111: aload_2
         * 112: aload_0
         * 113: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 116: invokestatic  #42                 // Method com/dropbox/client2/RESTUtility.request:(Lcom/dropbox/client2/RESTUtility$RequestMethod;Ljava/lang/String;Ljava/lang/String;I[Ljava/lang/String;Lcom/dropbox/client2/session/Session;)Ljava/lang/Object;
         * 119: astore        4
         * 121: new           #134                // class com/dropbox/client2/jsonextract/JsonThing
         * 124: dup
         * 125: aload         4
         * 127: invokespecial #135                // Method com/dropbox/client2/jsonextract/JsonThing."<init>":(Ljava/lang/Object;)V
         * 130: invokestatic  #143                // Method com/dropbox/client2/DropboxAPI$CreatedCopyRef.extractFromJson:(Lcom/dropbox/client2/jsonextract/JsonThing;)Lcom/dropbox/client2/DropboxAPI$CreatedCopyRef;
         * 133: areturn
         * 134: astore        5
         * 136: new           #115                // class com/dropbox/client2/exception/DropboxParseException
         * 139: dup
         * 140: new           #13                 // class java/lang/StringBuilder
         * 143: dup
         * 144: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
         * 147: ldc           #144                // String Error parsing /copy_ref results:
         * 149: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 152: aload         5
         * 154: invokevirtual #140                // Method com/dropbox/client2/jsonextract/JsonExtractionException.getMessage:()Ljava/lang/String;
         * 157: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 160: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 163: invokespecial #117                // Method com/dropbox/client2/exception/DropboxParseException."<init>":(Ljava/lang/String;)V
         * 166: athrow
         * Exception table:
         * from    to  target type
         * 121   133   134   Class com/dropbox/client2/jsonextract/JsonExtractionException
         *  */
        // </editor-fold>
    }

    public Entry addFromCopyRef(String sourceCopyRef, String targetPath) throws DropboxException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: invokevirtual #35                 // Method assertAuthenticated:()V
         * 4: aload_2
         * 5: ldc           #49                 // String /
         * 7: invokevirtual #50                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
         * 10: ifne          40
         * 13: new           #3                  // class java/lang/IllegalArgumentException
         * 16: dup
         * 17: new           #13                 // class java/lang/StringBuilder
         * 20: dup
         * 21: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
         * 24: ldc           #145                // String 'targetPath' doesn't start with \"/\":
         * 26: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 29: aload_2
         * 30: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
         * 33: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         * 36: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
         * 39: athrow
         * 40: bipush        8
         * 42: anewarray     #10                 // class java/lang/String
         * 45: dup
         * 46: iconst_0
         * 47: ldc           #39                 // String locale
         * 49: aastore
         * 50: dup
         * 51: iconst_1
         * 52: aload_0
         * 53: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 56: invokeinterface #40,  1           // InterfaceMethod com/dropbox/client2/session/Session.getLocale:()Ljava/util/Locale;
         * 61: invokevirtual #41                 // Method java/util/Locale.toString:()Ljava/lang/String;
         * 64: aastore
         * 65: dup
         * 66: iconst_2
         * 67: ldc           #96                 // String root
         * 69: aastore
         * 70: dup
         * 71: iconst_3
         * 72: aload_0
         * 73: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 76: invokeinterface #52,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAccessType:()Lcom/dropbox/client2/session/Session$AccessType;
         * 81: invokevirtual #97                 // Method com/dropbox/client2/session/Session$AccessType.toString:()Ljava/lang/String;
         * 84: aastore
         * 85: dup
         * 86: iconst_4
         * 87: ldc           #146                // String from_copy_ref
         * 89: aastore
         * 90: dup
         * 91: iconst_5
         * 92: aload_1
         * 93: aastore
         * 94: dup
         * 95: bipush        6
         * 97: ldc           #99                 // String to_path
         * 99: aastore
         * 100: dup
         * 101: bipush        7
         * 103: aload_2
         * 104: aastore
         * 105: astore_3
         * 106: ldc           #102                // String /fileops/copy
         * 108: astore        4
         * 110: getstatic     #36                 // Field com/dropbox/client2/RESTUtility$RequestMethod.GET:Lcom/dropbox/client2/RESTUtility$RequestMethod;
         * 113: aload_0
         * 114: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 117: invokeinterface #37,  1           // InterfaceMethod com/dropbox/client2/session/Session.getAPIServer:()Ljava/lang/String;
         * 122: aload         4
         * 124: iconst_1
         * 125: aload_3
         * 126: aload_0
         * 127: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 130: invokestatic  #42                 // Method com/dropbox/client2/RESTUtility.request:(Lcom/dropbox/client2/RESTUtility$RequestMethod;Ljava/lang/String;Ljava/lang/String;I[Ljava/lang/String;Lcom/dropbox/client2/session/Session;)Ljava/lang/Object;
         * 133: checkcast     #43                 // class java/util/Map
         * 136: astore        5
         * 138: new           #79                 // class com/dropbox/client2/DropboxAPI$Entry
         * 141: dup
         * 142: aload         5
         * 144: invokespecial #80                 // Method com/dropbox/client2/DropboxAPI$Entry."<init>":(Ljava/util/Map;)V
         * 147: areturn
         *  */
        // </editor-fold>
    }

    protected void assertAuthenticated() throws DropboxUnlinkedException {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: getfield      #6                  // Field session:Lcom/dropbox/client2/session/Session;
         * 4: invokeinterface #147,  1          // InterfaceMethod com/dropbox/client2/session/Session.isLinked:()Z
         * 9: ifne          20
         * 12: new           #148                // class com/dropbox/client2/exception/DropboxUnlinkedException
         * 15: dup
         * 16: invokespecial #149                // Method com/dropbox/client2/exception/DropboxUnlinkedException."<init>":()V
         * 19: athrow
         * 20: return
         *  */
        // </editor-fold>
    }

    protected static long getFromMapAsLong(Map<String, Object> map, String name) {
        // <editor-fold defaultstate="collapsed" desc="Compiled Code">
        /* 0: aload_0
         * 1: aload_1
         * 2: invokeinterface #112,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
         * 7: astore_2
         * 8: lconst_0
         * 9: lstore_3
         * 10: aload_2
         * 11: ifnull        49
         * 14: aload_2
         * 15: instanceof    #150                // class java/lang/Number
         * 18: ifeq          32
         * 21: aload_2
         * 22: checkcast     #150                // class java/lang/Number
         * 25: invokevirtual #151                // Method java/lang/Number.longValue:()J
         * 28: lstore_3
         * 29: goto          49
         * 32: aload_2
         * 33: instanceof    #10                 // class java/lang/String
         * 36: ifeq          49
         * 39: aload_2
         * 40: checkcast     #10                 // class java/lang/String
         * 43: bipush        16
         * 45: invokestatic  #152                // Method java/lang/Long.parseLong:(Ljava/lang/String;I)J
         * 48: lstore_3
         * 49: lload_3
         * 50: lreturn
         *  */
        // </editor-fold>
    }
}

